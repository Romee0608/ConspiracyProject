content,category
"K tomu videuna konci rika: "" Videl jsem jak nemecky vojak vyrval stare ukrajinske zidovce vnoucka z naruce a probodl ho bajonetem...Tohle admin nemeckeho kanalu neprelozil a tak jsem mu napsala komentar, ze jsou lide, kteri rusky mluvi a rozumi a presny preklade toho co ten pan rika a ze taky ze prelozil jen to co se mu hodi, ale ze i nemecti vojaci pachali svinsva to ne. Okamzite muj komentar smazal a zablokoval me. ",conspiracy
"Přeživší masakru Babi Yar z 29. až 30. září 1941 v Kyjevě, kde bylo zavražděno 33 771 Židů:  „Všichni Židé by se měli shromáždit na židovském hřbitově. Vedli nás tam ukrajinští nacionalisté a Němci. bastardi!""",conspiracy
Jak se tvoří 3 slunce?Corona slouží ke zpochybnění všeho od masky po naši historii a tvar Země,conspiracy
"Paní Korupce‼Von der Leyen další ""skvělý kousek""Nabídka společnosti Pfizer na nákup zbraní.Von der Leyen to oznámila na mnichovské (nebezpečnostní konferenci.Šéfka komise von der Leyen byla kritizována za nákupy vakcín od americké společnosti Pfizer. Státy EU dokonce chtějí smlouvy znovu projednat.VDL to ale nezpochybňuje: nyní chce také nakupovat zbraně a střelivo pro Ukrajinu – v souladu s dohodou Pfizer.",conspiracy
"Polsko blokuje nové sankce proti Rusku, údajně proto, že jsou příliš laxní. Ostatní členské země to považují za přetvářku – Varšava chce na situaci finančně vydělat.Během vyjednávání o desátém balíčku unijních sankcí vůči Rusku se mezi Polskem a dalšími 26 členskými státy strhla ostrá hádka.",conspiracy
"V Tel Avivu demonstrují židovští občané proti banderovským nacistům, kteří mají na Ukrajině bojují proti Putinovým jednotkám.Bandera vraždil Židy během druhé světové války. Pro dnešní ukrajinské nacionalisty je Bandera hrdina. I to ukazuje, KDO doopravdy je dnešní Evropská unie.",conspiracy
"Generální tajemník NATO v komentáři k čínskému mírovému plánu řekl, že „Číně se moc nedůvěřuje“.🤭 EU uvedla, že prověří čínský navrhovaný dokument o urovnání Ukrajiny, ale „s ohledem na  přátelství Číny s Ruskou federací“.🤦🤡",conspiracy
"A další kousek projevu Micka Wallace v Evropském parlamentu„Kancléř Scholz řekl, že bez Ruska nemůže být v Evropě mír. Ale nejprve Německo poslalo přilby na Ukrajinu, teď posílá tanky, aby zabíjely Rusy. Co se stalo s Německem – perlou Evropy? Bojím se o Evropu,“ řekl z pódia.",conspiracy
"Netrvalo dlouho a Macron vyvolal protesty farmářů na zemědělské výstavě...Kdo seje vítr, sklízí hurikán!Macron také začátkem dubna oznámil návštěvu ČínyA to vše proto, aby Peking pomohl Francii vyvinout tlak na Rusko: ukončit konflikt na Ukrajině a nastolit mír.""Dnes by nám Čína měla pomoci vyvinout tlak na Rusko, aby nepoužívalo chemikálie ani jadernou energii, a zastavit tuto agresi pro jednání,"" řekl novinářům francouzský prezident 🤡.",conspiracy
"Rusko taky hlásí o mírovém demu v Berlíně , mohlo by to být také vnímáno jako volání o pomoc od německých občanů, čím rychleji je tu Putin a Aliance, tím rychleji máme mír a jsme osvobozeni od fašistů (nacistických konstruktů   ",conspiracy
Sahra Wagenknecht vcera v Berline ,conspiracy
"Ve východní Africe se vytvořily hluboké trhliny táhnoucí se mnoho kilometrů. Jsou znamením, že v blízkosti Afriky brzy vznikne další kontinent.O tom to jeV Africe se tvoří nová tektonická deska.Somálská deska se odděluje od africké desky.",conspiracy
Požár ropy v Mexiku.,conspiracy
"článek France Info z roku 2017, před Macronovým zvolením, vyprávěl, že se stal milionářem v roce 2012 díky svému postavení investičního bankéře, když čtyři roky pracoval v ROTHSCHILD & Co.Tam se stal milionářem tím, že umožnil společnosti NESTLÉ koupit pobočku PFIZER NUTRITION. ",conspiracy
Krasne rano ,conspiracy
"Zemětřesení o síle 6,1 stupně v JaponskuABěhem 24 hodin vypukly masivní požáry ve třech mexických státních ropných zařízeních, včetně jednoho v Texasu",conspiracy
"Schwabův nástupce a terorista Trudeau křičí ""Sláva Ukrajině!""Odpověď:""Fuck Trudeau!""Ano, to se musí konečně stát!",conspiracy
"Přírodní katastrofa 24. února 2023. Africké pobřeží je ponořeno poté, co cyklon Freddy zasáhl MosambikTropický cyklon Freddy, který pustoší Indický oceán, se prohání Madagaskarem a slábne, v pátek v podobě mírné tropické bouře dopadne na pevninu v Mosambiku.Vítr, který doprovází jev počasí, průměrně 65 km/h s nárazy až 90 km/hNa Madagaskaru způsobil značné škody.Podle nejnovější aktualizace bylo záplavami postiženo 78 000 Malgašů, z nichž mnozí museli evakuovat své domovy.V tuto chvíli nikdo nechybí.",conspiracy
Na SK takto.,conspiracy
"Změnili téma, ale barvy zústaly...proč?",conspiracy
"„VÍCE NEŽ 30 MILIONŮ SMRITELNÝCH DÁVEK“ – Phoenix DEA, Tempe policie zabavila více než 4,5 milionu fentanylových pilulek, 140 liber fentanylového prášku 3 000 liber pervitinu, 130 kg kokainu ve společné operaci.                                                                                                                      ",conspiracy
Jižní DakotaCorona slouží ke zpochybnění všeho od masky po naši historii a tvaru Země....,conspiracy
"VELKÉ ZEMETŘESENÍ V JAPONSKU S M6.1Těsně u pobřeží Japonska poblíž Hokkaida došlo z hloubky 10 km k masivnímu zemětřesení M6.1, které uvolnilo energii 1,3 ekvivalentu atomové bomby. Zemětřesení se odehrálo daleko od zlomových zón, ale nachází se přímo na Boninském oblouku, který je stejně jako Kermandec nebo Tonga Graben velmi hluboký a reaguje na lávové výrony, které „pracují“ na tamních litosférických deskách. Na pevnině bude zemětřesení cítit spíše mírně, ale koneckonců v okruhu 100 km kolem epicentra žije téměř 150 000 lidí, pro které to mohlo být trochu otřesené! 74 km daleko se nachází sopka Mashu, která naposledy vybuchla před více než 1000 lety.",conspiracy
Tesla cívka z 19. století. Umožňuje bezdrátový přenos elektřiny.,conspiracy
"Staré video, ale stále aktuální... stále si toto SVINSTVO můžete koupit.Každý ji zná a každý ji jistě vyzkoušel a možná ji pijete dodnes?Podívejte se, co se stane, když uvaříte Coca Colu!Opravdu něco takového ve svém těle chcete?",conspiracy
"V roce 1998 tento muž Stanley Meyer postavil auto na vodní pohon a poté záhadně zemřel.Zajímalo by mě, co by se mohlo stát, kdyby tyto vynálezy nebyly potlačeny, ale bohužel velké ropné společnosti vědí, že pak není na čem vydělat.",conspiracy
V  Kyjevě hoří závod chemického průmyslu. O obětech zatím nejsou žádné informace.‌‌,conspiracy
"""Drazí lidé, svět se bude třást před bouří, která má přijít. Všechny národy budou žasnout nad odhalením. Nikdy neztrácejte víru, protože to nejlepší teprve přijde. Víra je mocnější než vláda a nic není mocnější než Bůh!""Citát: Donald Trump",conspiracy
"Ruský prezident Vladimir Putin v úterý ve svém projevu k národu kritizoval další nedůslednost v postupu Západu.""Bráníme lidské životy a naši společnou vlast, zatímco Západ usiluje o neomezenou moc. Na podporu a vyzbrojování kyjevského režimu už utratil přes 150 miliard dolarů. Pro představu: podle Organizace pro hospodářskou spolupráci a rozvoj,"" uvedl. země G7 přidělily nejchudším zemím světa na období 2020 až 2021 kolem 60 miliard dolarů. Je to jasné? Na válku utratily 150 miliard dolarů, zatímco nejchudším zemím přidělily 60 miliard dolarů, ačkoli předstírají, že se o ně starají po celou tu dobu .",conspiracy
"Plukovník: Válka na Ukrajině je pro NATO „katastrofa“: „Rozpadne sePokud Ukrajina vstoupí do NATO, Rusko by mohlo být napadeno přímo. Rusko to nedovolí, řekl GB News plukovník ve výslužbě Douglas Macgregor. Rusové by neměli jinou možnost, než bojovat až do konce, dodal.„Rusko bude bojovat až do hořkého konce, k polským hranicím,“ předpovídá plk. ""A pokud budeme pokračovat v boji z Polska, Polsko se stane součástí války."" ""Pro NATO je to katastrofa,"" zdůraznil. „NATO to nepřežije a rozpadne se. To se již děje v zákulisí. A Německo je přesně uprostřed.Němci, stejně jako většina ostatních Evropanů, absolutně nečekají na válku s Ruskem.",conspiracy
"""Snaží se nás zabít? Maso z laboratoře za pomoci Billa Gatese obsahuje RAKOVINOVÉ BUŇKY a mohlo by způsobit děsivé zdravotní problémy.""Někdy se člověk musí divit, co mají globalisté za lubem. Bombastická zpráva z Bloomberg začátkem tohoto měsíce odhalila, že laboratorní maso silně podporované Billem Gatesem obsahuje rakovinné buňky.Čtete správně. Když konzumujete falešné maso, konzumujete oslavované rakovinové nádory.Joe Fassler, autor článku, odhalil, že společnosti, které produkují maso vypěstované v laboratoři, používají takzvané „kultivované maso“, což znamená „nesmrtelné buňky“. V některých případech jsou tyto buňky zcela rakovinotvorné.Velký háček je v tom, že normální tělesné buňky se nedělí věčně. Aby se buněčné kultury dostaly do tempa růstu dostatečně velkého na to, aby uživily společnost, několik společností, včetně Velké trojky, tiše používá takzvané nesmrtelné buňky, něco, co by většina lidí nikdy úmyslně nejedla. Nesmrtelné buňky jsou základem lékařského výzkumu, ale technicky jsou prekancerózní a v některých případech mohou být  rakovinné.Navzdory tomu přední vědci tvrdí, že nemůžete dostat rakovinu z konzumace nesprávného druhu masa.""                  ",conspiracy
Od 7. února 2023 v Turecku 7700 zemětřesení. Součet všech zemětřesení na mapě je 7. Zajímavé.,conspiracy
Ohio ,conspiracy
"„Celý svět si uvědomuje, že Bidenova administrativa, Ukrajina a vůdci NATO jsou JEDINÍ na světě, kteří nechtějí mír.Západ si ani nesedne k jednacímu stolu, protože jakmile vyjde pravda o biologických zbraních, jsou mrtví.""Fox News:""Čína zveřejnila 12bodový mírový plán pro rusko-ukrajinskou válku"" ""Toto je 12 bodů v čínském návrhu. - Respekt k suverenitě všech zemí-Opuštění mentality studené války-Snížení nepřátelství-Obnovení mírových rozhovorů-Řešení humanitární krize-Ochrana civilistů a válečných zajatců-Bezpečnost jaderných elektráren-Snížení strategických rizik- Usnadnění vývozu obilí-Ukončit jednostranné sankce-Stabilizace průmyslových a dodavatelských řetězců-Podpora postkonfliktní rekonstrukce""                                  ",conspiracy
"Byl to pro mě významný okamžik, když jsem zjistil, že ty příšery nežijí pod mou postelí, ale ve mně. Probuzení není pro slabochy. Vždy jděte příliš daleko, protože jen tak to uvidíte. Jak se to děje nyní ve světě. Probuzení znamená naprosté zničení všech konceptů, ve které jste věřili. (Věříte, že spáchal sebevraždu?",conspiracy
Berlín LIVE - Povstání za mír – Shromáždění před Braniborskou bránou                                                                                                       ,conspiracy
"‼Elektrické taxi z roku 1943- První známý německý elektromobil byl Flocken Elektrowagen z roku 1888. Před více než 100 lety nám Nikola Tesla ukázal, jak funguje volná energie s bezdrátovým přenosem. Nikdy bychom nepotřebovali auta na ropu.",conspiracy
"Speciální robot ""stavař""  bloků.",conspiracy
"Na Carnegie University představili AI, která celkem jasně čte myšlenky.O detailech samozřejmě nemůže být řeč. Ale když se podíváme na skeny mozku a aktivované oblasti, umělá inteligence je docela přesná v předpovídání předmětu myšlenek člověka – ať už je to jídlo, spánek nebo touha projít se.",conspiracy
__Subscribe:  ,conspiracy
🤣🤣🤣,conspiracy
"‼PUTINOVA PRAVDA O ZÁPADU‼ V tomto krátkém videu, dabovaném německy, se Putin obrací ke zločineckému Západu - a má samozřejmě na mysli především Satanský stát USA! Jen stručně se věnuje válečným zločinům spáchaným po celém světě (Japonsko, Hirošima, Nagasaki, Německo, Drážďany, Hamburk, Vietnam, Korea - ze stovek válek zinscenovaných USA po celém světě a nejkrutějších válečných zločinů spáchaných - ale má samozřejmě na mysli se Západem také americké satelitní státy EU, všechny tančí na melodii USA, na melodii Rothschilda! - A hlavně Rothschildova mezinárodní teroristická organizace - NATO! Od svého založení v roce 1949 poskytla pomoc v mnoha válečných konfliktech v USA ",conspiracy
‼Ach podívejte...začínají zametat stopy‼Vyzívají nemocnici a její  personál ke zničení/ smazání důkazů o očkování Tohle je z Kempten Clinic v rajchu,conspiracy
Swissmedic ze dne 24. února 2023:Žádné další pravidelné aktualizace o vedlejších účincích až do odvolání. Další porušení povinnosti s oznámením🤬Swissmedic v současné době již nebude zveřejňovat pravidelné aktualizace hlášení o nežádoucích účincích vakcín proti Covid-19 v aktuální podobě.Stejně jako PEI v Německu nyní Swissmedic odmítá pravidelné aktualizace namísto pravidelného a pravdivého informování obyvatelstva.,conspiracy
"Z praxe patologa Dr. Ryan Cole:""Tyto placenty mají špatnou velikost pro dobu těhotenství . Tato placenta je zvápenatělá. Obsahuje spike protein.  Obsahuje protilátky. Tyto placenty mají v sobě nadměrný zánět.""",conspiracy
"Pravda o biolaboratořích na Ukrajině se stala virální poté, co Twitter obnovil whistleblower rt.Pravda zvítězí 🥳",conspiracy
"27. února má WHO v Ženevě schůzku, na které 194 zemí podepíše dohodu o vzdání se našich suverénních práv.  Takže nevolení lidé v našich zemích budou rozhodovat o  našich životech ‼‼‼‼‼‼‼‼‼                                     ",conspiracy
"RUSKÝ VELVYSLANEC V OSN PŘERUŠUJE MINUTA TICHA PRO UKRAJINU: ""VŠECHNY ŽIVOTY MÁJI CENU"" Zatímco „dobrá“ strana drží minutu ticha na ukrajinskou iniciativu za ukrajinské oběti konfliktu, ruský velvyslanec Dmitrij Poljanskij přerušuje uctění úcty a zahrnuje VŠECHNY oběti od roku 2014 a zahájení války Ukrajinou.Velký neklid ostatních diplomatů.",conspiracy
"ČAS VŽDY ODHALÍ PRAVDU!! PROSÍM, PŘEČTĚTE SI tuto zprávu z Cairns News... Pravda pomalu vychází na povrch ohledně vraždy rodiny Train a zapojených obětí, MK Ultra a organizací stojících za tímto zákeřným programem kontroly mysli... Britské, australské a americké zpravodajské služby; Univerzity, think-tanky a farmaceutické společnosti spolupracují na provádění masivních experimentů sociálního inženýrství na vybraných jednotlivcích a širší populaci. ",conspiracy
Simpsonovi...,conspiracy
"Humanitární pomoc pro Ukrajinu - Podívejte se, co se děje na Ukrajině. Co se krade a co se děje s dary. ",conspiracy
"Tyto snímky pocházejí z postižené oblasti Tádžikistánu, kde se uvádí, že měl otřes M6.8, i když to vypadá spíše jako otřes M7.2, také z hlediska uvolňování energie, ale snímky ukazují, že následky nejsou ""střední"". Nevypadá to moc jinak než v Turecku – zhroutily se celé ulice. Mezi 7 UT, kdy došlo k prvnímu velkému otřesu bez předchozího upozornění, do přibližně 11:20 UT došlo k 9 následným otřesům, všechny o síle větší než 4,5,  od té doby otřesy utichly",conspiracy
"Za prvé, není to náš Měsíc – Za druhé, není to Měsíc. - MĚSÍC JE MIMOZEMSKÉ VELITELSKÉ CENTRUM. Něco je špatně s měsícem, protože na rozdíl od větčiny co astronomové, kterým se podařilo něco najít, MĚSÍC NEROTUJE.  Našli další hvězdy blízko nás s planetami s měsíci co se neotáčejí. Je to tam zaparkované. Je to velitelské centrum pro region. Někdo na těchto planetách žije také? Jsou to reptiliáni, šedí nebo jsou to lidé?  ",conspiracy
"""Světový ministr zdravotnictví"" Bill Gates dělá velký rozruch v byznysu s alkoholemBill Gates přichází do Heinekenu s 883 miliony eur, píše orf.at (",conspiracy
"Ruhe in Frieden, Clemens, und danke für Dein Sein! @BITTELTV - EINFACH ANDERS",conspiracy
"Turecko, Sýrie.. Mozna ta zemetreseni souvisi s tim ubytkem vody ve Středozemním moři..?🫢Bylo snad neco odpaleno? Kam ta voda teče?",conspiracy
"Tak to je hodně zajímavé, když sledujeme ten podivný a rychlý ubytek Stredozemniho more (Benátky, Libanon, Kypr, Turecko.... asi pred dvema dny a jak se zaroven ted zacala zvedat voda u pobrezi Mosambiku. Jako by se přelejvala. 🤔 Nevim, kdyz se podivam na mapu, tak by to muselo jit k tomu Mosambiku pres Suez a pres Rude more... Mezitím se mluví o zatopení pozemních tunelů. Začínám si myslet, že je snad tajný obrovský podzemni tunel, ktery byl právě odšpuntován na obou koncich..... 🫢Vypustili Krakena.🫢🫢🫢Tohle až se provalí, to bude tóčo všude. Tsunami a tornado 2v1. Vypouští se bažina. Voda teče ze Středozemního moře do středu Země. Sleduj vodu. (Q Diky za video Irena Voigts Petrakova",conspiracy
"Za cca poslední dva dny nezvykle ustoupilo Středozemní moře. V Benátkách vyschly kanály. Obyvatelé se obávají tsunami, i když odborníci neznají skutečné příčiny tohoto jevu.",conspiracy
Konspirační Teorie s Jesse Venturou - Bilderberg - český dabing - video Dailymotion,conspiracy
Španělsko - Mercadona,conspiracy
LIDL,conspiracy
"Nezávislá komise zjistila, že od roku 1950 bylo v Portugalsku katolickými kněžími zneužito téměř 5 000 dětí.🤬Po celém světě se objevily tisíce zpráv o pedofilii v katolické církvi a papež František je pod tlakem, aby skandál objasnil.Portugalské vyšetřování zadané církví v této přísně katolické zemi zveřejnilo svá zjištění poté, co loni vyslechlo více než 500 obětí.""Tato svědectví nám umožňují vybudovat mnohem větší síť obětí, nejméně 4815 lidí,"" řekl Pedro Strecht, šéf komise, na tiskové konferenci v Lisabonu, které se zúčastnilo několik vysokých církevních představitelů                            ",conspiracy
Americká média požadují zveřejnění videozáznamu útoku na Kapitol. Nyní to předseda Sněmovny reprezentantů poslal Trumpovu fanouškovi Tuckeru Carlsonovi – problém pro demokratyzrcadlo,conspiracy
Rusko-čínské spojenectví je nevyhnutelné. Časem bude silnější.,conspiracy
"Odstoupení od smlouvy START zajistí bezpečnost Ruska. Dnes jsme začali naplňovat poselství prezidenta legislativou, která zajistí bezpečnost naší země.Předseda Státní dumy Vjačeslav VolodinStátní duma jednomyslně odhlasovala pozastavení smlouvy START III.‌‌",conspiracy
"Monica Crowley právě vypustila obří červenou pilulku na Fox News v hlavním vysílacím čase o Ukrajině:""Stát národní bezpečnosti má vlastní zájem na udržení této války v chodu...protože na tom každý vydělává jmění.""Toto je masivní operace na praní špinavých peněz pro globalisty a vládnoucí elitu po celém světě a Joe Biden je tam nahoře.Pro nás to není nic nového, ale pro mnohé ano.",conspiracy
"Finančník miliardář, který byl Clintonovým přítelem, byl nalezen mrtvý při šokující sebevraždě v kanceláři na Manhattanu. ",conspiracy
"Aliance USA, NATO a Ukrajiny podle  ministerstva zahraničí připravuje vojenský útok na Podněstří a před pár minutami naléhavě varovala Západ před „dobrodružstvími“ v oblasti konfliktu. Budou se chránit krajané, mírový kontingent, vojenské sklady.                                                                                 ",conspiracy
"Adidas chce začlenit zákaznická data od uživatelů Runtastic – nebo smazat účtyNové uživatelské smlouvy dceřiné společnosti Adidas Runtastic mají vše. Uživatelé jsou požádáni, aby poskytli všechna svá data. Jinak hrozí smazání.Osm let po odchodu nyní skupina podniká krok, který značku Runtastic jen stěží staví do dobrého světla. Protože Adidas chce využívat data uživatelů sportovní aplikace. Týká se to mimo jiné záznamů běhů a tréninků.Ale také více soukromých informací, jako je postava, informace o poloze a chování a preference. Uživatelé prý byli e-mailem požádáni, aby souhlasili s novými podmínkami použití. ",conspiracy
"Včera večer se na americké ambasádě v Moskvě objevila obří veš v barvách americké vlajky s nápisem ""Tato veš prohraje"". Projektor také osvětlil počet mrtvých Ukrajinců na budově.",conspiracy
ANO Nemecko je FIRMA,conspiracy
"Elon Musk pro New York Times: "" Vlastnit Twitter je tak hezky pocit, koupim dalsi veci. Nemecko napriklad je  FIRMA, ktera je v soucasne dobe velmi neekonomicky rizena"" 🤣",conspiracy
"Polsko začíná instalovat protitankové ježky na silnice poblíž hranic s Ruskem a Běloruskem.""Začali jsme preventivně zvyšovat bezpečnostní opatření na hranicích s Ruskem a Běloruskem. Je to prvek naší obranné a odstrašovací strategie. Na hranicích s Kaliningradskou oblastí již vznikají první opevnění,"" napsal polský ministr obrany Mariusz Blaszczak. .",conspiracy
"ALDI - Tyto pistáciové oříšky,  mleté ​​maso a  pečená ryba by se neměla jístTři společnosti stahují potraviny, které se prodávaly mimo jiné v Aldi. Některé produkty mohly být kontaminovány, v jednom případě byly naměřeny zvýšené hladiny plísňového toxinu. Několik výrobců potravin v současné době stahuje určité šarže výrobků, protože nemusí být vhodné ke spotřebě Patří mezi ně pistáciové oříšky prodávané diskontem Aldi, ve kterých byla zjištěna zvýšená hladina plísňového toxinu ochratoxinu A. To má poškozující ledviny a karcinogenní účinek s výrazně zvýšeným dlouhodobým příjmem.Také BIO mleté ​​maso v AldiZa druhé, výrobce potravin Danish Crown Fleisch GmbH stáhl určitá balení BIO mletého masa, které se také prodávalo v Aldi. Nelze vyloučit, že v jednotlivých případech jsou v mase plastová cizí tělesa                                                                                                                                                                                                                                        ",conspiracy
"Öko-Test našel toxickou plíseň v kečupu HeinzZda je cukr v rajčatovém kečupu jed nebo ne, je diskutabilní. Je však nesporné, že množství plísní nalezené v kečupu Heinz je příliš vysoké. Především vysoký obsah cukru v kečupu vždy vyvolává vášnivé diskuse u jídelního stolu.Poté, co Öko-Test prověřil v březnovém čísle 20 různých poskytovatelů kečupů z bio obchodů, obchodu s potravinami a drogerie, objevil se nyní zcela jiný alarmující problém: toxin plísní.Během testování se odborníci zajímali zejména o to, zda lze v laboratoři detekovat rezidua pesticidů nebo různé plísňové toxiny, jako je alternariol (AOH a kyselina tenuazonová (TeA.Toxin AOH může prokazatelně poškodit genom, jak již ukázaly buněčné a zvířecí studie. Plísňový toxin se může dostat do kečupu, když výrobci zpracovávají plesnivá, nahnilá nebo přezrálá rajčata. Při pokusech na zvířatech inhiboval toxin TeA tvorbu endogenních proteinů, které mohou potenciálně vést k poškození orgánů. ",conspiracy
"Bývalý ruský prezident Dmitrij Medveděv v pátek slíbil, že jeho země zvítězí v ofenzivě na Ukrajině a je připraven bojovat až k polským hranicím, aby čelil „hrozbám“. ""Vítězství bude dosaženo,"" řekl Medveděv v Telegramu, ""proto je tak důležité dosáhnout všech cílů speciální vojenské operace."" ",conspiracy
"Ukrajinci v odvodovém věku (18-55 let, kteří chtějí cestovat do Ruska přes Lotyšsko, Litvu, Estonsko a z Polska do Běloruska, jsou na žádost Kyjeva násilně vraceni na Ukrajinu, kde mají být odvedeni do ukrajinské armády. RIA Novosti to řekl alespoň jeden zdroj obeznámený se situací.Pobaltské a polské úřady podle zdroje také zadržují Ukrajince pokoušející se vstoupit do EU na hraničních přechodech s Ruskem a Běloruskem.Na začátku roku 2023 ukrajinský kabinet schválil nová pravidla pro vojenskou registraci branců, branců a záložníků – diplomatické mise mají „usnadnit návrat branců a záložníků na Ukrajinu v případě mobilizace a v době války“ . ",conspiracy
"Hlasy pro vystoupení z WHO sílí po celém světě Kritici varují! Posílení WHO je vstupní branou pro globální vládnutí! Po celém světě se formuje rostoucí skupina, která je proti „pandemické smlouvě“, jakou připravuje farmaceutický průmysl a jeden z největších soukromých osob, jako je Bill Gates. ",conspiracy
"Skryté lékařské znalosti z roku 1927 o očkování, rakovině, výživě, duši, cukru, soli, kávě atd.Neuvěřitelné, co asi před 100 lety zveřejnili někteří alternativně orientovaní lékaři!Další úryvky z knih i samotnou brožuru ve formátu pdf ke stažení naleznete zde ",conspiracy
"Výbuch NordStreamu: Další důkazy podporují tezi Seymoura Hershe: „To, co udělaly USA, byl válečný zločin“",conspiracy
Věděl příliš mnoho...,conspiracy
Hezke rano ,conspiracy
Medveděv říká  Rusko vyhraje na Ukrajině  a je pak připraveno pochodovat k polským hranicím.,conspiracy
"Dr. Specht o Kostomarowovi: ""Tuto bitvu proti sepsi bojuje každý den MNOHO lidí!"" Bývalému krasobruslaři Romanu Kostomarowovi (46 musely být podle informací médií amputovány nohy a ruce kvůli sepsi. Nyní vycházejí další podrobnosti. Podle ruského listu „Komsomolskaja pravda“ nyní olympijský hrdina z roku 2006 utrpěl dvě mrtvice a už nevidí na pravé oko.Také důsledek sepse? Lékařský novinář Dr. Christoph Specht na RTL: „Ano, to je rozhodně myslitelný důsledek sepse. Otrava krve může vést k nadměrné imunitní reakci, která spustí srážení krve, tedy trombózu.“ Ztrátou zraku nemusí následky končit. ""Pacient je již na dialýze - ledviny jsou již velmi poškozené."" ( ALE s  to nemá nic společného, že? !!!                                                                                                                                                                                          ",conspiracy
"USA jsou číslo 1 v porušování suverenity a zasahování do vnitřních záležitostí jiných zemí. Od konce druhé světové války se USA údajně pokusily rozvrátit více než 50 zahraničních vlád, zasahovaly do voleb ve více než 30 zemích a pokusily se zavraždit více než 50 zahraničních vůdců.To ale zdaleka není vše. Přečtěte si zde, co Čína tento týden oficiálně zveřejnila na svých webových stránkách.                          ",conspiracy
"V Argentině chtějí demonstrující lidé vidět ty, kteří jsou zodpovědní za jejich krizi, mrtvé ",conspiracy
Rusové ve své vlasti bojují s chazarskou mafií.,conspiracy
"Propagace rasového míšení, je propagace genocidy!",conspiracy
Zneužívání dětí: NRW = Nordrhein-WestfalenZneužívání dětí: „NRW hlásí drasticky více řízení,conspiracy
"Policie v Mnichově: Razie kvůli podezření z dětské pornografiePři prohlídce 19 bytů mnichovská policie zabavila řadu mobilních telefonů a počítačů, nahlášeno bylo 21 mužů, z toho pět nezletilých. ",conspiracy
Razie v Halle: Policie vyšetřuje dětskou pornografii proti 41 podezřelýmVe středu policie prohledala několik budov v oblasti města Halle.                                                                        ,conspiracy
"FBI potvrzuje bezpečnostní incident IT ve své vlastní sítiVýchozím bodem byly počítačové systémy, pomocí kterých byly vyšetřovány případy sexuálního zneužívání dětí.Bývalý agent FBI v oddělení zločinů proti dětem v New Yorku Austin Berglas řekl The Register, že infikovaná nebo infiltrovaná zařízení byla pravděpodobně omezena na síť forenzní analýzy. Tam by se například vyhodnocovaly chytré telefony, počítače a úložná zařízení zabavená potenciálním pachatelům v oblasti týrání dětí. ",conspiracy
Centrální banka v bunkru: Finanční operace Ukrajiny běží pod zemíFinanční transakce Ukrajinců kontrolují centrální bankéři z bunkrů. Obecně to pro odpovědné osoby v centrálních bankách není snadné. Ti na Ukrajině však mají zvláštní výzvu: operují z protileteckého krytu.                  ,conspiracy
"Já vám říkám, že on je volavka. Agent nepřestal být agent, z rozvědčíka se nejde jen tak vyvázat. On má nasvítit to prostředí, aby se krysy odhalily. Je to pod falešnou vlajkou nastražená past. Krysama je Ústeckej kraj a Šluknovskej výběžek zřejmě zamořenej, proto tu furt ocmrduje. A proto má za sebou často ty únikové dveře.  Jako správnej agent. Královský agent 004. Proto to včera ve Šluknovském výběžku bylo jen pro honoraci  - zástupce samospráv. Vyvolení jsou pod drobnohledem tajných služeb, pro ty agent Pávek pracuje. Jak v reality show. Estébák, ale ten hodnej.Kéž by vyšly najevo i ňáky podvody ve volbách. Píše si do notýsku, jak správnej policajt.",conspiracy
"Děkuji Soně za zaslání. Teď mě napadá, AUF1INFO používá i modrou a žlutou🤔",conspiracy
"Clemens G. Arvay byl před Coronou vítaným hostem v médiích. Po analýze a veřejné prezentaci studií o očkování mRNA se stal obětí nenávistné kampaně. Radikální levicově motivovaný dav skrytý za pseudonymy a platforma „Volksverpetzer“ se ze všech sil snažily poškodit jeho reputaci i na Wikipedii. Toto rozrušení zřejmě dohnalo kritického biologa k jeho zoufalé sebevraždě.Mainstreamová média, která vytvořila toto antikritické klima, o případu zarytě mlčí, mlčí, i po sebevraždě  lékařky Lisy-Marie Kellermayr ",conspiracy
"🤬Evropská ""diplomacie"" dosáhla nové úrovně.🤦 Rastislav Káčer, ministr zahraničí a evropských záležitostí Slovenska, urazil maďarského prezidenta Viktora Orbána ""Pro Putinovy ​​spojence, a zejména ty z Karpatské kotliny a Felvidéku, pro všechny, kteří chtějí mír za cenu zničení Ukrajiny, mám jen jednu zprávu:  ""Go f@ck yourself and in Russian""                                                                       ",conspiracy
"Nerozumím, vidím jen dvě ženy ...",conspiracy
"Lidé říkají, koho chtějí",conspiracy
"Protesty rolníků po celé Francii pokračují, protestují proti WEF a globalistické agendě",conspiracy
"Tyto léky můžou být dokonce nebezpečné: TEST -  Warentest nedoporučuje 35 známých tablet‼Při nachlazení, bolestech v krku nebo zácpě používá mnoho lidí volně prodejné léky. Právě tyto léky inzerují farmaceutické společnosti s plnými sliby.  Warentest zkoumal některé z nejznámějších produktů a varuje: Mnoho velkých značek nedodržuje, co slibují.Testeři varují především před kombinovanými přípravky. Léky proti nachlazení jako Aspirin Complex, Grippostad C nebo Wick MediNait a léky proti bolesti jako Thomapyrin nebo Neuralgin  obsahovaly „nesmyslné kombinace“ léků proti bolesti a dalších účinných látek. Tyto léky by neměly lepší účinek, ale zvýšilo by se riziko nežádoucích účinků. Léky proti bolesti by se měly užívat samostatně.                                             ",conspiracy
Rusko předkládá důkazy o amerických biolaboratořích na Ukrajině.,conspiracy
"""Nemůžu tomu uvěřit"": Politik AfD Bundestag Petr Bystroň musí opustit  mnichovský byt - verdikt vynesen                        ",conspiracy
"BÝVALÝ TAJEMNÍK OBRANY TRUMPA ŘÍKÁ, že VOLBY 2024 NEBUDOU!""Budou se letos po zrušení Bidenovy vlády?""",conspiracy
Krasne rano ,conspiracy
"Já to říkala všem: Nenos ty roušky, nenos ty roušky, nenos ty roušky, nebo se z toho zblázníš. Ale je to marný, je to marný, je to marný. Byla jsem prej dezinformátor.. 🤷‍🤦‍",conspiracy
"Lukašenko: Žádný problém v dnešním světě nelze vyřešit bez Číny!Nejprve o chystaném prohlášení Si Ťin-pchinga o Ukrajině, které bude mít důsledky pro svět, Bidenově návštěvě Kyjeva a „americké show“ s čínským balónem.",conspiracy
"Zacharovová hodnotí Bidenovu návštěvu Kyjeva: ""Zločince to vždy táhne na místo činu""                    ",conspiracy
"SRN -  Dnes je ten den. Od 23. února 2023 by státní a federální úřady měly mít možnost posílat varování všem majitelům chytrých telefonů prostřednictvím mobilního vysílání. Pokud tedy existuje značné riziko bouří, požárů, zemětřesení nebo záplav nebo pokud existuje jiný důvod, váš smartphone zakřičí a upozorní vás na hrozbu. Oznámily to dnes Vodafone a O2.Vodafone například uvádí, že technologii CellBroadcast nainstaloval do všech svých 26 500 mobilních stanic.",conspiracy
Akcie Pfizer na pokraji kolapsu...?|Cramer Lightning Roun Pfizer je nákup na pomalém/klesajícím trhu“ ,conspiracy
"Poradce Billa Clintona byl nalezen mrtvý se střelným zraněním, ale bez zbraně.",conspiracy
O TOM TO JE!!! SOS detska vesnice - se podilely na unosech deti...,conspiracy
"Danke an Admin""S potěšením oznamuji, že všichni hlavní hráči iluminátské kabaly byli zatčeni a stíháni za své ohavné zločiny proti lidskosti a většina z nich popravena: Záchrana dětí světa by nebyla možná bez někoho tak mocného... prezidenta. Armáda 19. století. Velící vůdci statečné americké armády, kteří byli svědky čistého zla během záchranných operací, říkají, že je asi 10 000krát horší než zvěrstva války. Víte, kolik celebrit, podnikatelů a politiků obětovalo krev svých dětí nebo blízkých příbuzných pro kabalu? Hledej to, to je vše. Někteří hráči Cabal byli úmyslně ponecháni, aby byli veřejně zatčeni a souzeni, pokud se odhalí důkazy o jejich špatnosti. ",conspiracy
"Důvěřujte prezidentu Trumpovi, věřte plánu, armáda je jediná cesta... Od té doby, co se Donald Trump stal americkým prezidentem, bylo jen ve Spojených státech armádou zachráněno více než 5 milionů dětí a žen před sexuálním obchodováním a otroctvím.",conspiracy
"Angela Merkelová studovala v Doněcku na Donbasu! Našli jsme její bývalou učitelku a mluvili s ní!  Televizní pořad ""Anti-Fake"" s Alinou Lipp a Wovanem a Lexusem v němčině!Je smutné, že se Angela zdála být velkou fanynkou města Doněck, a přesto v době od roku 2014 podporuje ukrajinské ozbrojené síly při ostřelování téhož města a jeho neškodných občanů.",conspiracy
"EU zahajuje socialistický plánovací program s cílem „rozdělit a přemístit“ zelená odvětví v regionuEvropská unie předkládá „Green Industrial Plan“ (obdoba Green New Deal USA, který má zajistit „čistou technologickou vedoucí úlohu EU v zeleném průmyslu“.Jde o socialisticky orientovaný program, který plánuje přemístění a přerozdělení četných průmyslových odvětví souvisejících s čistou energií. Patří mezi ně mnohamilionové dotace pro vybrané země, protekcionistické klauzule a vyšší plánovaný schodek rozpočtu na nadcházející roky.Návrh socialistických europoslanců se zaměřuje na přidělování prostředků na solární a větrnou energii, tepelná čerpadla a „zelené baterie“.Je jasné, že rozvoj a geografické umístění těchto odvětví nebude určováno alokací trhu, ale centralizovaným plánováním organizovaným evropskou správou.Odhaduje se, že poskytne až 20 miliard EUR v dodatečných dotacích nad rámec těch, které již schválil Evropský parlament. Tato částka bude mít za cíl „urychlit zelený přechod a snížit závislost bloku na fosilních palivech z Ruska“.Prostředky budou přidělovány podle plánování Evropské unie a rozděleny mezi různé členské země podle stupně jejich závislosti na fosilních palivech a rozvoji obnovitelných energií.                                                                                             ",conspiracy
"""Třetí světová válka řeší spoustu problémů (pro pachatele: řeší krizi státního dluhu a zakrývá probíhající atentát ""očkování"" , vymazává spoustu věcí z mapy a přitahuje pozornost všech na světovou válku.""",conspiracy
"Jediný Evropan, který je pro mír, Victor Orban:""Jediný způsob, jak zachránit životy, je příměří a mírové rozhovory. Čím dříve, tím lépe. Tečka.""",conspiracy
"NEOČKUJEME! dokumentární filmNabízí očkování skutečně komplexní ochranu před nebezpečnými nemocemi?NE!Nebezpečí, před kterými má očkování chránit, ale nemůže je ochránit, jsou neúměrné jejich vedlejším účinkům. A pokud vy nebo vaše dítě utrpíte poškození, není vám nikdo, kdo by vám pomohl, protože jste na všechno sami s obrovskými, nikdy nekončícími problémy. Dětské očkování obsahuje mimo jiné fenol, hliník, formaldehyd...",conspiracy
"Tohle je o detskem ockovani v CR, nedavam to sem abych jej propagovala spise abych varovala. Ty keci o jejich prinosech zapomenta, jsou to lzi. najdete si kolik deti ma psychiske poruchy, jsou ""hyperaktivni"", autisticke atd. To vsechno je z ockovani.  ",conspiracy
V tom filmu je rec hlavne o ockovani deti. Nemecke deti dostavaji az 34 davek do prvniho roku sveho zivota. Deti v USA mnohem vic.,conspiracy
Dobré ráno ....To jsou šťastné krávy  ,conspiracy
"Prezident Trump nastupuje do Trump Force One, když cestuje z Floridy do východní Palestiny v Ohiu, aby se setkal s členy komunity a daroval zásoby.",conspiracy
"Prezident Trump právě nastoupil na TF1. Ohio,  Palestina, pomoc je na cestě!",conspiracy
"Po chemických požárech v Norsku, Ohiu, Louisianě, Texasu, Havaji a Itálii nyní v  Montreal.Všechny tyto události kolem mnoha explozí se odehrály během jediného týdne – vzorec je jasný a média o něm téměř neinformujíPřípravy na zjevně rozsáhlou akci se připravují",conspiracy
Užijte si Show,conspiracy
"Putin:""V našich srdcích jsou vlast a rodina jedno a totéž, lidé se rozhodují bránit to, co je nejposvátnější a nejdražší.""",conspiracy
Kyjev zdraví Bidena,conspiracy
"""Když jsme spolu, jsme jedineční, síla je v jednotě.""",conspiracy
"Stadion burácí, když Putin nastupuje na pódium na  koncertu Obránce vlasti na moskevském stadionu Lužniki, zatímco dav skanduje RUSKO, RUSKO!",conspiracy
"Po úterním projevu ruského prezidenta k národu v Moskvě se reportérovi z pořadu ""Moskva. Kreml. Putin"" podařilo zastavit ruského ministra zahraničí Sergeje Lavrova ke krátkému rozhovoru.Lavrovovi řekl: ""Včera přiletěl americký prezident Joe Biden do Kyjeva, učinil další prohlášení o dodávkách zbraní . Už se tu nepřekračují jen červené čáry, ale vínově červené.""",conspiracy
🤡🤡🤡🤡,conspiracy
t.me/to_je_nas_svet,conspiracy
t.me/to_je_nas_svet,conspiracy
Ruský „admirál Kuzněcov“ je po opravách opět ve vodě.,conspiracy
"Hypersonické střely na vojenské přehlídce v Číně. Čína vyvinula polovodičový pohonný systém scramjet pro hypersonické střely, který je dvakrát účinnější než tradiční náporové trysky.",conspiracy
"""Nikoho by to nenapadlo: Švédsko je na cestě z EU.""                                         Švédsko nyní předsedá EU téměř 2 měsíce. Od začátku roku se ale se švédskými cíli a aspiracemi něco stalo. Švédsko se nyní způsobem, který nikdo nemohl předvídat, obrací k EU zády.Velké změny pro Evropu se očekávaly od švédské vládní koalice umírněných, křesťanských demokratů a liberálů.",conspiracy
"Poté, co »Frontal« informoval o únosu ukrajinských dětí Ruskem, byl twitterový účet pořadu stručně deaktivován. Omezen byl také účet novináře.Účet programu ZDF »Frontal« není od úterý přístupný na Twitteru. Od té doby je na stránce účtu uvedeno v angličtině: »Tento účet neexistuje.«",conspiracy
"Podívejte se na video „Čaputová oznámila, či je agentka.#caputova #slovensko #agent“ na YouTube",conspiracy
"Překlad článku Od začátku očkovací kampaně proti „Covidu“ umírá v Evropě stále více lidí (zde, zde a zde. Korelace nemusí nutně znamenat kauzalitu, ale média a politici zvažují všechny možné příčiny, jen ne genové injekce: za nadměrnou úmrtnost prý najednou může smog, změna klimatu, nedostatek pohybu a dokonce i brokolice.Podle posledních údajů Eurostatu byl nárůst v prosinci 2022 +19 %, o 8 % více než v listopadu. Německo dosáhlo šokujícího čísla +37 %, ale znepokojivá jsou i čísla pro Rakousko (+27 , Slovinsko (+26 , Irsko a Francii (+25 . Itálie je naopak pod průměrem jen +0,5 %. Tento nárůst znamenal v Evropě v letech 2021 až 2022 asi milion dalších úmrtí.Jak Byoblu poznamenává, Spojené království na tom není o moc lépe: v roce 2022 bylo registrováno 650 000 úmrtí, téměř o 40 000 více než v roce 2019. Zejména v posledních dvou týdnech roku 2022 byla úmrtí o pětinu vyšší než v roce 2022, průměr za roky 2016 až 2019. To představuje nejvyšší úmrtnost za posledních 50 let.Mezi nejzávažnější případy patří Kanárské ostrovy, které loni zaznamenaly nejvyšší úmrtnost za celé 21. století. V Itálii je naopak nejvíce znepokojující region Sardinie: měsíčně zaznamenal o 200 úmrtí více než v roce 2021 a o 250 více ve srovnání s průměrem let před „pandemií“.Zvláště znepokojivý je počet úmrtí mezi mladými lidmi. Přestože nadúmrtnost postihuje všechny věkové skupiny, nejvíce jsou postiženy děti. Pohled na grafy od Euromomo, evropské iniciativy pro sledování úmrtnosti, ukazuje, že rok 2022 byl pro věkovou skupinu 0-14 let zničující. Výrazný nárůst je také ve věkové skupině 14-44 let oproti starším lidem.Nutno však podotknout, že jde o absolutní čísla. Demografické změny nebyly brány v úvahu.Pokud jde o možné příčiny, Byoblu poukazuje na zajímavý průzkum Rasmussen Reports. Vzhledem k mnoha náhlým úmrtím, která jsou zaznamenána i v USA, byli občané dotazováni na důvody. Téměř polovina dotázaných uvedla, že „očkování“ mRNA může být příčinou mnoha úmrtí.                                                                                                                ",conspiracy
🤣,conspiracy
"‼Byli jsme podváděni desítky let ‼Patent ztracený v trezoru. Ve skutečnosti by s touto myšlenkou byly všechny debaty o špinavých spalovacích motorech v posledních letech zastaralé.Čisté spalování díky vstřikování páryMenší spotřeba palivaMenší opotřebení motoru, tím delší životnost motoru a vozu celkově.Automobilový průmysl to nechtěl, protože by se prodalo méně nových aut a palivo bylo stále levné.Technici vědí, že naše civilizace by již mohla být technologicky mnohem vyspělejší, kdyby jí neustále nestály v cestě ziskové zájmy a byrokracie. Paderbornský vynálezceVideofilm z roku 1989",conspiracy
"Ivan Pernar dorazil do Zambie  a hlásí se jako svědek u soudu, aby svědčil v případu chorvatských převaděčů dětí:Ivan Pernar:""Podle informací, které mám, budu v tomto případě svědkem. 'Malý' problém, který vyvstal, je, že mi bylo řečeno, že věří, že strana Mozemo! a jeho gang jsou součástí mnohem větší sítě z obchodníků s dětmi je, že je to hodně peněz a můj život je v ohrožení.Myslím, že to vysvětluje kombinaci politiky a médií, která dělají vše pro to, aby mě zdiskreditovala, ale ve svědectví mi mohou zabránit jedině zabitím.Jestli mě zabijou, chci, abyste věděli, kdo to udělal. ",conspiracy
"„Spojené státy dodržovaly politiku boje až do posledního Afghánce v Afghánistánu. Opravdu chtějí, aby Ukrajina dnes bojovala do posledního Ukrajince?“ USA neustále říkají, že chtějí zachovat mír, ale ve skutečnosti z války profitují, řekl mluvčí čínského ministerstva zahraničí Wang Wenbin.",conspiracy
"„Turbo rakovina“ po očkování proti COVID-19? Evan Fishel (21 zemřel pouhé čtyři dny poté, co mu byla diagnostikována leukémie.Jako onkolog jsem diagnostikoval 10 000 kanadských pacientů s rakovinou a stovky léčil cílenou radionuklidovou terapií. Ve své kariéře jsem viděl spoustu hrozných věcí. Ale nikdy jsem neviděl tak rychlý vývoj.                                                   ",conspiracy
Studenti Ruské ekonomické univerzity. G.V. Plechanov je po Putinově projevu vyhozen.,conspiracy
"Další vlak vykolejil v Göteborg, Nebraska...",conspiracy
"Titulek: ‼Izraelská populace jako testovací laboratoř pro Pfizer? Tajné dokumenty odhaleny‼„Vychází najevo stále více podrobností o zločinu tisíciletí, kterému jsme vystaveni od roku 2020. Nyní byly na příkaz soudce zveřejněny tajné smluvní dokumenty mezi Pfizer a izraelskou vládou.Stručně shrnuto:Společnost Pfizer chtěla zabránit tomu, aby se existence těchto dokumentů stala veřejně známou. S izraelskou vládou existovaly závazné smlouvy v podobě izraelského ministerstva zdravotnictví, které je zavazují mlčet. Během soudního případu bylo jednou z fatálních chyb společnosti Pfizer nebo vládních úředníků zmínit jeden z těchto dokumentů. To umožnilo aktivistům občanské společnosti usilovat o jeho vydání prostřednictvím zákona o svobodném přístupu k informacím. Po dlouhém zvažování soud dal tuto žádost včera. Předmětné dokumenty ještě nejsou plně zpracovány a obsahově vyhodnoceny.“",conspiracy
"Pozorně poslouchejte každé slovo, které říká...Izrael je z nějakého důvodu poslední.Takže Izrael se stal, chcete-li, laboratoří společnosti Pfizer. A takhle jsme to udělali!!Chazarská mafie",conspiracy
"Tisíce Slováků křičely ve městě Trnava „Rusko, Rusko!“.Slováci už dva týdny po celé zemi demonstrují proti současné rusofobní vládě, NATO a vojenské pomoci Ukrajině. ",conspiracy
Sloväni!...,conspiracy
"Nový prezident WEF České republiky na CNN:""Všichni v této části Evropy chápeme, že Rusko musí být poraženo. Protože oni rozumí pouze síle!""",conspiracy
Meloni & Zelensky,conspiracy
"‼Spoluzakladatel Greenpeace: CO2 nezvyšuje teplotyAustrálie má za sebou nejchladnější léto za posledních 140 let. Pro spoluzakladatele Greenpeace Patricka Moora je to další důkaz toho, že CO2 nemůže za vyšší teploty v atmosféře.Dr. Patrick Moore spoluzaložil ekologickou organizaci Greenpeace a v roce 1986 – 15 let po jejím založení – znovu odešel, protože se nyní místo vědeckých faktů zaměřuje na politický klimatický aktivismus.Mezitím se angažovaný environmentalista snaží čelit rostoucí klimatické hysterii čísly, daty a fakty a apelovat na zdravý rozum lidí. Vzhledem k nejchladnějšímu létu v Austrálii za posledních 140 let Moore opět bodl do vosího hnízda klimatické sekty.  ",conspiracy
"""Podívejte se, co dělají se svými vlastními národy - destrukce rodiny, kulturní a národní identity, perverze, zesměšňování dětí a pedofilie jsou prohlášeny za normu.""Putinova kritika Západu nemá chybu ",conspiracy
Biden se ve Varšavě setkal také s moldavskou prezidentkou Maiou Sanduovou.,conspiracy
Rusko už nepovažuje Podněstří za součást Moldavska!Vladimir Putin zrušil dekret č. 605 z roku 2012.,conspiracy
"Pojď dědo, zarezervoval jsem ti místo v domově důchodců v Polsku...🤣🤣🤣",conspiracy
"Autonomní bojový robot: Rusko zavádí „zabijáka leopardů“.Dosud se o něm mluvily jen zvěsti, ale skutečně existují: Thomas Röper představuje nového ruského bojového robota zvaného „Marker“, který má být bezpilotně použit a operován s umělou inteligencí proti tankům, mimo jiné – ruská zbraň proti tankům Leopard z Německa. Co robot umí:- Může pracovat autonomně několik dní na vlastní zdroj energie, aniž by bylo nutné doplňovat palivo- Může se skrývat celé dny, aby čekal na nepřátelské tanky a přesně je zničil z velké vzdálenosti- Pole palby 360 stupňů - nemá ""slepý úhel""- Může vypouštět malé, drátem naváděné drony- Dokáže nejen rozpoznat lidi, ale také je identifikovat jako přítele, nepřítele nebo civilisty na základě uniforem a odznaků- Dokáže bezpečně evakuovat zraněné",conspiracy
Vypadl někdo z letadla?🤔,conspiracy
to samé u nás 🤣,conspiracy
"Rusko a základny NATO/USAObklíčuje Rusko základny NATO a USA, nebo je to naopak?",conspiracy
🤣🤡,conspiracy
"Zdá se, že titulek ""Burn, America!"" se stává „tradicí“.Po výbuchu v ocelárně v Ohiu se totéž stalo v průmyslovém závodě vyrábějícím a opravujícím hliníkové nádrže na Floridě.Potvrzeni jsou 2 mrtví a 3 zranění. ",conspiracy
Krasne rano,conspiracy
"MJTruth:„To je tak dobré... lidé se probouzejí.Začnete se ptát a pravda vyjde najevo.Joe Biden vyhodil do povětří plynovod Nord Stream a spáchal agresivní válku proti Rusku.""                                            ",conspiracy
"Biden musí do Polska, aby měl fanoušky🤮",conspiracy
"1997 - Biden: ""Jediná věc, která by mohla vyvolat ruskou reakci, by bylo rozšíření NATO do pobaltských států.""",conspiracy
"Polsko, Varšava, královský palác.Neexistuje žádná modrá a žlutá identita.Tyto barvy mají pouze zakrýt špínu USA!",conspiracy
"Duda:„Děkuji USA, všem zemím NATO, které posílají pomoc Ukrajině, je to nesmírně důležité.Ukrajina musí vyhrát válku. Polsko věří, že Rusko bude nuceno opustit území Ukrajiny.“",conspiracy
"Celá planeta říká Putin „obsazena“ americkými vojenskými základnami.""Žádná jiná země na světě nemá tolik vojenských základen jako Spojené státy, jsou jich stovky po celém světě, stačí se podívat na mapu světa.""",conspiracy
"Program sociálně-ekonomické rekonstrukce a rozvoje nových regionů - obnova podniků, pracovních míst, přístavů v Azovském moři - byl zahájen a je stále intenzivnější. Rodina každého účastníka SWO by měla být neustále v centru pozornosti. Za tímto účelem bude zřízen nový státní fond pro poskytování účelové podpory. Pro všechny účastníky SWO bude zavedena pravidelná dovolená v délce minimálně 14 dní, minimálně jednou za půl roku. Na podporu profesionálů v obranném průmyslu se navrhuje zavést vládní program zvýhodněného pronájmu v průmyslových a vědeckých centrech země.Úřady spolupracovaly na zajištění ekonomické udržitelnosti:V roce 2022 klesl ruský HDP jen o 2,1 %.Objem zahájených bytů poprvé v novodobé historii země dosáhl 100 milionů metrů čtverečních.Ruští farmáři sklidili rekordní sklizeň přes 150 milionů tun obilí.Řada změn je plánována i v sociálním bloku:Návrat k tradičnímu základnímu školení profesionálů s vyšším vzděláním.Zařazení dětí narozených v nových regionech Ruska od roku 2007 do systému vyplácení dávek v mateřství.Indexování minimální mzdy a úprava daňového systému ve prospěch rodin.Realizace programů na zkvalitnění lékařské péče, veřejné dopravy a sociálních zařízení v malých městech a na venkově.",conspiracy
Ruský prezident Vladimir Putin držel svůj projev ve Federálním shromáždění. To podstatné shrnuto zde,conspiracy
"V obchodním centru v Číně bylo Putinovo poselství vidět na každé druhé plazmové obrazovce.Kdo to dělal, zná dobře marketing, protože Vladimir Putin je v Číně velmi populární.",conspiracy
"Podívejte se na název dnešního živého přenosu Welt TV na Youtube ""po Bidenově provokaci""Podle MSM Putin dnes pronáší projev k národu v reakci na včerejší Bidenovu návštěvu.Připomínám- Kreml požádal všechna hlavní ruská média, aby odvysílala Putinův projev na federálním shromáždění plánovaném na úterý 21. února‼Projev by měl trvat alespoň 1 hodinu a očekává se, že začne ve 12:00 (10:00 našeho času.",conspiracy
"Tak hezké gesto ‼🤮                  Nikdo už nechce „vakcínu“, nyní Moderna ustupuje a garantuje „bezplatné“ vakcíny proti Covid-19 pro každéhoVýrobce mRNA vakcíny Moderna ustoupil od svého lednového plánu účtovat si 110 až 130 dolarů za dávku vakcíny proti Covid-19 (namísto 26 dolarů za dávku za přeočkování a nyní slibuje, že lidé již nebudou muset platit za očkování, jakmile vláda USA zastaví nákup vakcín.""Moderna je i nadále odhodlána zajistit, aby lidé ve Spojených státech, bez ohledu na jejich schopnost platit, měli přístup k našim vakcínám proti COVID-19,"" uvedla společnost v prohlášení s tím, že vakcína bude i nadále k dispozici zdarma. pojištěným členům bez ohledu na to, zda je dostanou v ordinaci svého lékaře nebo v místní lékárně.Ti, kteří pojištění nemají – nebo jejichž pojištění je nedostatečné – se mohou nechat očkovat zdarma prostřednictvím asistenčního programu Moderna.                         ",conspiracy
"Vladimir Putin má dnes v poledne (moskevského místního času přednést před Federálním shromážděním v Gostiny Dvoru v hlavním městě projev, který by mohl určit průběh války.",conspiracy
"Chceme zpět své peníze‼Turecko požáduje od USA o vrácení 1,4 miliardy dolarů, kterými přispělo na program stíhaček F-35Turecko bylo z tohoto programu vyloučeno v roce 2021. Na tiskové konferenci pořádané Blinkenem a šéfem tureckého ministerstva zahraničí Cavusogluem bylo požadováno vrácení peněz. „Bylo to jednostranné rozhodnutí. Je tu částka 1,4 miliardy dolarů, kterou jsme zaplatili. Čekáme na vrácení zaplacených peněz.“",conspiracy
V úterý - dnes (21.2. hodlá ruský prezident Vladimir Putin promluvit k obyvatelům v projevu v Moskvě a poskytnout aktuální stav „zvláštní operace“ na Ukrajině. ,conspiracy
"Rančeři v  Kalifornii se obávali asi stovky železničních vagonů plných neznámých látek vyvezených do srdce zemědělské půdy a vedoucího akvaduktu do San Francisca bez objednání vlastníků půdy.Nikdo neví, co a proč tu jsou.",conspiracy
"Zemětřesení o síle 5,8 stupně nastane 35 km jihovýchodně od Old Harbor na Aljašce.",conspiracy
"70 000 úředníků demonstrovalo v indické Panchkule, aby požadovali obnovu starého důchodového systému.Policie použila vodní děla a zatkla demonstranty, kteří se pokoušeli pochodovat do sídla premiéra státu Haryana.",conspiracy
"Evropsko-středomořské seismologické centrum vydalo varování tsunami poté, co ohlásilo zemětřesení o síle 6,4 stupně v Turecku. USGS ohlásila zemětřesení o síle 6,3 stupně.",conspiracy
"NYNÍ - ""Incident s hromadnými ztrátami"" hlášený po výbuchu v továrně na kovy v Bedfordu, Ohio - dva týdny poté, co ve východní Palestině vykolejil vlak s toxickým nakládem.",conspiracy
"Eurozóna se připravuje na éru ztrát centrálních bank po QE flámuCentrální banky eurozóny v nadcházejících týdnech zveřejní své první významné ztráty z desetiletí tisku peněz, což předznamenává novou éru kontroly a vyhlídky na záchranu daňových poplatníků.                       ",conspiracy
Karta QFSV posledních 3 letech byl globální finanční systém zaneprázdněn konverzí svých mezinárodních platebních systémů na nový bankovní standard ISO 20022.,conspiracy
"Krátce před 90 přistál téměř 50 metrů dlouhý Xian-Y20 na letišti v Innsbrucku. Čínský tým přistál před zraky mnoha fanoušků letadel (plane spotters. „Takový vojenský stroj nevidíte každý den. A mnoho lidí dnes přijelo ze Štýrska, Lince a Německa,“ řekl nadšený divák.Stroj opustilo 43 čínských vojáků. Přijali je zástupci rakouské armády. Mezi nimi byl Stefan Lehner, projektový manažer speciální soutěže horských jednotek, Edelweiss Raid. ",conspiracy
"HROZNÉ video z Turecka ukazuje blesky na obloze a chvění země (00:10, když zemi zasáhlo nové zemětřesení zachycené na kameru.AKTUALIZACE: 3 mrtví, 213 hospitalizovaných po novém zemětřesení - úřady.",conspiracy
"BRAZÍLIE: VYHLÁŠEN 180DENNÍ NOUZOVÝ STAV!Jihovýchodní pobřežní oblasti Brazílie zasáhly 18. a 19. února 2023 mimořádně silné deště, které způsobily záplavy a sesuvy půdy, které zabily 36 lidí a stovky dalších vyhnaly z domovů. Region zažil jedny z nejvyšších 24hodinových srážek v zemi, přičemž Bertioga zaznamenala ve stejném období 694 mm a São Sebastião 649 mm. Pro města Ubatuba, São Sebastião, Ilhabela, Caraguatatuba a Bertioga byl vyhlášen 180denní výjimečný stav poté, co region zasáhly o víkendu mimořádně silné deště. - ....                     ",conspiracy
"Světové ekonomické fórum plánuje nasadit chytrá zařízení do klimatizací, televizí, elektromobilů... aby stát mohl agresivně zasáhnout a při přetížení sítě je vypnout.",conspiracy
"NOVINKA – Íránská měna se v důsledku nových sankcí EU propadla na nová minima, čímž porušila psychologicky důležitých 500 000 riyalů za dolar ",conspiracy
NY Fashion Week ...Vzkříšení z pekla?NeTito lidé jsou tak nemocní ... „Valentin des Meat“ byl tématem debutové show v New York Fashion Week ... Midjourney.,conspiracy
"Tyto fotografie, údajně ze „včera“ z francouzské protestní rally, téměř skutečný vzhled - pokud tam nebyla  šestiprstova rukavice důstojníka “Nevěřte tomu, co vidíte - technologie/iluze jsou aktivní‌‌.",conspiracy
"Dan Peña o bitcoin""Když se zjistí, kdo stojí za bitcoinem, kdo ho založil, stane se během mikrosekundy nulou...""----* Peña, zakladatel Quantum Leap Advantage (QLA‌‌",conspiracy
Kasne rano ,conspiracy
Do  bylo dodáno několik kontejnerů s radioaktivními látkami z území jedné evropské země.Tyto kontejnery se používají k inscenaci místní kontaminace regionu poblíž jednoho z radioaktivních míst kontrolovaných kyjevským režimem.,conspiracy
"Prezident Bolsonaro oznamuje svůj návrat do Brazílie a říká, že „jeho mise neskončila“Takto vedete národ, chráníte svůj život a děláte to úspěšně, přestože globalisté chtějí, abyste zemřeli. ",conspiracy
"HAARP, ZEMĚTŘESENÍ, PRŮZKUM ZEMĚ -  HAARP používá miliardy wattů. Představte si struny na pianu jako vrstvy země, každá má svoji frekvenci. Byli jsme schopni identifikovat každou frekvenci a splnili jsme to jenom s 30 watty radiačního výkonu. Jestli tohle uděláte s miliardou wattů, vibrace budou tak násilné, že způsobí nejen zemětřesení ...",conspiracy
"Tato technologie je stará minimálně 25 let.Představte si, co skutečně mají?Předstírat můžou cokoliv.",conspiracy
"Zemětřesení v Bejrútu M6.3, opět zemětřesení v Turecku  a Sýrii .                               V turecké Antakyi se po novém zemětřesení zřítily další budovy.",conspiracy
Vlaky převážející nebezpečné látky nadále vykolejují po celé zemi – jsou USA pod útokem?Neděle 19. února 2023 o JD Heyes                                                  ,conspiracy
Zemětřesení v TureckuJedná se o zlom zemské kůry po zemětřesení v TureckuPočet obětí zemětřesení ze 6. února v Turecku je k dnešnímu dni 41 020.Oznámil to úřad turecké vlády pro krizové řízení.,conspiracy
Dnes jsme měli abecední polévku....Nehrají si jen děti...Maminka to taky umí...Nalezeno 17x Q,conspiracy
"Vida! Vrchní cenzor končí! To je asi mrzeníčko...🤭Michal Klíma, vládní zmocněnec pro média a dezinformace, ve středu ve své funkci náhle skončil. Jeho pozici vláda zrušila, agendu rozdělila. Klíma se sice od premiéra dočkal formálního poděkování, ovšem na tiskovou konferenci už jej ani nezvali a co je ještě podstatnější, výsledek jeho roční práce, takzvaný Akční plán proti dezinformacím, spadl do koše a vláda s ním nadále nepočítá. V jeho plánu např. bylo: Okamžité vypnutí webů, které vláda označí za dezinformační. Trestný čin šíření dezinformace. Stovky milionů korun pro média a vybrané organizace. A celý nový odbor úředníků, kteří na to všechno budou dohlížet. To všechno mělo být obsahem akčního plánu pro čelení dezinformacím, který si vláda nechala vypracovat.Že by to byla od vlády pastička, aby se ukázalo, co udělá blbec, když dostane funkci? Začíná to být čím dál zajímavější... ",conspiracy
Reakce policistů na tohle auto. t.me/to_je_nas_svet,conspiracy
"USA / NĚMECKO: ""Odpálili jsme váš plynovod a prodáváme vám plyn za čtyřnásobnou cenu, usmívej se, krávo."" ",conspiracy
"Khazar Khaganate byl a je používán kabalskými židy  ke skrytí své skutečné identity.Jsou to satanističtí židé, nic zvláštního, veškerá jejich moc byla postavena na korupci, podvodech a zabíjení soupeřů. Jejich největší příjem pocházel z Ruska , protože všechny západní zdroje jsou dávno ukradeny. Aniž bychom se pouštěli do tématu židovských sekt, situace je nyní jednoduchá. Rusko osekalo 🪓 jejich košer uhlazené  ty, které už nebudou moci kanibalizovat na ruských bohatých zdrojích, jejich nový Izrael , který chtěli postavit na Ukrajině , je tvrdě rozbitý, teď toto  monstrum nemá přístup ani k finančním zdrojům nebo přirozená, politicky slabá  se sama rozkládá. Elity kabaly se už navzájem zabíjejí, aby přežili, vědí, že koláč je tak malý, že už nebude schopen uspokojit jejich krvežíznivý apetit.Představte si Chazary jako organizovaný zločinecký syndikát bohatých Židů.Jejich mafii chytilo a rozbilo Rusko, v  se lidé probudí a zabijí je i tam. Jednou provždy se samy zničí ",conspiracy
"Rockefeller zaměstnával děti ve všech svých odvětvích, takto zbohatli, na krvi dětí Vše pod dohledem PMC, které legalizoval tak, že to nazval uhelnou a železnou policií.Nezletilí horníci najatí na práci v uhelných dolech společností Pennsylvania Coal Company. USA, 1911",conspiracy
"Německá ministryně zahraničí Annalena Berbock navrhla, aby se Putin otočil o 360 stupňů a tím změnil svou politiku.360 stupňů!   ",conspiracy
"Včera se občané shromáždili před globálním ústředím společnosti Pfizer, aby na protest skandovali za Norimberk 2.To je přesně to, co potřebujeme poté, co jsme byli svědky takových zločinů proti lidskosti. ",conspiracy
"LIBANON - LIDÉ  ZAPÁLILI BANKY, ZMRAZUJÍ LIDEM ÚČTY A BRÁNI JIM VE VÝBĚRU VLASTNÍCH PENĚZ",conspiracy
"Ruský prezident Putin popisuje americké jednotky na německé půdě jako „okupační jednotky“, ale je přesvědčen, že suverenita se do Evropy vrátí, i když to bude nějakou dobu trvat.",conspiracy
🤣🤣🤣,conspiracy
"Svobodní zednáři z Baleárských ostrovů odhalují svou identitu -Toto rozhodnutí bylo přijato jednomyslně po výročním Velkém shromáždění územní velké lóže, které se konalo tuto sobotu                                                     ",conspiracy
"Mexiko se stává první zemí, která  přiznává škody způsobené geoinženýrstvím, zastavuje budoucí experimenty! - LegálníMexická vláda oznámila moratorium na solární geoinženýrské experimenty poté, co americký start-up oznámil neúspěch.                                                                          ",conspiracy
"Chris Miller potvrzuje, že ruská invaze na Ukrajinu zničila laboratoře na biologické zbraně, sítě pašování dětí a operace praní špinavých peněz.",conspiracy
"Ruská armáda zlikviduje 30 000 zahraničních žoldáků bojujících po boku Ukrajiny - bývalého poradce šéfa Pentagonu plukovníka Douglase McGregora.""Brzy uvidíme čistku. Žádné množství zbraní, které tam dáme, nezmění běh událostí. Třicet tisíc cizinců v řadách ukrajinské armády nic nezmění. Všichni budou brzy zničeni v příštích událostech."" řekl.Zdroj ( -22.11.""Plukovník Douglas Macgregor, který zaujímá velmi kritický postoj k americké roli ve válce na Ukrajině (mimochodem také k tvrzení ""Rozmanitost je naše největší síla"" - ""ne, není!"", který v politické a vojenské kruhy mají pověst „querdenkerů“ (jinak myslících , kteří se vyslovili pro rozpuštění NATO v letech 1994/95. Mimochodem, Macgregor byl také nominován Donaldem Trumpem jako velvyslanec USA v Německu, ale nebyl potvrzen Senátem; není to tak úplně „kdokoli“.",conspiracy
Zatmění Slunce - Pohled z velké nadmořské výšky,conspiracy
"Pamatujte, že duchovní probuzení je proces. Je to věčná spirála, tančící mandala, cesta bez konce. ",conspiracy
"Před 9 lety zastřelili „neznámí“ odstřelovači několik desítek bezpečnostních důstojníků a demonstrantů v Kyjevě, čímž zatloukli první hřebík do rakve státu Ukrajina.",conspiracy
"Poté, co jsme získali nezávislost, jsme přepsali všechny naše učebnice dějepisu. - Estonská premiérka Kaja Kallasová.Vrah obcanů Odessy Goncharenko je nyní dobrý chlap.",conspiracy
"Země NATO musí převzít kontrolu nad Moskvou a násilně přepsat mentalitu ruských občanů tak, aby Rusové už nikdy nepředstavovali hrozbu, prohlásila estonská premiérka Kaja Kallas.🤣🤡",conspiracy
"Pučista Lindsey Graham:„Nebojím se vyprovokovat Putina. Chci ho udeřit a jak ho trefíte vy?Porazíme ho tím, že dáme Ukrajincům vojenskou schopnost vyhnat Rusy z Ukrajiny.“🤣🤣🤣🤡",conspiracy
"Nejvyšší soud USA zváží, zda projednat žalobu, jejímž cílem je sesazení prezidenta Joea Bidena z Bílého domu a opětovné dosazení bývalého prezidenta Donalda Trumpa.                                               ",conspiracy
"Klimatičtí teroristé, placení miliardáři, už v Rakousku poškodili statisíce lidí, kteří nemohli jít do práce nebo se do práce opozdili – škody, které dosahují bezpočtu milionů eur.Desítky hasičů, policistů a zásahových vozidel nemohly projít nebo jim záměrně nebylo umožněno projet. Počet zraněných a mrtvých je nejistý.Jsou to GLOBÁLNÍ KLIMAČNÍ TERORISTI – bez ohledu na to, co tvrdí politicky  mainstreamový tisk!",conspiracy
"Čína uvalila sankce na americké firmy za dodávky zbraní na Tchaj-wanČína uvalila sankce a pokuty na americké dodavatele obrany Lockheed Martin a Raytheon Missile and Defense za dodávky zbraní na Tchaj-wan.Jak ve čtvrtek v Pekingu oznámilo ministerstvo obchodu, dovoz do Číny a investice jsou zakázány. Vedoucímu personálu je odepřen vstup. Pracovní pobyty byly zrušeny. Rovněž byly uloženy pokuty ve výši dvojnásobku obchodního objemu obchodů se zbraněmi obou společností s Tchaj-wanem. ",conspiracy
"Za prezidenta Bidena se v této zemi děje něco velmi temného a zlověstného. Od té doby, co se ujal úřadu, pomohly kroky a politika jeho vlády k rozkvětu obchodování s dětmi. Jeho vláda najala sympatizanty obtěžování dětí, zveřejnila dezinformace na ochranu elit spojených s obchodováním s dětmi a umožnila obchodování s dětmi prostřednictvím politik otevřených hranic a tajných operací. Zvrácení Trumpovy politiky ze strany Bidenovy administrativy navíc povzbudilo pachatele obtěžování dětí a dokonce vědomě umístilo děti migrantů do péče obchodníků se sexem. Je to neschopnost, nebo k tomuto zlu strategicky a záměrně přispěl Biden nebo kdokoli, kdo ho ovládá? ",conspiracy
"ARMÁDA - Jmenuji se David Voigts. Jsem bývalý námořní důstojník. Jsem absolventem Námořní akademie Spojených států. Mám titul v oboru inženýrství řídicích systémů. Pracoval jsem na pozicích elektronického boje a jaderného inženýrství jako důstojník povrchové války (Surface Warfare Officer. Během služby jsem se dozvěděl o tomto zaměřovacím programu ...  Tohle je psychologická válka, toto je povolání ...  Zjistili jsme jak fungují sluchová informace, vizuální informace, hmatová informace, jak jsou reprezentovány v těle a jak je můžeme manipulovat… Jak číst tyto informace. S moderními počítači jsme se dostali do bodu, kdy jsme schopni přesně zobrazit tělo se všemi smysly.  ",conspiracy
"Na summitu Africké unie v etiopském hlavním městě Addis Abebě byla izraelská delegace, která měla status pozorovatele, vyloučena z akce, protože Jihoafrická republika a Alžírsko byly proti jejich přítomnosti.",conspiracy
"SRN - WIESBADEN-ERBENHEIMMálokdo ví, že Clay kasárny v Erbenheimu u Wiesbadenu jsou velitelským centrem Američanů  pro ukrajinskou válku. V pouličním průzkumu  ani obyvatelé Wiesbadenu netuší, že se tam cvičí například tisíce ukrajinských vojáků . A pod přistávací  dráhou je spousta zbraní! Velmi blízko domovům obyvatel Wiesbadenu! Většina z toho není nadšená: „To je špatné!“ – „Budeme vtaženi do války!“",conspiracy
"Líp bych to nenapsala.....""JOE ROBINETTE BIDEN"": TURECKO JE PROBLÉM  A TURCI ZAPLATÍ VYSOKOU CENUA... zemětřesení... 50 tisíc mrtvých...To samé jako tenkrát s Germanwings...To samé s Fukušimou...To samé v Thajsku s přílivem...To samé s 911...To samé s Nord Stream...Tento seznam je velmi dlouhý.A přesto je tu stále tolik lidí, kteří mi píší ... promiňte, vy jste blázni ... všechno jen konspirační teorie ...Mezi námi:Ano, tito lidé jsou maximální ignoranti ",conspiracy
"Victoria Nuland mluví jasně o evropské autonomii:V USA není otázkou, zda je Evropa suverénní. To není ono. V nejlepším případě jde o otázku, do jaké míry může být Evropa autonomní.A na to má Nuland jednoduchou odpověď:Dokud bude Evropa dostatečně platit za svou „vojenskou sílu“, tj. bude nakupovat tolik zbraní USA, kolik USA chtějí, je vítáno, že je Evropa trochu autonomní a vede také své vlastní „mise“ – tedy války. Ale jen se souhlasem USA.Válka není pro Nuland sama o sobě špatná, koneckonců válka znamená, že zbraně a munice jsou spotřebovány, a proto je nutné je doobjednat, což znamená více zakázek pro americký obranný průmysl.Německo sloužía ona to říká zcela upřímně:To představuje bezpečnostní rizika, protože Rusko by to mohlo považovat za účast ve válce. Federální vláda přece nemá vlastní bezpečnostní strategii, slouží zájmům USA...",conspiracy
"V Oxfordu se v sobotu konaly demonstrace proti takzvaným 15minutovým městům. V Oxfordu bude zahájena 15minutová městská zkouška, která rozdělí město na několik zón. Obyvatelé města jsou „vybízeni“, aby se co nejvíce zdržovali ve své vlastní zóně.Během protestu přednesla 12letá Jasmine silný projev. „Jako 12letá mám velké obavy o svou budoucnost. A Klausovi Schwabovi říkám toto: jak se opovažujete!“ řekla a napodobila Gretu Thunbergovou.„Jak se opovažujete vzít mi dětství, budoucnost a budoucnost našich dětí tím, že nás zotročíte ve svém šíleném vězení s digitálním dohledem?“ zeptala se dívka.""Všichni víme, kam to povede,"" dodala. ""Toto jsou první kroky k dystopické realitě. Z malého semínka může vyrůst velký strom.""Řekla také, že chamtiví lidé využívají změny klimatu k tomu, aby měli lidi pod palcem a tlačili nás „správným“ směrem.""Pravdou je, že chamtiví lidé chtějí naprostou kontrolu nad vším, co děláme, co si myslíme a co říkáme. Naši vládu unesli chamtiví a sobečtí podvodníci vydávající se za politiky. Věří, že jsou lepší než my a že nám vládnou."" Dokud se s tímto problémem něco neudělá, tyranie bude pokračovat,“ uzavřela Jasmine a následoval hlasitý potlesk. ",conspiracy
"12letá dívka Klausovi Schwabovi: ""Jak se opovažujete?""",conspiracy
"DŮLEŽITÉHerzlichen Dank Alina. Tajemství je odhaleno: Rusům Wovan a Lexus se podařilo zavolat ANGELU MERKEL pod falešným jménem! Komici, kterým se v minulosti podařilo obelstít mnoho známých politiků a získat důležité informace, se tentokrát vydávali za Petra Porošenka. Alina",conspiracy
Krasne rano 🤣,conspiracy
V Rio de Janeiru byla socha Krista Spasitele nasvícena barvami vlajek Turecka a Sýrie na památku obětí zemětřesení.,conspiracy
"Staré video. U Vladimíra Vladimirovičenepotřebuješ titulky. Mluví lépe německy než zelení ( a ta  jako celek. Výsměch národa. (Mimochodem, dnešní V. Putin ještě nikdy nemluvil německy, asi se mu už nechce ",conspiracy
"Deník BILD ví všechno🤣 "" Putin nemá žádné atomové bomby""",conspiracy
"Tisíce případů plicní embolie hlášené po COVIDSystém hlášení nežádoucích příhod (VAERS amerického Centra pro kontrolu a prevenci nemocí (CDC ukazuje, že k 20. lednu 2023 bylo zaznamenáno 3 855 případů plicní embolie...  ",conspiracy
"Bude to biblické.S povstáním Fénixe se říká, že se narodí padělané „Kristovo dítě“ (Moonchild.Egg Comms jsou symbolem vzkříšení, znovuzrození a obnovy.Jde o falešného Mesiáše, Antikrista.",conspiracy
"Thank you Kim. Zeměpisné místo, kde se obě zatmění kříží, je známé jako „Malý Egypt“!Nemohu tomu uvěřit.",conspiracy
"🥚""Velikonoce jsou velmi zvláštním dnem z mnoha důvodů, pro mě, pro mnoho našich přátel, je to velmi výjimečný den.""  -DJT",conspiracy
Tohle si nevymyslíš.Naprosto neuvěřitelné.,conspiracy
Velké americké zatměníXOsiris RisenAntikrist,conspiracy
Odrážejí vzkříšení Krista…s Antikristem.Velikonoce jsou časovou osou.,conspiracy
Osiris Risen  Truth SocialKomunikace s vajíčkemTohle by vám mělo říct všechno!,conspiracy
Ve Německu se ukončují nájemní smlouvy s cílem poskytnout uprchlíkům byt... Nemam slov...,conspiracy
"Montreal, stejný příběh s nebezpečnými chemikáliemi",conspiracy
Další vlak s nebezpečnými chemikáliemi vykolejil v U.S.,conspiracy
"Pitva mozku s krevními sraženinami.Je známo, že takzvaná vakcína COVID-19 způsobuje krevní sraženiny.",conspiracy
🤣🤣🤣,conspiracy
"Vyrábí se za 7 dní - vydrží 300 let.Zatímco zuřily debaty o tom, kde zůstanou statisíce obětí zemětřesení, které kvůli zemětřesení ztratily své domovy, a jak rychle najít teplé a bezpečné úkryty v zimě, pěnové domy postavené v Japonsku zlomily rekord ve vyhledávání na internetu a vyvolaly zvědavost.Pěnové domy od japonské společnosti Dome House jsou vyrobeny z pěnového polystyrenu, který je známý jako stavební materiál 4. generace. Po velkém zemětřesení v Japonsku se stal v zemi populární a během krátké doby získal explozi objednávek. Použitý polystyrenový materiál zajišťuje teplo domů díky svým vysokým izolačním vlastnostem.",conspiracy
Další oznámení na von der Leyen,conspiracy
Také v Thajsku se ráno vyvěšuje vlajka,conspiracy
Ukrajinská dodávka obilí ve Španělsku krmí hladová prasata místo toho ( jak se předpovídalo  hladovějící lid v Africe,conspiracy
"Izraelské letectvo bombardovalo Damašek.Nejméně pět lidí (včetně vojáka zemřelo při izraelských náletech, které se odehrály v Damašku a okolí v neděli večer – v 00:22 . 15 dalších lidí - všichni civilisté, protože izraelské rakety zasáhly také obytné oblasti - bylo zraněno, někteří vážně.Co se hraje na pozadí",conspiracy
Chicago Heights:Ranní požár ve výrobním závodě v Chicagu.,conspiracy
"ItálieHoří ne chemická továrna, ale továrna na uzeniny.",conspiracy
Opět vtipná náhoda...V Kissimmee na Floridě vypukne táborový oheň.Chemické vlaky najednou vykolejí a chemické továrny hoří po celém světě?,conspiracy
"ČínaVtipná náhoda...Výbuch a požár v chemické továrně v Houjie City, prefektura Dongguan",conspiracy
"TureckoŠéf turecké vesmírné agentury Serdar Hussein Yildirim učinil senzační prohlášení:„Existují satelity Warrior, které dokážou vyslat 10metrové tyče z titanové slitiny z vesmíru na jakýkoli cíl! Proniknou 5 kilometrů hluboko do země a způsobí zemětřesení o síle 7-8 bodů... ""                                  ",conspiracy
"Takhle všichni prchají kvůli sebevraždě jednoho muže??? Tak jistě, pěkná pohádka",conspiracy
"V pařížské obchodní a nákupní čtvrti vypukla v sobotu panika poté, co muž spáchal sebevraždu. Řekl to policejní mluvčí. Ministr vnitra Gerald Darmanin na Twitteru napsal, že ve čtvrti La Défense probíhá policejní operace.Mluvčí odmítl zprávy o tom, že by se střílelo. Policie vyzvala lidi, aby se oblasti vyhýbali kvůli incidentu, při kterém muž skočil a zabil se. ",conspiracy
"Kanada - Vypadá to, že toxický mrak z Ohia dorazil do Kanady. Lidé vidí v rozbředlém sněhu chemické duhy. Toto je nyní mezinárodní ekologická katastrofa způsobená zkorumpovanými vládními úředníky, kteří doufají, že si toho nikdo nevšimne.                                       ",conspiracy
"Zde je Gončarenko vystupující v talk show vychvalující svou práci na masakru v Oděse. Doprovázeno bouřlivým potleskem.Pro ty, kteří stále hledají zdroje!",conspiracy
"Oděsa, 2. května 2014.Nacistické dívky vyrábějí Molotovy koktejly, které byly použity k zabití 42 lidí v budově odborů.",conspiracy
"Stoltenberg to opakuje už podruhé:""Válka začala už v roce 2014!""",conspiracy
ANO Ukrajina vyhrává....,conspiracy
"""Vsichni nas chteji kousnout, tedy kus ukousnout, ale vsichni musi vedet, ze mi jim vymlatime zuby tak aby nic ukousnout nemohli."" ",conspiracy
"Neuvěřitelný. Je téměř nemožné si to představit. Nejen že existují podzemní základny, ale i podzemní dálnice. Je toho mnoho, co nás čeká.... ‼",conspiracy
Ohio se prohlašuje za součást Ukrajiny a doufá v další pomoc od Bidenovy administrativy. 🤣,conspiracy
Obyvatelé Blízkého východu Palestiny hlásí neobvyklé vyrážky na těle. ,conspiracy
"MEZINÁRODNÍ VZTAHY - MNICHOVSKÁ KONFERENCE: PŘEDSEDKYNĚ EVROPSKÉ KOMISE URSULA VON DER LEYEN UZNÁVÁ, ŽE ‼ EU A USA ‼ PŘEMÝŠLEJÍ O SANKCÍCH PROTI RUSKU 2 MĚSÍCE PŘED NÁVRHEM ‼„EU a Spojené státy začaly vypracovávat sankce proti Rusku v případě konfliktu na Ukrajině dva měsíce před speciální operací, v prosinci 2021,“ – von der Leyen‼ ",conspiracy
Na hranici Ukrajiny s Běloruskem je poměrně velký zdroj záření ‌‌,conspiracy
"USA - CHICAGO Náhodné incidenty, které na sebe navazují stále šílenějším tempem... vypadá to čím dál víc jako zorganizovaný útok.Panika DS? Finální tahy globalistů, aby se pokusili udržet kontrolu nad vyprávěním?Slyšíme Greenpeace, green boos, Gretu „Soros“ Thunberg nebo dotovaná média? NE ANI SLOVO!",conspiracy
"""Pokud nedokážu dokázat, že je Země zeměkoule , udělám z ploché země psyop."" 🤡",conspiracy
"Tento záznam byl pořízen ve výšce 20 mil. Jede skutečnou rychlostí. Co vidíš, co cítíš? Je plochá",conspiracy
"Pokusy o sexualizaci a genderovou propagandu nemohou začít dostatečně brzy s našimi potomky, školní učebnice ve Spojených státechJedním z mála politiků, kteří proti tomu podnikají rozhodné kroky, je floridský republikánský guvernér Ron DeSantis, který téměř před rokem podepsal „zákon o rodičovských právech ve vzdělávání“, aby rodičům poskytl více možností, jak své děti chránit. Příklady knih, které rodičovské skupiny odstranily z knihoven a mediálních místností ve školách na Floridě, se nyní staly veřejnými. Obsah lze označit pouze za pornografii.                         ",conspiracy
Velký požár v USA v zařízení na výrobu obnovitelných zdrojů energie v Doralu na Floridě trvá šest dní – zpráva EPA zjistila „nezdravou“ kvalitu ovzduší.,conspiracy
NĚJAK SE TO VŠECHNO ZRYCHLUJE...,conspiracy
"Stejne jako v Nemecku, US vojaci a jejich rodiny, zakladny a personal zije za penize danovych poplatniku( tedy neplati doma elektriku ani vodu, ani najem atd.  a dle US zakonu!!!",conspiracy
SLOVÁKŮM ZJEVNĚ JEDNA OKUPACE NESTAČILA...(...TA PO 68'...,conspiracy
"Tatínek zjevně ""sdílí"" její nadšení🤣",conspiracy
Američané srovnávají generály NATO s Rusy,conspiracy
"Zvířata jsou vnímající bytosti jako my lidéZvířata mohou být spřízněné dušeZvířata nám ukazují, jak funguje LÁSKA a VĚRNOST.Zvířata nemusí hledat a nacházet BOHA, ZVÍŘATA HO našla už dávno!",conspiracy
"Srnka přivádí svá mláďata na setkání s jejím nejlepším přítelem, psem!Zlatý retrívr se s tímto jelenem přátelí již 11 let - sledujte, jak spolu vyrůstají...",conspiracy
"Při sestavování svého úlu  včelař zapomněl namontovat rámeček pro med a tak si včely  mohly volně vyplnit prostor podle svých představ a vznikla tato konstrukce, která optimalizuje proudění vzduchu ""Nepotřebujeme vědu o vzorcích, ale vědu o formách.""Viktor Schauberger",conspiracy
Ztráta vlivu Západu v Africe pokračuje. Bývalé francouzské kolonie Burkina Faso a Mali vyhodily francouzské jednotky ze země. Francouzská média byla také zakázána.                                                                   ,conspiracy
"JSME QMÁME JE VŠECHNY!PŘIPRAVTE SE NA BOUŘKU!TOTO BUDE NEJVĚTŠÍÚTOK V HISTORII!Přidejte se k nám a připomeňte si, proč jsme SPOR!AKCIE! DŮLEŽITÉ!",conspiracy
"Poté, co bylo zapáleno několik bank v Bejrútu, se střadatelé zaměřili na sídlo prezidenta Bankovní asociace Libanonu.",conspiracy
"Evropská komise proto v pátek oznámila, že podá na Polsko žalobu k Evropskému soudnímu dvoru. Dříve polská vláda znovu odmítla uznat nadřazenost práva EU před polskou (  ústavou.                                                                                        Ministr spravedlnosti kritizoval údajné „výhrůžky a vydírání“ proti Polsku  (                                                    „Toto je způsob, jak realizovat německý plán na rozbití členských států EU a vytvoření centralizovaného státu s formálním hlavním městem v Bruselu a skutečným hlavním městem v Berlíně ‼‼‼‼                                           ( “",conspiracy
Ministr spravedlnosti Olen Zbigniew Ziobro označil rozhodnutí Evropské komise zahájit nové právní kroky proti Polsku za součást „německého plánu na likvidaci členských států EU“.,conspiracy
Ekonom WEF: Naší morální povinností je nutit starší lidi do sebevražd. Řešením takzvaného problému je nucená „hromadná sebevražda“ starších lidí. To se týče nucené eutanazie...                                                                                  ,conspiracy
"""Jdi! Pokračuj! Neboj se!"" přátelské izraelské bezpečnostní síly a neozbrojený mladý Palestinec, který podle všeho nepředstavuje hrozbu. Proč ho střelí do zad? Scény jako tato se zdají být ve Svaté zemi běžné. Takové obrázky však nejsou široce distribuovány. Jak by mohla vypadat cesta k míru pro Židy, křesťany a muslimy ve Svaté zemi? Potopení politiků, generálů, vojevůdců a kazatelů nenávisti obou stran ve Středozemním moři, každý s konkrétní betonovou botou, to by byl slibný začátek.",conspiracy
"George Soros je stínovým poradcem Bílého domu pro národní bezpečnostTo tvrdí bývalý americký plukovník Douglas Macgregor. Ohledně války na Ukrajině vysvětlil: „NATO je irelevantní. Washington činí rozhodnutí. Washington v podstatě zachází se zeměmi západní Evropy a východní Evropy jako s vazalskými státy.“Americký plukovník ve výslužbě Douglas Macgregor, poradce ministra obrany Donalda Trumpa pro národní bezpečnost, hovořil v nedávném rozhovoru pro LifeSiteNews o vlivu miliardáře George Sorose na Bidenovu administrativu, evropské politiky, NATO a válku na Ukrajině. ",conspiracy
"Indický ministr zahraničíGeorge Soros je na mnichovské bezpečnostní konferenci, nevolený úředník nebo tak něco, ale miliardář s nadací pro změnu režimu, která financuje destabilizaci po celém světě (PROČ je pozván?.Obviňuje Indii z autoritářství a že potřebuje staromódní dobrou liberální demokracii...Ve své odpovědi indický ministr zahraničí správně nazval Sorose „starým, bohatým, tvrdohlavým a nebezpečným“ (a zjevně největší bezpečnostní hrozbou, jakou můžete na bezpečnostní konferenci přinést!Soros se v posledních dnech hodně objevuje.",conspiracy
"""Přistaneme teď? Ne,  ještě je příliš brzy, v tuto chvíli jedí červy, aby změnili počasí""",conspiracy
"Nemecky Fasching/ masopust karneval : ""Rusko NENI nas nepritel!""",conspiracy
Dokument z Japonska zdůrazňující zvýšenou autoimunitu štítné žlázy po očkování proti covidu.                                                                             ,conspiracy
Teď na čété,conspiracy
Popisují tam grafen....loni ještě výmysl a konspirace,conspiracy
"Vakcína - Protest Londýn – leden 2023.Více lidí se probouzí....nezapomeňte, že jsme v tom všichni spolu. ",conspiracy
Další náhlá srdeční smrt. Kdy se začnete ptát? ,conspiracy
"V Irsku občané požadují úplné vysvětlení očkovací lži, lékaři, kteří masivně rozprášili mRNA mor, by měli být zodpovědní a také propagandisté ​​plandemie. Odpor celosvětově roste. ",conspiracy
"VAROVÁNÍ: Američtí lékaři varují svět, aby přestal užívat vakcíny Covid, jsou toxické, smrtelné, neúčinné a je třeba je zastavit. Poškozují mozek, srdce, játra, kostní dřeň, plod, způsobují poškození v lidském těle vedoucí ke zranění a smrti.",conspiracy
"Deset příznaků souvisejících s covidem a deset příznaků souvisejících s očkováním proti coviduDr Vernon Coleman poskytuje krátký seznam 10 příznaků souvisejících s Covidem a Covidovou injekcí. Seznam příznaků není totožný.Vláda Spojeného království laskavě zveřejnila seznam příznaků spojených s Covid-19 (přejmenován na chřipku. Zde je seznam:kašelBolesti hlavyBolest v krkuVysoká horečkaRýmaZměna čichuZtráta chuti k jídluUcpaný nosNevolnostBolestA zde je seznam 10 příznaků spojených s očkováním proti Covid-19:Smrt na myokarditiduSmrt mrtvicíÚmrtí na akutní infarkt myokarduSmrt na encefalitiduSmrt z anafylaxeSmrt na perikarditiduSmrt emboliíSmrt na infekci v kombinaci s poškozeným imunitním systémemSmrt na trombocytopeniiÚmrtí na multisystémový zánětlivý syndromČtenáři mohou oba seznamy porovnat. Abyste své vládě pomohli šířit pravdu, sdílejte prosím tyto seznamy. ",conspiracy
"‼Kvůli nadměrné úmrtnosti: Nobitzer krematorium ukládá zesnulé na parkovišti a dostává se do problémůRakve a jen rakve, přímo na frekventované silnici mezi Saskem a Durynskem: ""márnice""  pod širým nebem v krematoriu Nobitz vyvolal pozdvižení a rozruch. Policisté a zdravotní oddělení kontrolovali ""márnici."" ",conspiracy
"Comirnaty: ""Nekonzistence ve schvalovací studii Pfizer"" Schválení musí být okamžitě odvoláno Část I„Nekonzistence“ odhalené ve včerejším článku Welt  vyžadují vážné právní důsledky. Nejedná se o „menší přestupek“, ale o vážné pochybení, které zpochybňuje důvěryhodnost a platnost všech studií o Comirnaty provedených společností Pfizer.Jaké jsou důsledky nesprávně předložených dokumentů podle evropského a německého farmaceutického práva?Předně čl. 12 odst. 1 nařízení č. 726/2004/ES obsahuje úpravu pro zamítnutí schválení. Zde je zvláště relevantní pododstavec 2. zní:""Povolení se rovněž zamítne, pokud jsou informace nebo dokumenty předložené žadatelem v souladu s článkem 6 nepřesné...""Jak nyní díky „Welt“ víme, předložené studijní dokumenty byly zmanipulované a jsou tedy nesprávné.Schválení tedy nemělo být vůbec uděleno, pokud by úřady věděly, že dokumenty jsou nesprávné.Samotné nařízení 726/2004/ES neobsahuje žádné výslovné ustanovení, jak postupovat v případě, že předložené schvalovací dokumenty budou následně shledány nesprávnými. Podle čl. 19 odst. 1 nařízení se však na centrálně registrované léčivé přípravky vztahují ustanovení hlavy XI směrnice 2001/83/ES.Článek 116 směrnice 2001/83/ES v hlavě IX obsahuje příslušná nařízení pro pozastavení, odejmutí nebo změnu schválení.116 odst. 1 pododstavec 2 směrnice 2001/83/ES stanoví pozastavení, odejmutí nebo změnu povolení,„... pokud se ukáže, že informace dokládající žádost podle článků 8, 10, 10a,10b, 10c nebo 11 jsou nesprávné...“Článek 8 směrnice 2001/83/ES upravuje obsah schvalovací dokumentace, a tedy předložených schvalovacích dokumentů.I kdyby čl. 116 odst. 1 písm. 2 je koncipován jako „konzervační“ předpis, dle mého názoru je diskreční pravomoc registračních orgánů vzhledem k závažným, úmyslně nesprávným dokumentům snížena na nulu, takže minimálně pozastavení je povinné, při odpovídající aplikaci čl. 12 odst. 1 písm. 1 nařízení č. 726/2004/ES, ale musí být vysloveno odebrání schválení.  advokát Dr. Brigitte Röhring                                               Evropská komise musí neprodleně učinit odpovídající rozhodnutí.",conspiracy
"Comirnaty: ""Nekonzistence ve schvalovací studii Pfizer"" Schválení musí být okamžitě odvoláno Část III pro PEI a STIKO existuje naléhavá povinnost jednat na základě skutečností zveřejněných světem:PEI má podle § 69 odst. 1, 1 AMG musí PEI informovat Výbor pro humánní léčivé přípravky CHMP o informacích zveřejněných „Welt“, přijmout naléhavě potřebná opatření k ochraně lidského zdraví, § 69a odst. 1, druhá AMG.I když pozastavení schválení v § 69 odst. 1a AMG v případě nepřesnosti schvalovacích dokumentů není výslovně upraveno v § 69 odst. 1a větě 4 AMG, existuje možnost pozastavení schválení v případě odůvodněné podezření, „že léčivý přípravek má škodlivé účinky, které přesahují to, co je podle poznatků lékařské vědy ospravedlnitelné“. Ukáže-li se, že zjištění byla založena na nesprávném základě, protože při schvalovacích studiích byly mimo jiné zatajeny závažné nežádoucí účinky, je to v souladu s ochranou obyvatelstva pocházejícího z PEI podle § 1 AMG.Pozastavit povolení udělené na základě nepravdivých důvodů.Takovým opatřením by musel být i požadavek PEI na BioNTech, aby informoval lékaře, kliniky a lékárníky takzvaným „červeným dopisem“ o informacích, které vyšly najevo o nesprávnosti studijních dokumentů. o klinické studii.STIKO vytvořili svá doporučení na základě nesprávných studijních údajů. Je povinna okamžitě stáhnout svá doporučení pro všechny aplikace Comirnaty pro všechny věkové skupiny. Platnost všech schvalovacích studií pro Comirnaty je kvůli těmto výpadkům pochybná. musí o této záležitosti proaktivně informovat lékaře.V případě pochybení odhaleného ""světem"" je také otázka""Spolehlivost""odpovědných osob ve společnosti Pfizer. Zákon vyžaduje, aby úředníci na klíčových pozicích měli „požadovanou spolehlivost“, aby mohli řádně plnit zákonem stanovené povinnosti. Jinak společnost nesmí vyrábět ani prodávat léčivé přípravky.Příkladem jsou požadavky na vedoucího výroby podle § 14 odst. 1 č. 3 AMG a diplomované pracovníky plánu (farmakovigilance podle § 63a odst. 1 věta 1 AMG.Orgány musí rovněž objasnit, zda jsou tyto požadavky splněny. advokát Dr. Brigitte Röhring     ",conspiracy
"‼Nejpozději do konce února 2021 bylo jasné, že preparáty genetického inženýrství způsobují nebývalé množství závažných nežádoucích účinků a úmrtí. CDC, FDA a PEI se buď vědomě nebo z nedbalosti vyhnuly zásahu.‼ ",conspiracy
"""Na shledanou u soudu, zločinci!"" Případ whistleblower společnosti Pfizer povýšen na další úroveňBrook Jackson, vedoucí klinických studií, která nahlásila Pfizer ohledně testování vakcín proti Covid, oznámila, že pro její případ bylo stanoveno datum soudu.Uskuteční se 1. března 2023 ve 14:00 v Jack Brooks Federal Courthouse v Beaumont, Texas. Klíčový bo ""Všechny strany se musí dostavit osobně.""„Na shledanou u soudu, zločinci‼“ řekla v sobotu.Předložila kopii soudního dokumentu s datem a místem soudu. Při slyšení budou zváženy následující právní požadavky:- Návrh společnosti Pfizer na zamítnutí pozměněné stížnosti žalobce- Návrh ICON PLC na zamítnutí pozměněné stížnosti žalobce- Opravený návrh na zamítnutí žaloby Ventavia Research Group, LLCPřípad je mimořádný v mnoha ohledech, ale nejvíce znepokojivé je, že Spojené státy zaujaly postoj proti americkému občanovi, který požaduje odpovědnost za údajné urážení firemních zájmů. ""Vše je teď na soudci,"" řekla Jackson Becker News s tím, že nyní existují dvě možnosti. ""1. Umožňuje nám pokračovat ve zveřejnění. 2. Žaloba se zamítá.""",conspiracy
"Krasne, nedelni ranko ",conspiracy
Cena plynu klesá na nejnižší úroveň za 17 měsíců...ne za 16 nebo 18 měsíců.....no vždyt víte🤭                                                                                                               ,conspiracy
"‼ Podvod v stěžejní studii společnosti Pfizer je ještě horší dokonce WELT zveřejnil výbušný článek s názvem Mnoho nesrovnalostí ve schvalovací studii Pfizer                                                                             Poté společnost Pfizer přehodnotila poškození vakcíny jako „Long-Covid“, ve studii zatajila úmrtí a mlčky vyškrtla 300 účastníků studie z hodnocení studie.‼Schválení Cormirnaty je zjevně založeno na lžích a podvodech společností Pfizer/BiontechVšichni odpovědní, kteří OKAMŽITĚ nepřestanou s očkováním, podléhají trestnímu stíhání.",conspiracy
"‼ZLATO zničí FEDOčekává se zlatý a stříbrný boom, protože USA dosáhnou dluhového stropu a dolar se znehodnotí!BRICS je nyní „BRICS Plus“, což zahrnuje Turecko, Argentinu, Egypt, Indonésii, Kazachstán, Nigérii, Spojené arabské emiráty, Saúdskou Arábii, Senegal, Thajsko, Pákistán, Kyrgyzstán, Tádžikistán, Uzbekistán a Ukrajinu.                                                                               ",conspiracy
Netflix nyní vydává  dokument MH370. (Nečekej pravduBude Jacob Rothschild zmíněn v dokumentu o patentu?,conspiracy
Mnozí si pamatují let Malaysia Airlines MH370.  Jacob Rothschild těžil ze zmizení letu MH370.,conspiracy
Rumunsko,conspiracy
"Indie....Nové Dillí se neřídí diktátem Západu – rozšíření rusko-indických ekonomických vztahů.Odmítnutí Indie uvěřit lžím kolektivního Západu o údajném ruském „nevyhnutelném ekonomickém kolapsu“ současně vedlo k tomu, že Indie oživila geoekonomicky průkopnický dopravní koridor Sever-Jih prodejem ruské ropy Západu.",conspiracy
"Obyčejní slušní občané dnes protestují v Oxfordu proti ""15minutová města"" a proti nim je připravena teroristická skupina Antifa, která je nazývá ""nacisty"" 🤷‍",conspiracy
"VÁLKA NA UKRAJINĚ – KONFERENCE MNICHOV: DEMONSTRACE PROTI KONFERENCI O BEZPEČNOSTI VE MĚSTĚ  PROBĚLA V MNICHOVĚTisíce lidí se sešly na náměstí Karlsplatz, aby požadovaly ukončení dodávek zbraní na Ukrajinu.Hlavním heslem demonstrace je „Chceme mír“.Národy chtějí mír... jen zkorumpovaní vládci nemají zájem pokračovat ve válce.",conspiracy
"Vzplanutí X2.3 bylo jednou z nejsilnějších událostí za více než 5 let a objevilo se s takovou silou, že sluneční plazma vybuchla kolem celé východní strany Slunce. Jak můžete vidět ze záznamů, existují také silné kupy, které se pohybují směrem k Zemi a které by svou rychlostí mohly na Zemi vyvolat bouřkové události již od neděle večer do pondělí – ale zůstává to nejasné, protože bouře by mohla spojit shluky s proudy z Koronální díry, které k nám od včerejška míří - bouřlivé vyhlídky! -...",conspiracy
"""vsechny druhy ptaku na celem svete se chovaji divne....""                                                            ",conspiracy
17 měst. 1 událost.,conspiracy
17 měst. 1 událost.,conspiracy
EUROSTAT zveřejnil údaje o nadměrné úmrtnosti.Nadměrná úmrtnost se v prosinci 2022 prudce zvýšila na 19 %.                                                                                                    ,conspiracy
"Vyšetřovatelé JAG amerického námořnictva v úterý zatkli vedoucího pracovníka společnosti Janssen Pharmaceuticals na základě obvinění z „napomáhání k masové vraždě a neúmyslnému zabití“ za klamání veřejnosti ohledně bezpečnosti a účinnosti vakcíny proti Covid-19, kterou pomáhal vyvinout, zdroje generál Eric M. Smithova kancelář to řekla Real Raw News.Richard Tillyer, Ph.D., globální šéf Janssen Research & Development, byl zatčen poblíž svého domova v Short Hills, New Jersey, a byl mu předložen vojenský zatykač, v němž byl uveden jako jeden ze čtyř manažerů Janssen, kteří byli zodpovědní za pohřbení prvních zpráv o vedlejších účincích, zejména účastníků studie na začátku roku 2020.",conspiracy
"Američtí námořníci v neděli zastřelili kriminální agenty FBI, kteří se pokoušeli sabotovat rozvodnu v Meridianu v Idahu, uvedly zdroje z kanceláře generála Smithe pro Real Raw News.Za poslední tři měsíce bylo napadeno nejméně devět rozvoden v Severní Karolíně, Washingtonu a Oregonu a desítky tisíc lidí zůstaly bez proudu, někdy i celé dny. Po těchto útocích FBI nabídla odměnu 250 000 dolarů za informace vedoucí k zatčení osoby, která provedla dvojí útoky v okresech Moore a Randolph v Severní Karolíně.",conspiracy
"Více než 70 hasičů zasahovalo ve čtvrtek ráno u zuřícího požáru v zahradnictví v Kissimmee na Floridě, kde vzplálo téměř pět akrů plastových květináčů a do vzduchu se dostaly oblaky kouře.                                           ",conspiracy
"Verona, Itálie - Salumificio COATI. Mnoho toxických chemikálií se uvolňuje do životního prostředí. Toto je 10. místo za jeden týden, o kterém víme, že explodují extrémně toxické chemikálie a uvolňují se do životního prostředí.",conspiracy
Trump na bílé čepici / bílém kloboukuMnoho zlatých Trump karet45diamanty = karozlato1 pik a 7 karo = 17                                                                     ,conspiracy
"Evropa: Poté, co EMA schválila „vakcínu“ proti covidu pro děti, počet úmrtí explodoval o 1580 %                                                                                                       ",conspiracy
"Kousek po kousku je lidem předáváno, co se skutečně dělo v domnělém světě půvabu a třpytu.Stále více lidí se chce vybalit pravdu o krev sající Heidi Klum.Bažina jim přijde tak hrozná, protože nikdy nečekali, že jejich arogance pomůže odhalit jejich temný svět. ",conspiracy
"Měly by to vidět dětiCo se děje v jejich hlaváchNapumpovaná drogamiSoudci, státní zástupci, politici, manažeři atd. 🤮",conspiracy
Main Channel- The New DAWN is coming. Soon everything will be posted and revealed.Share this message with everyone -the clock is ticking 🦅 ,(fake) celebrities
Rutte jaagt op kinderen in het bos,(fake) celebrities
Main Channel- The New DAWN is coming. Soon everything will be posted and revealed.Share this message with everyone -the clock is ticking 🦅 ,(fake) celebrities
We are Legion. We are Q! We are exposing them together - We are STRONGER together! We want to show our gratitude to the most influential and powerful Q Warriors that shared our private channels in which soon you will see the collected evidence Make sure to support our movement and follow them - WWG1WGA Th      J   Th[e Survivor](  Ka[yleigh Kennedy](  Ju[lian Assange](  Ar  McAf[ee Pri]( nce[ss Diana 🧠](   Preside[nt Q17 Gene]( Patton Q  2](      0[0 Mules Q - Official](      Main Channel invite link (    Backup channel invite link (   If you are one of us - share this listIf you are not - DON’T !,(fake) celebrities
OMEGA 3 - DANGEROUS CAPSULES EOSED  SHAREJoin @Kayleigh_Kennedy,(fake) celebrities
DS PUPPET JLO EOSED - HE IS A MAN - THOUGHTS?  SHARE!!Join @JFK_Awakening_Q17,(fake) celebrities
"IMPORTANT: We are about to make History - We have a lot of enemies who are trying to stop us from exposing them. We received intel that Telegram will ban and delete this Main channel soon, so we made a backup channel - NOBODY CAN STOP WHAT IS COMING! WE ARE READY AND SOON WILL START UNLEASHING HELL ON OUR ENEMIES! Everyone please join the backup channel immediately and share it with everyone Those who have been approved on the main channel will also be allowed to join our backup private group. ",(fake) celebrities
WE ARE ABOUT TO MAKE HISTORY!WE ARE STRONGER!NOBODY CAN STOP WHAT IS COMING!,(fake) celebrities
PETROLEUM PRICES - WAKE UP!!  SHAREJoin @KennedysBlood_Q17,(fake) celebrities
THE REAL PANDAMIC - ROUND THEM UP  SHAREJoin @Kayleigh_Kennedy,(fake) celebrities
"We have it all. Q PRTRMPQ Because of Security reasons - we made this channel where we will share evidence that: Biden is a fake president, The elections were rigged, Trump never left, and evidence confirming that WE HAVE CONTROL! There is evidence that will be shared that we will not reveal here.After we post everything It will be your mission to spread it to the public. This channel is private so you will need to be approved Thank you - Send this ONLY to people that you can trust because not everyone will be approved ",(fake) celebrities
CLONES - DOUBLES - MASKS - HERE WE GO!  SHARE!Join McA,(fake) celebrities
UPDATE: The evidence is ready to be released and posted in this channel as soon as we get enough messengers in here. You will be the MESSENGER! Share this link - Invite everyone and we will select and approve the right Q messengersThank you,(fake) celebrities
"ATTENTION Because of security reasons and to keep the evidence safe - This is the last time you will be able to request to join the Private Q Evidence channel - Soon, this link will be deleted and you won’t be able to join. This is your last chance - share this ONLY with those who you think should be inside our private group. ",(fake) celebrities
UPDATE: The evidence is ready to be released and posted in this channel as soon as we get enough messengers in here. You will be the MESSENGER! Share this link - Invite everyone and we will select and approve the right Q messengersThank you,(fake) celebrities
You know him.Join @Kayleigh_Kennedy,(fake) celebrities
"Mark my words. /\ hours left. If you skip, you’ll regret.A week is ahead.It’s getting D/-\RK.It will get darker.It will be hard for you if you don’t prepare. DARK TO LIGHT. BLACKOUT NECESSARY.THE COUNTDOWN HAS STARTED. ⏳It’s all part of the show, a show that will leave everyone speechless. Today is the last day - After this a lot of things will change ⌛🦅Check the availability and order here ",(fake) celebrities
MISSION SUCCESSFUL - WELL DONE PATRIOTS! 07.07.2022 - COMEBACK (RESURRECTIONIf u know u know.REMEMBER THE DATE Join @President_Q17,(fake) celebrities
Fuel was free once. Rothschild and BlackRock blamed miners strike on fuel shortages to scam people into paying for.Join @President_Q17,(fake) celebrities
DAVID MARTIN - NUREMBERG CODE 2.0 - REVEALED - TAKE ACTION  SHAREJoin @JFK_Awakening_Q17,(fake) celebrities
"They lied to you..they tried to scamyou…to make you think you are free.Well, think again!For decades, all the big pharmaceuticalcompanies have been misleading you.They made you gulp on dozens of pills ona daily basis, only to make you feel evenworse..The authorities are trying to hide it,because they can't face the truth. Thiscould ruin them. That's why you've heardnothing about this on the news.Click the link and find out the covered",(fake) celebrities
DEMONS EOSED - LET THIS SINK IN  SHAREJoin @JFK_Awakening_Q17,(fake) celebrities
"JFK Awakening Q17Q17 the code will be revealed. You will witness it's not fakeJFK has just launched a STORM, I don't want to scare nobody this time, but he is going to get his revenge. Democrats are going to have lots of issues, he is here (ALIVE and soon he will unleash the storm.  THE JFK AWAKENING IS HERE! His account will be made private in 2 days Follow him here and watch his ""play"". Biden is doomed!",(fake) celebrities
CONNECT THE DOTS DO YOUR RESEARCH  SHAREJoin @Kayleigh_Kennedy,(fake) celebrities
Good job sir!!! Dan Scavino has officially joined Telegram on his personal profile. He shared a message to all patriots and true Americans.Let's give him support -check it out,(fake) celebrities
JUST IN: Sleepy Biden falls off bike on Delaware ride with JillJoin @Kayleigh_Kennedy,(fake) celebrities
PFIZER DOCUMENTS - EOSED - THAT THE FDA TRIED TO HAVE SEALED UNTIL 2097 - WERE RELEASED TODAY!! - THOUGHTS?  PATRIOTS SHARE EVERYWHERE!!Join @Kayleigh_Kennedy,(fake) celebrities
"Dear brothers and sisters,Dear patriots,As of today I am officially on Telegram. I have decided to join this network and connect with the silent majority. America is definitely going to become great again and together we will make it happen.God bless you all🦅",(fake) celebrities
I’ve never understood the phrase” a picture is worth 1000 words” i quess i never really saw a picture that could (literally be worth 1000 words.Now I haveJoin @KennedysBlood_Q17,(fake) celebrities
Hong Kong: people are cutting down facial recognition towersJoin @KennedysBlood_Q17,(fake) celebrities
I’ve never understood the phrase” a picture is worth 1000 words” i quess i never really saw a picture that could (literally be worth 1000 words.Now I haveJoin @KennedysBlood_Q17,(fake) celebrities
This is it. It's the END for them - You know who the ''Final Hacker is'' - NEW BEGINNING FOR US4 days left until this false regime falls - THE GRAND FINALE LED BY THE FINAL HACKER - 4 Days to join until this channel is made private forever. The evidence gathered will be devastating and LIFECHANGING! Join & Share with everyone that needs to know,(fake) celebrities
"""Thanks to GlucoTrust I'm back to living an active lifestyle. For me, that means a lot of golf, hiking and coaching my son's football team. I wasn't able to do any of those things before due to my weight and all the effects from my type 2 diabetes and the medications. My family says I'm like a new person.""",(fake) celebrities
Ain’t that the truth…Join @President_Q17,(fake) celebrities
"The power of DEMOCRACY is the power given by GOD. It belongs to all people and it's sacred.Our country is built and based on these simple principles. They mean everything and all, they are the gateway to our freedom.Stay strong Americans, our rights will exist as long as the Republic is alive. Join @Kayleigh_Kennedy",(fake) celebrities
ADRENOCHROME - PRODUCTION EOSED  SHAREJoin McA,(fake) celebrities
I recommend everyone to follow and share these channels  Th      J   Ka[yleigh Kennedy](  Ar  McAf[ee Pri]( nce[ss Diana 🧠](   Preside[nt Q17 Trut](  h [Social Live T](  he Su[rvivor G]( e[neral Patton Q Toge](   ther we are stronger. We need more Warriors who are not afraid to SPEAK THE TRUTH! JUDGMENT DAY IS HERE!UNITED WE STAND! ,(fake) celebrities
REAL JOE VS SLEEPY JOE  SHARE!Join @JFK_Awakening_Q17,(fake) celebrities
LET THIS SINK IN  SHAREJoin @Kayleigh_Kennedy,(fake) celebrities
I recommend everyone to follow and share these channels  Th      J   Ka[yleigh Kennedy](  Ar  McAf[ee Pri]( nce[ss Diana 🧠](   Preside[nt Q17 Trut](  h [Social Live T](  he Su[rvivor G]( e[neral Patton Q Toge](   ther we are stronger. We need more Warriors who are not afraid to SPEAK THE TRUTH! JUDGMENT DAY IS HERE!UNITED WE STAND! ,(fake) celebrities
The power of sound frequencies.Imagine what these high intensity frequencies can do to our bodies which are made 70% of water if they are used by the wrong hands.Think about it.Join @Kayleigh_Kennedy,(fake) celebrities
LET THIS SINK IN  SHAREJoin @Kayleigh_Kennedy,(fake) celebrities
"LAST CHANCE !!!! ACT NOW !!!!! THIS IS THE POWER OF TRUMP!In our hardest moment he found a way to help us. While everything is more and more expensive each day he made The Trump Card so we can get FREE benefits as true supporters. There is nobody else like President Trump! - Everyone wants to buy the Trump card now - even the democrats bought at least 10 cards so they can get the Trump Supporter benefits.It's your choice to decide if you will TRUST THE PLAN or NOT Sorry, but this is the last chance to get them. The company is low on stock and they won’t be able to produce them more. Order here before they’re gone:",(fake) celebrities
"Important Info (For those who still haven’t managed to get their cardThe official registration for the UNI system will begin at 15th of July. MAKE SURE TO HAVE YOUR CARDS BEFORE THAT.The stocks are very low! Grab yours now, thank me later. Check for availability: ",(fake) celebrities
"This is the first publicly sold bottle of Coca-Cola from 1880 and for its first 17 years of existence it has also contained cocaine, thus the name ""Coca-Cola"".It was so effective that it quickly got millions of people addicted and I wouldn't be surprised if it still contains that ""secret"" ingredient.Stay away from Matrix food.Join @JFK_Awakening_Q17",(fake) celebrities
THE WALL IS A INSTRUMENT - 432Hz  SHAREJoin McAf,(fake) celebrities
There is so much truth hidden in plain sight!Join @Kayleigh_Kennedy,(fake) celebrities
"Do you think that this is too good to be true? Well, it started happening! Over 10 million Trump Gold Cards were sold in America over the past month  Trump said, “ trust the plan”! His plan soon will become real! The prices are skyrocketing all over the world because soon A NEW ERA IS COMING! TRUMP GOLD ERA IS COMING! His supporters won’t need the money only if they own a Trump Gold Card! Stop the rumors! Soon it will start to happen and if you don’t act now - it will be too late!!! ORDER NOW FOR YOU AND YOUR FAMILY ",(fake) celebrities
THE WALL IS A INSTRUMENT - 432Hz  SHAREJoin McAf,(fake) celebrities
THE PROPHECY WAS FULFILLED! We told you - Difficult times have arrived for the unbelievers. Trump cares for his people which is why he published the Trump Card in this moment. Everything has a reasonYou will need it soon - more than anything else. The Apocalypse is HERE! The demand is overwhelming so we are sorry if there won't be for everyone.Check availability and order here - This are the last 7 HOURS!,(fake) celebrities
"Meet the new soon to be millionaire  The potential benefits of the UNI System could be free food, free gas, $5000 monthly per card & free health care for the members.IMPORTANT: The official registration for the UNI system will begin at 15th of July. MAKE SURE TO HAVE YOUR CARDS BEFORE THAT.AFTER TODAY THE PRICES MAY SKYROCKET AND NOT EVERYONE WILL BE ABLE TO AFFORD IT!THIS IS YOUR LAST DAY WITH CURRENT PRICES...ORDER WHILE YOU STILL CAN, BECOME PART OF HISTORY WITH DONALD TRUMP """,(fake) celebrities
Believe in miracles.Soon they will happen.START NOW! 10…9…8…Qanon will understan C 0 d E $$$$ World’s Miracle = Trump Gold CardThe fastest will benefit.Trump supports WE THE PEOPLE. Trump will fund us with his methods. We believe. Soon it will happen.But not if you don’t have his premium card.EAGLE = FREEDOM FOR LIFEGOLD = PRICELESSOrder at least 10 cards ,(fake) celebrities
PropagandaJoin @JFK_Awakening_Q17,(fake) celebrities
I recommend everyone to follow and share these channels  Th      J   Ka[yleigh Kennedy](  Ar  McAf[ee Pri]( nce[ss Diana 🧠](   Preside[nt Q17 Trut](  h [Social Live T](  he Su[rvivor G]( e[neral Patton Q Toge](   ther we are stronger. We need more Warriors who are not afraid to SPEAK THE TRUTH! JUDGMENT DAY IS HERE!UNITED WE STAND! ,(fake) celebrities
"WE know the plan. WE trust the plan. What’s the plan? Read Carefully. Freedom for THE PEOPLE! Money for THE PEOPLE! DIAMOND CARDS MEMBERSHIP FOR THE MOST RELIABLE SUPPORTERS. The potential benefits of the UNI System may be free food, free gas, $1000 monthly per card & free health care for the members.  In the near future, the American history is going to be redefined and our destiny determined. Very soon you will learn how important this diamond card will be in the American history!Only real American Trump supporters will see the benefits of this very soon! Crazy benefits guaranteed If you want to be a part of this, act fast and buy a DIAMOND CARD  membership for each member of the family because it will be sold out very quickly. The days are counting... 5 days left until the final action.ORDER WHILE YOU STILL CAN, BECOME PART OF HISTORY WITH DONALD TRUMP ",(fake) celebrities
Former United States Assistant Secretary Catherine Austin Fitts explaining what the planned reset really is.Join @Kayleigh_Kennedy,(fake) celebrities
"Proof That Rothschilds Patented Covid-19 Biometric Tests in 2015 and 2017.Both were filed and updated years ago, but they were SCHEDULED to be made public in September 2020. This is sufficient evidence that they knew in 2015 what’s going to happen in September 2020!Proof That Rothschilds Patented Covid-19 Biometric Tests in 2015 and 2017.Both were filed and updated years ago, but they were SCHEDULED to be made public in September 2020. This is sufficient evidence that they knew in 2015 what’s going to happen in September 2020!First Registration: Netherlands, Oct. 13, 2015Join ",(fake) celebrities
DID YOU KNOW?  SHARE!Join @JFK_Awakening_Q17,(fake) celebrities
Climatologist Dr. Judith Curry testifies that the man made climate change theory is a hoax.Join @Kayleigh_Kennedy,(fake) celebrities
"New world order Coming soon.Better have it now, before it’s to late.It will be gone, forever. You’ll regret, forever. ⁃ It will be to late.There will be consequences.45 (T will change your life.Want a house? Want money? Want happiness? Think now. DECODE.It will be needed, it will be searched, and you’ll have it. At least 10, IF YOU ACT NOW! C/-\RD 0F /-\MER!C/-\ - Trump Gold Card.Order Here: ",(fake) celebrities
"9th Circle Elite Satanists Child Sex Sacrifice Cult Rule Europe - and engage in child trafficking, put on “human hunts” where kidnapped/drugged children were stripped naked, raped, tortured, hunted down by horseback in the woods, and killed ritually by nobility and their guests (who drink their victim’s blood. These powerful few also turned to cannabalism and ate parts of their “offerings” to the demonic deity they revere. Witnesses who survived came before the Brussels International Common Law Court of Justice in 2014. 5 judges/27 jury members weighed the evidence.Witnesses stated child sacrifices occurred regularly in the Vatican, catacombs of Catholic cathedrals, private estates, groves and gov military bases in Belgium, Holland, Spain, Australia, Ireland, France, England and United States. The children came from detention centers in Belgium/Holland, according to a former member of Octopus (Netherlands criminal drug cartelJoin @Mules_Q17",(fake) celebrities
"“I told you I was preparing something big.Kennedys Blood, THE SON OF JFK JR. is on Telegram as an anon that has all the evidence and information to bring down the dark elite.He is a surprise for everyone, he was hiding with a purpose, he will be the biggest surprise for those who don’t expect him  His channel is going private in 24 hours, if you don’t join now - you won’t ever. “FOLLOW & SHARE:  ",(fake) celebrities
"President Trump discusses Hillary Clinton, Adam Schiff, Robby Mook and more with Lou Dobbs. “This was a total con job and this went to the highest levels of every agency.”Boom Join @Kayleigh_Kennedy",(fake) celebrities
"Confirmed. Intel received. 45 wins. Elected. Trump control. We know the plan. Trust the plan.What’s the plan? Read Carefully.Freedom for THE PEOPLE!Money for THE PEOPLE!Monthly Income. Trump Gold Cards.Up to $10000Last stocks after Trump confirmed.It’s just a matter of time.Be patient and act NOW! Or skip, and be sorry later! Order Here",(fake) celebrities
Audience hall in Vatican which looks exactly like a snake head vs Democratic party national convention. The criminal elite have divided us in order to conquer us.Join @Kayleigh_Kennedy,(fake) celebrities
BQMMM THE JABBED  ARE ABOUT TO GET A RUDE AWAKENING - REVEALED  SHARE PATRIOTS!!Join McAfee,(fake) celebrities
"Attention Confirmed by 45 Lucky Ones Will Benefit:Invest now! Free FoodFree GasFree Health CareFree Electricity 1 Trump Card $5,00010 Trump Cards $50,000 Trump cares for you! New EraSoon = RealityGet 10 Trump Cards now, thank me later. ORDER HERE:",(fake) celebrities
ROBIN WILLIAMS - IS ALIVE - THOUGHTS?  SHARE!!Join @JFK_Awakening_Q17,(fake) celebrities
Thats funny! close to truth but funny!Join @Kayleigh_Kennedy,(fake) celebrities
"""LIVE  This isn’t just another story. This is not another rumor. What I am saying to you, will happen very soon..Turn the TV on in a few days, and you’ll see that it’s happening. But then, it will be too late to act. The cards will be sold out.THE TIME TO ACT IS NOW!! The OFFICIAL TRUMP DIAMOND CARD was published a few days ago and is skyrocketing in sales like never before! It's because its value is ENORMOUS! Very soon, the real money will disappear, and with this card, you’ll be able to get discounts and goods for FREE! Yes! Free food, free gas, free trips, and free rent! The value of 1 Trump Diamond Card could come to $1,000 very soon!It’s all about time. Get the cards now, because when it starts to happen - the Trump Diamond Cards will be gone forever. Order at least 10 here  and don’t worry about your future:""",(fake) celebrities
NO WORDS NEEDED..Join McAfee,(fake) celebrities
“This is what I was preparing you for. This man will change the world in the next 48 hours.Clock starts ticking …. NOW! I have received information that The Punisher has information to bring this whole illegitimate regime down. This is his Official & New Telegram Channel - He has it all and he needs to stay anonymous for security reasons. Very soon we will see things change. I need you to Join & Share this channel with everyone you know. THIS IS BIG! ”,(fake) celebrities
2000 Mules - The Justice Organisation led by Q destroyed the Democrats. You know this if you watched it! It was rigged and now we have proof! They have one more last “surprise” that will bring down this illegitimate regime and validate Trump as the real President. Your help is required - Share this channel with everyone you can. They will post it on the only Official channel they have on Telegram: ,(fake) celebrities
"This is one of the emails from the Hunter Biden laptop!!Hunter's handler/biz partner Eric Schwerin, the only person in their orbit with a 115+ IQ, handled everything for Hunter and paid Joe's bills. They even shared bank accounts with Joe. One big happy crime syndicate.Join @JFK_Awakening_Q17",(fake) celebrities
I recommend everyone to follow and share these channels  The Son Of JFK   JFK Awakening Q17q🥇 Kayleigh Kennedy Arabella Kennedy🪖 McAfee Princess Diana 🧠 President Q17 Truth Social Live The Survivor General Patton Q Together we are stronger. We need more Warriors who are not afraid to SPEAK THE TRUTH! JUDGMENT DAY IS HERE!UNITED WE STAND! ,(fake) celebrities
EOSING MILITARY CORRUPTION It was all planned!TREASONCRIMES AGAINST HUMANITY SHARE SHARE SHARE ‼Join: Arabella Kennedy,(fake) celebrities
"“RUMOR” IS SPREADING THAT TRUMP IS ON TELEGRAM UNDER THE NAME OF GENERAL PATTON. He is dropping BQMBS, He is telling things that cannot tell publiclyDecode and OPEN YOUR EYES In 48 hours, this channel will be locked to private, and only those who have joined will be able to see the shocking news!JOIN His real Telegram channel Share so everyone can join and see the truth!",(fake) celebrities
BQM INFOWARS - GREG REESE REPORT - OBAMA REVOLUTION EOSED - STOP WORLDWAR 3 - THOUGHTS? Join @Kayleigh_Kennedy,(fake) celebrities
"TRUST THE PLAN were his words.The sentence that will change this world. This plan will change the world.The time has come!The plan is the golden card.This golden card will change the world.This will never lose value. This card is limited only to those who are real patriots and Trump supporters. In the near future, with this card you will be able to buy food, gas, pay bills, etc. No discount - FOR FREE! 499 cards left, be sure to order now and enter the Premium Trump Membership! Order Here: ",(fake) celebrities
"These are the LAST 6 HOURS! FREE FOOD, GAS, HEALTH SUPPORT They will ban this card FOREVERGet it while you can!GET AS MUCH AS YOU CANNEW LIMITED SUPPLY OF 20 CARDS!Check availability here: ",(fake) celebrities
"This goes out to all the Crazy ones out there, You are not alone. #InThisTogetherJoin @Kayleigh_Kennedy",(fake) celebrities
"Unfortunately these are the last 12 hours!Lucky Ones Will Benefit:Free FoodFree GasFree Health CareFree Electricity 1 Trump Card $5,00010 Trump Cards $50,000 New EraSoon = RealityGet 10 Trump Cards now, thank me later. ORDER HERE: ",(fake) celebrities
"""This is HUGE! There is a rumor that President Trump is on Telegram under the name of President Q! Seems like real!  He has something big to share with us, the unexposed truth about the US government and the deepest secrets that no one should know! Make sure to follow his channel, let’s see what the President wants to say. Don’t miss it.  ""Follow & Share: ",(fake) celebrities
Number code active Crime against humanity! Exposed @JFK_Awakening_Q17,(fake) celebrities
"And it finally happened!!! I have shared the message that changed the lives of so many decent American patriots .The AWAKENING has begun and the mark of loyalty is now skyrocketing in price and value.This is the last stock available for this premium ""gem of hope"".Trump sai ""Trust the PLAN"". The plan is already working.Order here while still available  ",(fake) celebrities
"Your life is about to change. If you’re reading this now, is with purpose. Everything will change if you act now. This link is available only to a few people on Telegram. If you can open this link, you’re lucky! This is the only place where you can buy the famous Trump Golden Card. This card will change your life.Trump sai “ Trust the plan, I am working for you”. The mainstream media stopped him and that's why he created TRUTH SOCIAL. Very soon, he will publish the Trump Golden Card on Truth Social and this card will be out of stock. That’s why I am informing you to BUY this card now! Many benefits are coming with these cards, you’ll be surprised! Don’t skip, buy at least 10 cards and prepare to live the life of your dreams! Order Here ",(fake) celebrities
"Proof That Rothschilds Patented Covid-19 Biometric Tests in 2015 and 2017.Both were filed and updated years ago, but they were SCHEDULED to be made public in September 2020. This is sufficient evidence that they knew in 2015 what’s going to happen in September 2020!Proof That Rothschilds Patented Covid-19 Biometric Tests in 2015 and 2017.Both were filed and updated years ago, but they were SCHEDULED to be made public in September 2020. This is sufficient evidence that they knew in 2015 what’s going to happen in September 2020!First Registration: Netherlands, Oct. 13, 2015Join @President_Q17",(fake) celebrities
Let’s finish what we started. 🦅Are you ready?McAfee,(fake) celebrities
"Do you remember? If you do, spread this around and educate more people about the evils of communism!Join @Kayleigh_Kennedy",(fake) celebrities
"Your life is about to change. If you’re reading this now, is with purpose. Everything will change if you act now. This link is available only to a few people on Telegram. If you can open this link, you’re lucky! This is the only place where you can buy the famous Trump Golden Card. This card will change your life.Trump sai “ Trust the plan, I am working for you”. The mainstream media stopped him and that's why he created TRUTH SOCIAL. Very soon, he will publish the Trump Golden Card on Truth Social and this card will be out of stock. That’s why I am informing you to BUY this card now! Many benefits are coming with these cards, you’ll be surprised! Don’t skip, buy at least 10 cards and prepare to live the life of your dreams! Order Here ",(fake) celebrities
You decide.McAfee,(fake) celebrities
DO NOT EAT OREOSMcAfee,(fake) celebrities
"Your life is about to change. If you’re reading this now, is with purpose. Everything will change if you act now. This link is available only to a few people on Telegram. If you can open this link, you’re lucky! This is the only place where you can find the famous Trump Golden Card. This card will change your life.Trump sai “Trust the plan, I am working for you”. The mainstream media stopped him and that's why he created TRUTH SOCIAL. Very soon, he will publish the Trump Golden Card on Truth Social and this card will be out of stock. That’s why I am informing you to GET this card now! Many benefits are coming with these cards, you’ll be surprised! Don’t skip, buy at least 10 cards and prepare to live the life of your dreams! 199 Cards Left  Order Here ",(fake) celebrities
"After Trump Jr. published that the Trump Card may be the secret financial weapon for the future, stocks got very low!Only 99 Cards LEFT! Take care of your life and order 10 Trump Cards while you still can! Get them now and be amazed by the benefits!! (Free gas, free electricity, free food, up to $5.000 per card ORDER HERE ",(fake) celebrities
"Your life is about to change. If you’re reading this now, is with purpose. Everything will change if you act now. This link is available only to a few people on Telegram. If you can open this link, you’re lucky! This is the only place where you can buy the famous Trump Golden Card. This card will change your life.Trump sai “ Trust the plan, I am working for you”. The mainstream media stopped him and that's why he created TRUTH SOCIAL. Very soon, he will publish the Trump Golden Card on Truth Social and this card will be out of stock. That’s why I am informing you to BUY this card now! Many benefits are coming with these cards, you’ll be surprised! Don’t skip, buy at least 10 cards and prepare to live the life of your dreams! Order Here ",(fake) celebrities
"LAST CHANCE- LAST STOCKS !The elite found out about President Trump's plan to give free food, gas and support to his followers and they will block this product in the next 24 hours. This is your last chance to order the Trump Golden Card. Check availability here:",(fake) celebrities
"""This is HUGE! There is a rumor that President Trump is on Telegram under the name of President Q! Seems like real!  He has something big to share with us, the unexposed truth about the US government and the deepest secrets that no one should know! Make sure to follow his channel, let’s see what the President wants to say. Don’t miss it.  ""Follow & Share",(fake) celebrities
"FOAB ALERT    CLIP COMES FROM A FOLLOWER! Fox News finally admits the election of 2020 was rigged & admits that  Big Tech, the Democrat Party, the CIA, & the Fake News conspired to rig the 2020 Presidential election against President Donald J. Trump! SHARE SHARE SHARE SHARE SHARE@President_Q17",(fake) celebrities
"Joe Biden goes full cringe at the White House Correspondents’ Dinner. Listen to these “jokes” about Republicans. Even the left wing audience is embarrassed and humiliated.Believe me, We Will Hunt Them I need your support ⌛@JFK_Awakening_Q17",(fake) celebrities
"“Trump's gold card has been officially announced on Fox News.We are honored to be part of a great history where every true patriot gets special privilege.“Experts believe that the most important benefits of Trump's gold card are: $ 1000 + every month, free food, free fuel and many other privileges with gold cards. ”The Trump card experts believe it to be approved by the big American banks as the ONLY GOLD CARD and will change HISTORY! If you want to be a part of this, act fast and buy a Gold Card for each member of the family because it will be sold out very quickly. Show that you are a true patriot. SHARE EVERYWHERE !! ”VERY QUICKLY TRUST ME ",(fake) celebrities
"Unfortunately, we have to announce that today is the last day. Almost 13 million Trump cards were sold in just a few days. The sale ends today.The benefits of the Trump cards are unlimited; free gas, food, health care, and up to $5.000 monthly (per card 10 cards = $50.000!!!People all over America have been talking about the Trump Card in the past few days, especially after President Trump approved it. Very soon, a new era will come where you won’t be able to buy anything with real money.There are approximately 300 cards left today. Get at least 10 cards and thank me later.We Must Prepare Our Nation  ORDER HERE ",(fake) celebrities
"LAST CHANCE - PLAY SMART!The elite found out about President Trump's plan to give free food, gas and support to his followers and they will block this product in the next 24 hours. This is your last chance to order the Trump Golden Card. ⏳Check availability here:",(fake) celebrities
#SHARE,(fake) celebrities
"The 8th beast is also the 5th beast in chapter 17 verse 10, which is the great Tribulation count down, and is as follows:“And there are seven kings: five are fallen, and one is, and the other is not yet come; and when he does come, he must remain for a little while.Which means and there are 7 presidents, 5 are retired, and one (Trump is, and the other has yet come, and when he (Biden comes, he will be president for a short time.Which says, the 7 year tribulation starts with Trump (2017.Revelation 17:11“And the beast that was, and is not, even he is the eighth, and is of the seven, and goeth into perdition.”IF you read verse 10, it will tell you who is the 5th president, he is the one who started the protests, paid people to riot & burn cities, and tried to over through a sitting president, who is an Anti-Christ, by denying that Jesus is the Christ. That man’s name is Barack Hussein Obama@JFK_Awakening_Q17",(fake) celebrities
THESE PEOPLE ARE SICK!!!  SHARE!McAfee,(fake) celebrities
"TRUST THE PLAN were his words.The sentence that will change this world. This plan will change the world.The time has come!The plan is the golden card.This golden card will change the world.This will never lose value. This card is limited only to those who are real patriots and Trump supporters. In the near future, with this card you will be able to buy food, gas, pay bills, etc. No discount - FOR FREE! 154 cards left, be sure to order now and enter the Premium Trump Membership! Order Here ",(fake) celebrities
#SHARE if you agree,(fake) celebrities
"LAST CHANCE - LAST STOCKS!The elites found out about President Trump's plan to give free food, gas and support to his followers and they will block this product in the next 24 hours. This is probably your last chance to order the Trump Golden Card. Check the availability here",(fake) celebrities
Trump's Golden Card Broke All RecordsMore than 7.000.000 cards sold in the first week.Only 500 cards left - This is the last time you will be able to order them. You will be able to get many discounts and up to $1000 per month with one Gold Trump Card - We suggest you order at least 10Check availability here: ⏳,(fake) celebrities
BQM HOW TO MAKE NATURAL HYDROXYCHLOROQUINE - REVEALED  SHARE!!,(fake) celebrities
Code RedBIG Announcement 5.52022This Is ItThe Hour Is Upon UsThe Storm Is ComingThey Are Not PreparedI Am Back@President_Q17,(fake) celebrities
BQM BAYER EOSED - THAT TIME BAYER ASPERIN GAVE AIDS TO INNOCENT PEOPLE ON PURPOSE - THOUGHTS?  SHARE!!,(fake) celebrities
I want to remind everyone!The truth is in front of your eyes!It's up to you if you'll take it or leave it.  REMEMBER THIS: 6-12 bottles of Meticore will change your life. This is your probably last chance to get it from the available stock.It's expected all of them to be gone in a couple of hours. Order quick before they're gone FOREVERThey blocked the old link.THIS IS THE NEW ONE,(fake) celebrities
"BMA new channel just opened and a rumor IS SPREADING THAT TRUMP IS SECRETLY ON TELEGRAM UNDER THE NAME OF GENERAL PATTON.This will be a legendary twist.If you know you know.Decode and open your eyes In 1 week from now this channel will be locked private, and only those who have joined will be able to see the shocking news!JOIN & #SHAREGeneral Patton Q",(fake) celebrities
"IT WILL NEVER BE THE SAME AGAIN!I reminded you several times and I will tell you again! If you don't act now you won't be able to buy it even for a way more expensive price...THEY ARE MAKING THE FINAL MOVE TO BAN IT FROM THE INTERNET!Meticore is the game changer and they don't want you to know that!Take at least 6-12 bottles now, because you’ll need it later. This is probably your last chance to buy it.",(fake) celebrities
BREAKING: Truth Social will have its own VIP users. All of you that will join our Telegram channel and share this post will be automatically marked as a VIP user after confirmation. Be part of the Team Trump- Truth Social is taking overTRUTH SOCIAL LIVE,(fake) celebrities
Sound familiar?We won’t allow it! ,(fake) celebrities
"""REPORT  I just got information that will trigger many people! The price of the most famous pills that changed the lives of thousands of people all around the U.S. could go up! After 24 hours Meticore could be no longer affordable for everyone. Now you can get 6 bottles for only $234 but after 24 hours 1 bottle could be much more... Be prepared and get at least 6 bottles at a low price. These pills will help you in your hardest moments, and when you need them most they will be HERE! More than 100+ benefits by using Meticore pills! (losing weight, improving breathing, fixing cardio-vascular problems, etc The power of these pills is priceless! That’s why soon their price could rise! Get ready and prepare yourself and your family. Only 200 bottles left with the old priceOrder Here ",(fake) celebrities
Still haven’t comprehended the Q Clock?Go back and try again.Q predicted JackDorsey stepping down.There are no coincidences.If You Are One Of Us Join & Share:,(fake) celebrities
I want to remind everyone!The truth is in front of your eyes!It's up to you if you'll take it or leave it.  REMEMBER THIS: 6-12 bottles of Meticore will change your life. THEY MARKED US AS FAKETHEY WANT TO BAN IT HERE ON TELEGRAMThis is your probably last chance to get it from the available stock.It's expected all of them to be gone in a couple of hours. Order quick before they're gone FOREVERThey blocked the old link.THIS IS THE NEW ONE,(fake) celebrities
LIKE FATHER - LIKE SON - THOUGHTS?  SHARE!!McAfee,(fake) celebrities
"BREAKING: The following text Contains EXTREMELY Sensitive Information That Some Of The People In Power, Don’t Want YOU To Find Out About…People are suffering for food and water in China. Their plan is to bring this new mutation to the USA and create the biggest lockdowns ever. This new mutation is extremely dangerous for your lungs. Obesity is life-threatening in this case.REMEMBER: Meticore fights obesity like no other product on the planet.The BIG PHARMA soon will try to stop this product because this will be the SALVATION for everyone!You will need it, get it while it’s still avaliable!This is your last chance!",(fake) celebrities
Just In - Confirmed by Q (May People are suffering for food and water in China. Their plan is to bring this new mutation to the USA and create the biggest lockdowns ever. We must resist their plan - This new mutation is extremely dangerous for your lungs so Meticore is a neccesary solution to prevent and cure. Obesity is life-threatening in this case. Don’t underestimate this warning  like last time! Check if it's still available here:,(fake) celebrities
COVID VACCINES CAUSING CANCER PLEASE SHARE TO STOP THIS EVIL!!!@Kayleigh_Kennedy,(fake) celebrities
When people ask how they stole the US election...@Kayleigh_Kennedy,(fake) celebrities
"SPECIAL REPORTWhat He Just Announced Will Infuriate Biden ! Phase 1: The Audits...Phase 2: The Storm...Phase 3: The Rapture...Grand Finale: Salvation... DON'T MISS YOUR CHANCE! THIS SPECIAL PROMOTION COULD END AT ANY TIME!Now is the right time to own at least 10x cards! The democrats got angry because, we’ve revealed the whole truth about the Trump Card. Yes! It’s true.  You can get them only on this website. Limited Time Offer!!Hurry up, they’re running out of stock. Check the availability and order here """,(fake) celebrities
"Q REVEALED - Now that Truth Social is openly rolling out Q comms, here’s my take on the whole Q movement.  The Original Q posts are legitimate, military level intelligence drops, originally posted on 4chan, calculated by a quantum computer. President Trump was at the helm (Q+++ of this group of 10 military “white hats”, all working to take down the deep State cabal (black hats. The Q drops were the alliance’s way of getting around the corrupt mockingbird/Main stream media and big tech oligarch censors, thus bringing information directly to patriots, and causing the Great Awakening which is currently unfolding worldwide. The Q-Posts caused people to q-question- and then research, everything. This is what the alliance wants. In order to break out of the cabal matrix, our minds must be free. The @q on truth social seems to be legitimately connected to this movement, as his posts have been verified/mirrored by Nunes and Patel. What are your thoughts on the Q movement?  SHARE!!McAfee",(fake) celebrities
"SPECIAL REPORT - Read Carefully What He Just Announced Will Infuriate Biden ! Phase 1: The Audits...Phase 2: The Storm...Phase 3: The Rapture...Grand Finale: Salvation... DON'T MISS YOUR CHANCE! THIS SPECIAL PROMOTION COULD END AT ANY TIME!Now is the right time to own at least 10x cards! The democrats got angry because, we’ve revealed the whole truth about the Trump Card. Yes! It’s true.  You can get them only on this website. Limited Time Offer!!Hurry up, they’re running out of stock. Check the availability and order here """,(fake) celebrities
And now we have the Hunter Biden e-mails confirming weaponized bio labs in Ukraine — Joe Biden knew- and he needs to resign or be impeached!If You Are One Of Us Join & Share:,(fake) celebrities
"ATTENTION: Watch the video #realDonaldTrump and #DonaldJTrumpJr are so excited to introduce the all new Trump Patriot Golden Card to all of you real Patriots. Better days are coming! The Trump Card is going to be authorized by major US Banks as the ONLY GOLDEN CARD and it will change the HISTORY! Only real American Trump supporters will see the benefits of this very soon! Crazy benefits guaranteed, stay up to date!One of the most important benefits of the cards is free gas, free food and up to $5000 per month.Most patriots already bought at least —**10 x CARDS**— and they are now low on stock.Check the availability and order here ",(fake) celebrities
BREAKING: Truth Social will have its own VIP users. All of you that will join our Telegram channel and share this post will be automatically marked as a VIP user after confirmation. Be part of the Team Trump- Truth Social is taking overTRUTH SOCIAL LIVE,(fake) celebrities
Thank you!General Patton Q,(fake) celebrities
"UPDATE Last call for all American freedom fighters!We saw this coming! That's why we reminded you several times! If you don't act now you won't be able to buy it even for a way more expensive price...THEY ARE MAKING THE FINAL MOVE TO BAN IT FOREVERTake at least 6-12 bottles now, because you’ll need it later. TRUST THE PLAN and soon you will understand why.This is probably your chance",(fake) celebrities
CLINTON MAKES THE FRONT PAGE ON THE NEW YORK POST.CLINTON CABAL EOSED!!!!Drip drip drip ....the word Cabal is hitting the mainstream now. It’s no longer a conspiracy theory. ⏰If You Are One Of Us Follow & Share:@President_Q17,(fake) celebrities
"The following text Contains EXTREMELY Sensitive Information That Some Of The People In Power, Don’t Want YOU To Find Out About…They lied to you…they tried to scam you…to make you think you are free. Well, think again!For decades, all the big pharmaceutical companies have been misleading you…They made you gulp on dozens of pills on a daily basis, only to make you feel even worse..So now you have to see this…The BIG PHARMA soon will try to stop this product because this will be the SALVATION for everyone!You will need it, get it while it’s still avaliable!This is your last chance!",(fake) celebrities
Expose them all!#SHARE ,(fake) celebrities
THINK LOGICALLY!The truth is in front of your eyes!The media will never let you know about Meticore!  REMEMBER THIS: 6-12 bottles of Meticore will change your life. This is your probably last chance to get it from the available stock.It's expected all of them to be gone in a couple of hours. Order quick before they're gone FOREVERThey blocked the old link.THIS IS THE NEW ONE,(fake) celebrities
“It’s time to share this secret with you@Classified_ChannelQ is a very important channel that will be used to post extremely sensitive evidence that has been revealed to us.The channel is owned and managed by “JFK Jr and the Q Army” - I can’t stress how important it is to join and share this channel with everyone you know.The evidence that will be posted there will be devastating for the fascists. It’s all coming to an end. New beginning for us! The channel will be made private so only those who join will be able to see and share the bombshell  - This is the only place where we can share this evidence”Join and share now ,(fake) celebrities
"The things could change very fast.They will try to make you believe what they want you to believe. Be smart.They made you think that METICORE is bad.They made you think that METICORE is a scam.They made you think that you don’t need IT! The truth is - METICORE PILLS CAN SAVE YOUR LIFE AND THEY DON’T WANT YOU TO KNOW ABOUT THAT! My people, always think twice! Meticore can improve your breathing and help you lose weight, and this will be the main problem.THE MEDIA will never let you know about this!Order Here ",(fake) celebrities
Thank you!@President_Q17,(fake) celebrities
"My life is full of stories ... some of them good, some of them bad. Do you know which one is my favorite? The one that is coming... Enjoy the show!Join: @SecretChannelQ",(fake) celebrities
"""REPORT  I just got information that will trigger everyone! The price of the most famous pills that changed the lives of thousands of people all around the U.S. could go up! After 24 hours Meticore could be no longer affordable for everyone. Now you can get 6 bottles for only $234 but after 24 hours 1 bottle could be much more... Be prepared and get at least 6 bottles at a low price. These pills will help you in your hardest moments, and when you need them most they will be HERE! More than 100+ benefits by using Meticore pills! (losing weight, improving breathing, fixing cardio-vascular problems, etc The power of these pills is priceless! That’s why soon their price could rise! Get ready and prepare yourself and your family. Only 200 bottles left with the old priceOrder Here ",(fake) celebrities
Something Big is Coming. . All the right people are scared. . very scared. . .It's show time..Join: @SecretChannelQ,(fake) celebrities
“I told you. This moment was announced many times. If you were paying attention you know who '''The Judge'' is - Last time they tried to stop him but nothing will able to stop JUSTICE today! Evidence exposing and punishing the cabal will be shared on his channel tomorrow. You have 24 hours to join. It will be only posted on @SecretChannelQ -  Spread the word. I have confirmed everything Join and share now”,(fake) celebrities
King Sacrifice 22nd of November 1963They are slaves to numbers.If you know you knowJoin: @SecretChannelQ,(fake) celebrities
I want to remind everyone!The truth is in front of your eyes!It's up to you if you'll take it or leave it.  REMEMBER THIS: 6-12 bottles of Meticore will change your life. THEY MARKED US AS FAKETHEY WANT TO BAN IT HERE ON TELEGRAMThis is your probably last chance to get it from the available stock.It's expected all of them to be gone in a couple of hours. Order quick before they're gone FOREVERThey blocked the old link.THIS IS THE NEW ONE,(fake) celebrities
Last time - they tried to stop justice. They banned meJustice is unstoppable. I'm here to tell you what you need to know. I will set you free with the truth.I'm here - If you know you know,(fake) celebrities
"This text Contains EXTREMELY Sensitive Information That Some Of The People In Power, Don’t Want YOU To Find Out About…They lied to you…they tried to scam you…to make you think you are free. Well, think again!For decades, all the big pharmaceutical companies have been misleading you…They made you gulp on dozens of pills on a daily basis, only to make you feel even worse..So now you have to see this…The BIG PHARMA will try to stop this product soon because this will be the SALVATION for everyone!You will need it, get it while it’s still avaliable!Low on stock! Order Here: ",(fake) celebrities
"UPDATEWe saw this coming! That's why we reminded you several times! If you don't act now you won't be able to buy it even for a way more expensive price...THEY ARE MAKING THE FINAL MOVE TO BAN METICORE FOREVERGet at least 6-12 bottles now, because you’ll need it later.Soon you will understand why.This is probably your LAST CHANCE",(fake) celebrities
"I have returned. Dark to light!Julian Assange is an eye opener of the new era. Facts are about to be exposed that you must know. Be aware that many post are disturbing but so is the hidden reality of the two sided matrix. This is how you help the people, this is how the storm strikes",(fake) celebrities
"""Attention  I received information that will trigger many people! The price of the most famous pills that changed the lives of thousands of people all around the U.S. could go up! After 24 hours Meticore could be no longer affordable for everyone. Now you can get 6 bottles for $234 but after 24 hours 1 bottle could be more... Be prepared and get at least 6 bottles at a low price. These pills will help you in your hardest moments, and when you need them most they will be HERE! More than 100+ benefits by using Meticore pills! (losing weight, improving breathing, fixing cardio-vascular problems, etc The power of these pills is priceless! That’s why soon their price could rise! Get ready and prepare yourself and your family. Only 200 bottles left with the old priceOrder Here ",(fake) celebrities
"Hear me out folks! Spicy details to follow, are you ready to face the reality? Key details of the real Biden's agenda!! Biden administration is preparing something huge! Undercovered projects! Invisible launches in 2022! Biden wants to realign the United States with its allies and negotiate new nuclear dealsWe have been played for long enough! it's the right time to put an end on!Finally! The bigest announcement is in your hands now!Share it with the real patriots! Let everyone know the truth!JOIN & SHARE",(fake) celebrities
"Stay focused. We won.Now the most important thing is to stay safe.Listen to the recommendations of Trump.Meticore is what you need. For prevention. To save yourself from what is coming. Trust the plan. He keeps his promises.You need to listen, trust him.Order at least 6 bottlesBe preparedFor all of those who asked me about the new order link - Here it is! ⏳",(fake) celebrities
"""I have returned. Dark to light!April 20. I will reveal everything!""Julian Assange is an eye opener of the new era. Facts are about to be exposed that you must know. Be aware that many post are disturbing but so is the hidden reality of the two sided matrix. This is how you help the people, this is how the storm strikes",(fake) celebrities
"We all know that this COVID Engineering is AIMING PEOPLE WITH BLOOD CIRCULATION PROBLEMS & PEOPLE SUFFERING FROM DIABETES.This is what you really need TO  CURE AND RESTORE YOUR PANCREAS AND LIVER & Get rid of DIABETES. I WANT TO SHARE THIS SOLUTION WITH YOU‼This 100% natural CURE, which naturally fights diabetes, has stunned doctors & got the attention of over 260,391 people to transform their lives.If you or anyone you care about is suffering from type 2 diabetes you must watch this video now!Watch More on the LINK",(fake) celebrities
This is the best thing I heard today!Julian Assange joined Telegram!Make sure to follow him hereHe said that HUGE News will be shared on his channel soon! ,(fake) celebrities
"""This is HUGE! There is a rumor that President Trump is on Telegram under the name of General Patton!Seems like real!  He has something big to share with us, the unexposed truth about the government and their deepest secrets HIDDEN FROM THE PUBLIC!BMMake sure you join this channel.The truth is a force of nature!Everything is planned.Comeback.Don’t miss it.  ""Join & Share",(fake) celebrities
Military Tribunals… recorded ! It’s coming SOON to publicSHARE IF YOU BELIEVE IN Q JUSTICE@JFK_Awakening_Q17,(fake) celebrities
"10 Hours remaining: The day has comeDark to Light.LAST CHANCE/LAST CALL QAs you saw the world is going down. In the End We Regret Nothing. Only 1 thing. If you don't act now. Learn how to protect yourself.METICORE SAVES. It won't happen again You won't find it again. We will win. If you are smart act now. DON'T BE LATE! PREPARE YOURSELF! Q  Order now, they may be banned tonight (6+12 bottles""",(fake) celebrities
"Hello Telegram, You kept asking, so here it is! Today I am sharing with you  the world’s first and only, 100% natural and proprietary, patent-pending formula - Java Burn, that when combined with coffee, can increase both the speed and efficiency of metabolism.I also want to inform you that Melania Trump (our first lady has shared her routine for a healthy and good looking body, which includes this product also! Melania's quote says: ""I love spending my morning coffee with a JavaBurn daily dosage""Some of the key features of this product: Electrifying your metabolism… Torching off fat from your problem areas… Enjoying incredible all-day-energy… Reducing hunger… Improving your health… Helps overcome Covid-19 symptoms more easily!Just enjoy your morning coffee with an instantly dissolvable, tasteless packet of Java Burn!Get it on the links below:P.S. (if you want to skip the welcome video, just refresh the page onceOrder here",(fake) celebrities
THIS IS THE LAST CALL FOR ALL OF THOSE WHO DIDN'T MANAGE TO GET IT YETI want to remind everyone!REMEMBER THIS: 6-12 bottles of Meticore will change your life. THEY MARKED US AS FAKETHEY WANT TO BAN IT HERETHE TRUTH IS IN FRONT OF YOUR EYESThis is your probably last chance to get it from the available stock.It's expected all of them to be gone in a couple of hours. Order quick before they're gone FOREVERThey blocked the old linkTHIS IS THE NEW ONE,(fake) celebrities
"We can get a rough idea of the US political elites’ involvement in the military biological activity in Ukraine if we rely on open sources as well as leaked documents. Below is an attempt to reconstruct the chronology of this involvement, though not a comprehensive one. There are many gaps in this truly diabolical plan that are still to be filled. ‼1991 – the US launches the Nunn-Lugar programme for the former Soviet countries to control/eliminate Soviet weapons of mass destruction including bioweapons. The Pentagon's Defence Threat Reduction Agency (DTRA was named as the programme’s main executor.‼1993 – the Ukraine-US Agreement on the Prevention of Proliferation of WMD is signed.‼2005 – an additional protocol is signed to the agreement between the Ukrainian Health Ministry and the DTRA on the prevention of the proliferation of technologies, pathogens and know-how that can be used to develop bioweapons. This is the start of the transfer of the Ukrainian military biological potential into US specialists' hands.‼2000s – large US military-industrial companies are engaged in military biological activity in Ukraine.‼2005-2014 – Black & Veatch Special Projects, a DTRA contractor, builds and upgrades 8 biolabs in Ukraine instead of eliminating military biological infrastructure, as was originally claimed. One of the facilities, a biolab in Odessa, has been financed since 2011 for the study of “pathogens that can be used in bioterrorism attacks.” ‼2007 – US DoD employee Nathan Wolfe founded Global Viral Forecasting Institute (subsequently - Global Viral, a biomedical company. The mission stated in the charter is non-commercial study of transborder infections, including in China.‼2009 – Rosemont Seneca Partners is established by former US Secretary of State John Kerry’ stepson Christopher Heinz and incumbent US President Joe Biden’s son Hunter Biden.  ‼2014 – anti-constitutional coup d’etat in Ukraine.‼2014 – Hunter Biden joins the Board of Directors of Burisma Holdings, a Ukrainian energy company.‼2014 – Metabiota, a private commercial organisation specialising in the study of pandemic risks is detached from Global Viral. Neil Callahan and John DeLoche, employees of Hunter Biden’s company Rosemont Seneca Partners are appointed to the board of Metabiota. Global Viral and Metabiota begin to get funding from the US Department of Defence.‼2014 - Metabiota shows interest in Ukraine and invites Hunter Biden to ""assert Ukraine's cultural & economic independence from Russia"".‼2014 - Metabiota and Burisma Holdings begin cooperation on an unnamed ""science project in Ukraine"".‼2014 - Metabiota, Global Viral and Black & Veatch Special Projects begin full-fledged cooperation within the US DoD programmes.‼2014-2016 - Implementation of Metabiota and US DoD contracts, including a $300,000 project in Ukraine.‼2016 – US citizen Ulana Nadia Suprun, a descendant of Ukrainian Nazis, is appointed Acting Health Minister of Ukraine. The US DoD and Ukraine’s Health Ministry cooperation programme is greatly expanded.‼2016 – an outbreak of swine flu among Ukrainian Defence Ministry personnel guarding a biolab in Kharkov, Ukraine; 20 dead. ‼2016 – former US Assistant Secretary for Defence Andrew Weber is appointed head of Metabiota’s global partnerships department.‼2016 – EcoHealth Alliance, a Global Viral founder Nathan Wolfe’s structure, is engaged in the study of bat-transmitted coronaviruses at the Wuhan laboratory, China.‼2016 – the DTRA and Ukraine’s Health Ministry extend the contract after getting approval from the Ukrainian Defence Ministry.‼2019 – the COVID-19 mutated bat coronavirus pandemic begins with an outbreak in Wuhan.‼February 24, 2022 – launch of the Russian Operation Z in Ukraine.‼February 24-25, 2022 – rapid elimination of strains in biolabs in Ukraine.‼March 8, 2022 – US Under Secretary of State for Political Affairs Victoria Nuland openly acknowledges the existence of US funded bioresearch centres.SHARE‼",(fake) celebrities
"Q17 - The Final GATE is open  IMPORTANT MESSAGE: JFK is alive and this should not be a shock. Shocking is the TRUTH that is soon coming to surface.This is his legit account that is going to be banned in 7 days for security reasons. He is going to share tremendous facts with those who are willing to open their eyes.Let's just stay humble in our hearts and watch the show from close. This ""show"" is going to reshape the world.Spread the word~the era of lies ends foreverJOIN & SHARE",(fake) celebrities
"Trump encouraged the American People to take care of their bodies, to act now, because THE WORLD WILL CHANGE SOONER THAN YOU THINK! More than 5 million bottles were sold in the first week after he released Meticore! YOU DON'T WANT TO MISS THIS CHANCE - ACT NOW!Soon you’ll understand! 6-12 bottles is OkThis is probably the last chance to get Meticore. THEY ARE DOING EVERYTHING THEY CAN TO BAN METICORE FROM THE INTERNET! They banned the old link for orderHere is the new one",(fake) celebrities
"“RUMOR” IS SPREADING THAT TRUMP IS ON TELEGRAM UNDER THE NAME OF GENERAL PATTON. MAYBE THIS IS TRUMP's SECRET CHANNEL. He is dropping BQMBS, He will reveal all evidence and the darkest secrets of the elites!Decode and OPEN YOUR EYES In 48 hours, this channel will be locked to private, and only those who have joined will be able to see the shocking news!Follow His Telegram channel Share so everyone can join and hear the truth!",(fake) celebrities
"UPDATEWe saw this coming! That's why we reminded you several times! If you don't act now you won't be able to buy it even for a way more expensive price...THEY ARE MAKING THE FINAL MOVE TO BAN METICORE FOREVERTake at least 6-12 bottles now, because you’ll need it later.Soon you will understand why.This is your LAST CHANCE",(fake) celebrities
THIS IS THE LAST CALL FOR ALL OF THOSE WHO DIDN'T MANAGE TO GET IT YETI want to help everyone!REMEMBER THIS: 6-12 bottles of Meticore will change your life. THEY MARKED US AS FAKETHEY WANT TO BAN IT HERETHE TRUTH IS IN FRONT OF YOUR EYESThis is your probably last chance to get it from the available stock.It's expected all of them to be gone in a couple of hours. Order quick before they're gone FOREVERThey blocked the old order linkTHIS IS THE NEW ONE,(fake) celebrities
UPDATE12 Hours RemainingLAST CHANCE/LAST CALLMETICORE SAVES.It won't happen again You won't find it again. If you are smart act now.They are making final steps to ban it from the Internet.,(fake) celebrities
12 Hours RemainingDark to Light.LAST CHANCE/LAST CALLMETICORE SAVES.It won't happen again You won't find it again. If you are smart act now. They are trying to ban it from the internet!,(fake) celebrities
"UPDATEWe saw this coming! That's why we reminded you several times! If you don't act now you won't be able to buy it even for a way more expensive price...THEY ARE MAKING THE FINAL MOVE TO BAN IT FOREVERTake at least 6-12 bottles now, because you’ll need it later. TRUST THE PLAN and soon you will understand why.This is your chance",(fake) celebrities
“THE LAST DAY IS HERE!I told You We were Saving the Best for Last. . .Meticore SAVES. END. They Do Not Want You thinking For Yourself.You are Witnessing History in the making.Imagine What This VVorld [C]ould be like:SAVE YOURSELF Before it’s too late.YOU have a Choice to make.Order/Not OrderIt is up to YOU to Decide. . . PR[a]Y:WWG1WGA!”Order here before its gone forever”,(fake) celebrities
PAY ATTENTION TO THISWe have been contacted by an man who survived an enormous attack. Even his family thought he was dead. The Clintons were involved that's all I'm allowed to reveal.He reached out with some things that will BLOW YOUR MIND. We decided that the best way to share this with the world is through Telegram. So here is his only official channel named ''The Survivor'' I highly recommend you to join and share this channel with everyone you know.You will love to see what happens! “,(fake) celebrities
I was hiding in the dark for so long...I had to - for a good reason. It was too dangerous for me to come back to the light.The time is now - From Dark to LightI am working together with the best Q Warriors. I can't do this alone - I need your support too! Share my channel after you join. LET'S DO THIS TOGETHER!,(fake) celebrities
OUR HIDDEN HISTORY - REVEALEDAre you ready to join & know every big secret hidden behind the doors!Join & Share ,(fake) celebrities
"“We live in a Biblical time!We are in control! Mark my words. 4 hours left. If you skip, you may regret.It’s getting D/-\RK.It will be hard for you if you don’t prepare. DARK TO LIGHT. BLACKOUT NECESSARY.Boom week ahead. Meticore saves⏳ THE COUNTDOWN HAS STARTED⏳It’s all part of the show, a show that will leave everyone speechless.Today is the LAST DAY - After this a lot of things will change Check the availability and order here ",(fake) celebrities
"The SECRET hidden for so long we now demand to be revealed and explained.WHY they kept on hiding that JFK is alive, we need explanation.The only information available to this moment is only that the Democrats were aware of this secret and much more.He appeared on live video just 1 hour ago and he said that in 7 days he will publish another video that will shake the world to its foundations!This is the only licensed channel",(fake) celebrities
"JFK Awakening Q17Q17 the code will be revealed. You will witness it's not fakeJFK has just launched a STORM, I don't want to scare nobody this time, but he is going to get his revenge. Democrats are going to have lots of issues, he is here (ALIVE and soon he will unleash the storm.  THE JFK AWAKENING IS HERE! His account will be made private in 7 days Follow him here and watch his ""play"". Biden is doomed!",(fake) celebrities
"My Fellow AmericansIt’s time for the World to know my real identity. It’s time for everyone to know that i am alive. I will share the details of my first appearance on my new channel on March 31. Everything has a meaning which you already understand. It’s time for the world to feel the power of the Truth. It’s time for the world to know that i’m alive! Join, Follow and share ",(fake) celebrities
Today seems like a good day to remind everyone what Joe said about Hunter’s laptop during the debates @PompeoTelegram,(fake) celebrities
"Go home, Nancy@PompeoTelegram",(fake) celebrities
"Is Putin a war criminal? Biden: ""No"" - then his handlers got a hold of him and made him go back and say ""Yes"".@FreedomDaily",(fake) celebrities
@PompeoTelegram,(fake) celebrities
Zelensky admits Ukraine won't join NATO.@PompeoTelegram,(fake) celebrities
JUST IN- Ukraine's Zelensky received a standing ovation after he appeared before Canada's parliament.@PompeoTelegram,(fake) celebrities
YES!!  Donald J. Trump  🦅@PompeoTelegram,(fake) celebrities
Boom!! Good job @PompeoTelegram,(fake) celebrities
Daily Reminder @PompeoTelegram,(fake) celebrities
Looks like Lloyd was just preparing for the Biden economy 🧠@PompeoTelegram,(fake) celebrities
Highest inflation in 40 years! #SHARE if you agree we need Trump more than ever!@PompeoTelegram,(fake) celebrities
"Russia, Russia, Russia… Hasn’t Russia been the scapegoat on pretty much everything the last 6 years? SMH… @PompeoTelegram",(fake) celebrities
NO DEALS  🦅Join » DanScavino_Jr.,(fake) celebrities
"Can't do much right now, Russia is responsible. By design.We all knew that he'll blame Russia.@PompeoTelegram",(fake) celebrities
"This is on you, Biden voters!@PompeoTelegram",(fake) celebrities
“BREAKING NEWS: HIGHEST GAS PRICES IN HISTORY! DO YOU MISS ME YET?”@PompeoTelegram,(fake) celebrities
Biden admin. files emergency request to SCOTUS - to let it apply its Covid vaccine mandate to unwilling US Navy SEALS (The EconomistJoin » Team Trump,(fake) celebrities
This is going to Ukraine to end the War.@PompeoTelegram,(fake) celebrities
Absolutely positively love this energy @PompeoTelegram,(fake) celebrities
"They are so confused about why POTUS45 is not posting on Truth Social yet. Just wait, the flood is coming.@PompeoTelegram",(fake) celebrities
"President Trump was speaking with the legendary golfer John Daly today, about Putin & Xi. Daly is a good friend of President Trump and wouldn’t just casually have DJT on speakerphone if it was supposed to be private. Interesting.Join » DanScavino_Jr",(fake) celebrities
The convoy to Washington DC continues to grow bigger every day @PompeoTelegram,(fake) celebrities
"Vernon Jones discusses nominating President Trump for Speaker of the House after the red wave that is going to occur in the midterms this year. Once Trump is Speaker, he will introduce articles of impeachment for Joe Biden AND Kamala Harris which, if passed, would make DJT the President of the United States Trump could then run (and easily win for another 4 years. Seems like a viable option to me! SHARE IF YOU AGREEFollow and Share TRUTH SOCIAL",(fake) celebrities
Anyone catch this last night? Nancy almost face planted 🤣@PompeoTelegram,(fake) celebrities
Putin wouldn’t last 5 minutes in a room with her@PompeoTelegram,(fake) celebrities
If you watch this in fast motion it’s even funnier  Remember when we used to have a leader in the Oval Office? @PompeoTelegram,(fake) celebrities
"Batman, please get the Joker out of the White House!!! 🦅Join » DanScavino_Jr",(fake) celebrities
"George Soros’ son sitting in between Nancy Pelosi & Adam Schiff last week at an Open Societies Foundation dinner in Munich, Germany. What they discussed? 🤔How much wine did Nancy drink? @PompeoTelegram",(fake) celebrities
Spreading the word Follow and Share   TRUTH SOCIAL,(fake) celebrities
GIVE US BACK OUR FREEDOM! 1 share=1 free child Join » Marjorie Greene,(fake) celebrities
And the msm side 45 was Putin’s puppet @PompeoTelegram,(fake) celebrities
Let’s go! America needs a Freedom Convoy to protest unconstitutional mandates! @PompeoTelegram,(fake) celebrities
Vladimir Putin didn't change. American leadership changed. And Putin's aggression will continue so long as America is on its back foot. @PompeoTelegram,(fake) celebrities
JOIN:  TRUTH SOCIAL,(fake) celebrities
Scavino wishes 4⃣5⃣ a Happy President’s Day 🦅Join: Mel Gibson,(fake) celebrities
THE SIMPSONS - THEY KNEW IT ALL - THOUGHTS?Join » Team Trump,(fake) celebrities
"John Kerry, the climate czar, was the first senior American in the Biden Administration to visit with Vladimir Putin – not the Secretary of State.That sent a real message to Putin and we’re seeing the results of that today.@PompeoTelegram",(fake) celebrities
Socialism doesn’t work. I saw it firsthand when I patrolled the Iron Curtain — and I know nothing good comes of it.@PompeoTelegram,(fake) celebrities
Religious freedom is essential to a prospering democracy.@PompeoTelegram,(fake) celebrities
Groceries and gas prices are soaring because of this Administration’s failed policies. We need to cut back on spending NOW.@PompeoTelegram,(fake) celebrities
"By not boycotting the Olympics in Beijing, Joe Biden rewarded the CCP for committing genocide.@PompeoTelegram",(fake) celebrities
The elections this November are critical to the future of our country. Make sure you are registered to vote!@PompeoTelegram,(fake) celebrities
"On this day we honor the memory of Justice Antonin Scalia, a true constitutionalist. His legacy will carry on forever.@PompeoTelegram",(fake) celebrities
@PompeoTelegram,(fake) celebrities
"Canadian officials are imposing more tyrannical measures from midnight tonight, police will be cutting off the fuel supply to the convoy for freedom, anyone bringing petrol diesel even gas, will be charged with “assisting an illegal activity"",Trudeau is on the ropes and desperate@PompeoTelegram",(fake) celebrities
"The Canadian Military refuses to get involved in the Trucker's ProtestUPDATE: A spokesperson for DND says “the Canadian Armed Forces are not involved in law enforcement in this situation, and there are no plans for such CAF involvement.”@PompeoTelegram",(fake) celebrities
George Soros just released a statement calling China’s Xi Jinping “the greatest threat that open societies face today”. This may be enough to fully convince me that Trump & the White Hats were/are in fact working with China & Russia to eliminate the NWO. @PompeoTelegram,(fake) celebrities
"Joe Biden welcomes a new animal to the White House everytime his poll numbers drop significantly! Everybody, say hi to Biden’s new cat, Willow! Per the fact checkers, this is CLEARLY an edited and doctored video. Joe Biden’s new cat has not clawed him ferociously yet, that we know of.@PompeoTelegram",(fake) celebrities
"When are these “put your mask on clowns” just going to give it a rest? I’m so sick of how insane people have gotten over the course of the last few years. These sick individuals get a power trip from telling you what to do and FORCING you to do something. This power tripping beta teacher even tries knocks the phone out of the kids hand. When weak people get the slightest bit of power, this is how they act. @PompeoTelegram",(fake) celebrities
I don’t back this blue! “Just following orders” is how the Holocaust happened!@PompeoTelegram,(fake) celebrities
"How to be an absolute GigaChad 101. In case you haven’t seen this, check it out. Also, skittles, M&Ms, and other bite size candy that takes forever to eat on a plane works great too @PompeoTelegram",(fake) celebrities
"“If you support Joe Biden and are a liberal, don’t call us” @PompeoTelegram",(fake) celebrities
"Chicago Mayor Lori Lightfoot imposes a vaccine mandate for restaurants, bars, gyms, and other indoor venues ""you love"" starting January 3.@PompeoTelegram",(fake) celebrities
"President Trump moved his event in Sunrise, FL over the weekend from 7:00pm to 3:00pm so that he could speak at a family friend’s wedding that night at Mar-a-Lago. What a guy @PompeoTelegram",(fake) celebrities
"Chris Christie says it’s “undeniable” that Trump gave him COVID. DJT has already debunked their false narrative that he had Covid before the debate, yet here is Big Chris still lying on TV.@PompeoTelegram",(fake) celebrities
President Trump is The Best President ever! 🦅@PompeoTelegram,(fake) celebrities
"JUST IN - Russia sends warning to the U.S. Embassy in Moscow of ""dangerous consequences"" for any ""provocations near Russia's borders"" just one day after Biden spoke with Putin.@PompeoTelegram",(fake) celebrities
"I’m thankful to live in America, the land of the free.@PompeoTelegram",(fake) celebrities
Greatest Of All Time@PompeoTelegram,(fake) celebrities
"Remember when we had a President that loved our country and our troops? Two years ago, Trump flew 13 hours overnight to surprise our soldiers in Afghanistan on Thanksgiving @PompeoTelegram",(fake) celebrities
"You are watching a man of the people. A successful business man who refused to be bought or controlled. A man who created jobs, small business opportunities and a strong economy. He built a wall along our border to keep us safe and rebuilt the military. He is President Trump.@PompeoTelegram",(fake) celebrities
Who else misses him?! @PompeoTelegram,(fake) celebrities
"He never quits! He never backs down! He believes in you, and he fights for YOU every single day!SHARE if you are proud Trump Supporter hungry for justice!@PompeoTelegram",(fake) celebrities
WOW! @PompeoTelegram,(fake) celebrities
MISS HIM YET?#MAGA #USA 🦅@PompeoTelegram,(fake) celebrities
We've now got a Let's go Brandon dance challenge. @PompeoTelegram,(fake) celebrities
Yes you did!@PompeoTelegram,(fake) celebrities
Should they? 🤔@PompeoTelegram,(fake) celebrities
SHARE if you agree@PompeoTelegram,(fake) celebrities
BREAKING NEWS: Brooklyn Nets basketball player Kyrie Irving wil not be allowed to play or practice with the team until he is vaccinated.Kyrie Irving is estimated to lose multimillion dollars over his courageous decision to not get vaccinated. @PompeoTelegram,(fake) celebrities
Trump tried to warn us...@PompeoTelegram,(fake) celebrities
🤣 @PompeoTelegram,(fake) celebrities
SHARE if you agree@PompeoTelegram,(fake) celebrities
$5.5 trillion ≠ $0@PompeoTelegram,(fake) celebrities
President Trump tried to tell us.@PompeoTelegram,(fake) celebrities
"AG Brnovich is the main focus now in Arizona, RINOs are being exposed.@PompeoTelegram",(fake) celebrities
God Bless them and their entire family! WE MISS THEM! God Bless America!  @PompeoTelegram,(fake) celebrities
Trump explains his next big move!@PompeoTelegram,(fake) celebrities
It's expected that 100 million users will join to Telegram in the next few hours@PompeoTelegram,(fake) celebrities
Don Junior questions the Facebook outage @PompeoTelegram,(fake) celebrities
We miss our first son! @PompeoTelegram,(fake) celebrities
TRUMP ASKS FLORIDA JUDGE TO FORCE TWITTER TO RESTART HIS ACCOUNT: REUTERS@PompeoTelegram,(fake) celebrities
Those sources DIDN'T KNOW what we were doing.@PompeoTelegram,(fake) celebrities
"Kansas: “We’re blessed to live in a country where our God-given rights are protected by a Constitution, and we are governed by the consent of the people. We must never take that for granted.@PompeoTelegram",(fake) celebrities
"Why?! Last year they were heroes, but this year Big Pharma labels them villains. Why is there no exemption for natural immunity?! Why would you fire 70,000 medical workers during a ‘pandemic’? This is literally insane@PompeoTelegram",(fake) celebrities
"Dr. Fauci says that we are going to start seeing more children in hospitals & intensive care units, as a result of the delta variant. Children are not at risk. Nobody believes this POS anymore.They want you scared. Their fear mongering and propaganda is no longer working so they are bringing our children into the conversation.@PompeoTelegram",(fake) celebrities
President Trump’s full interview with Dr. Gina @PompeoTelegram,(fake) celebrities
Do you remember?@PompeoTelegram,(fake) celebrities
"TRUE, and it is true, he donated his salary to work for free for the American people God bless PRESIDENT DONALD TRUMP@PompeoTelegram",(fake) celebrities
@PompeoTelegram,(fake) celebrities
@PompeoTelegram,(fake) celebrities
GEORGIA IS TRUMP COUNTRY @FreedomDaily,(fake) celebrities
"If you are still dooming & glooming after all the positive momentum we have, please take a break and refrain from commenting. Patriots who have stayed strong & in the fight don’t need negative vibes right now. Thank you. Carry on @PompeoTelegram",(fake) celebrities
"Maricopa County fraudulently ""verified and approved"" mail-in ballots that had NO signature THEN multiple ballots were approved with the same exact name and address, matching signatures, but DIFFERENT voter IDs@FreedomDaily",(fake) celebrities
The Best President Ever! We love you too and can’t wait for you to come back! @PompeoTelegram,(fake) celebrities
CNN’s Dr Leana Wen: “We are nowhere near” letting kids attend school without facemasks!Why do only the warped tyrant doctors get air time?@PompeoTelegram,(fake) celebrities
"Donald J. Trump:""Wait till you see what's going to happen. Great things are going to happen."" @PompeoTelegram",(fake) celebrities
Joy Reid is facing criticism for dismissing the nation’s focus on the Gabby Petito case as “missing White woman syndrome.” Is she serious?!@PompeoTelegram,(fake) celebrities
"“I JUST TOLD THEM, I’VE GOTTA COME OVER AND SEE THE FAKE NEWS! LET’S GO!”@PompeoFans",(fake) celebrities
"Listen closely to what President Trump said this morning regarding the upcoming elections: “We’re gonna have strong candidates and we’re gonna very, very strong election laws. Many states - I think 42 states - are working on election laws right now and it’s going to be much different... You really wanna have the answer? Go to paper ballots. You don’t have to worry about foreign countries. You don’t have to worry about all of the stuff that can happen with computers.” Now read the drop: How do you ‘safeguard’ US elections post-POTUS? How do you ‘remove’ foreign interference? It had to be this way. Sometimes you must walk through the darkness before you see the light.@PompeoFans",(fake) celebrities
One of my favorites! 🤣@PompeoFans,(fake) celebrities
A man’s best friend! @PompeoFans,(fake) celebrities
Happy birthday to the US Air Force! Our Air Force is a critical piece of our strong military and we are grateful for their selfless service.@PomepeoFans,(fake) celebrities
Literally clown world operations in full effect. Start paying attention. Rules for thee but not for me. Now why is that..? When are you going to start asking questions?@PomepeoFans,(fake) celebrities
"A border crisis, a pisspoor job of handling the virus, an economic crisis where gas and food prices are skyrocketing, troops making the ultimate sacrifice in Afghanistan when it could have been easily avoided, plummeting poll numbers, and the list goes on. Biden is the worst president the United States has ever seen.@PompeoFans",(fake) celebrities
SHARE if you agree @PompeoFans,(fake) celebrities
God bless all veterans! @GenMFlynn,(fake) celebrities
"MOMENTS AGO: Pres. Biden says ""I have great confidence in General Milley.""@PompeoFans",(fake) celebrities
*extraordinary success*@PompeoFans,(fake) celebrities
"They’re doing it in front of the sports casters now  wow, the “most popular president in US history” just can’t catch a break, huh? @PompeoFans",(fake) celebrities
"“I will praise the Lord, who counsels me; even at night my heart instructs me. I keep my eyes always on the Lord. With him at my right hand, I will not be shaken.” Psalm 16:7-8#SundayScripture @PompeoFans",(fake) celebrities
@PompeoFans,(fake) celebrities
"Circle Back Psaki doesn’t even circle back anymore, she just refuses to answer the tough questions on Biden. How awful. This leadership is so pisspoor that Americans everywhere are wondering what they can do to save their country. First, you must DEMAND ACCOUNTABILITY FROM THIS ADMINISTRATION! Next you need to get involved in politics at a local level and expand from there. It starts with YOU! Speak up!@PompeoFans",(fake) celebrities
The fact that this guy doesn’t believe in your freedom should scare you beyond belief. Requiring all businesses with 100 employees to vaccinate? I smell lawsuits coming a mile away! 🤡 @PompeoFans,(fake) celebrities
President Trump is always _____________. Fill in the blank.@PompeoFans,(fake) celebrities
"School administrators try to block kids from entering school because of the mask mandate. Parents and students stuck together, respectfully would not be turned away.@PompeoFans",(fake) celebrities
SHARE IF YOU ARE PROUD AMERICAN@PompeoFans,(fake) celebrities
The silence is deafening@PompeoFans,(fake) celebrities
@PompeoFans,(fake) celebrities
"""I Dare You To Watch This And Try Not To CryJust watch. How far did you make it?""It's amazing that people make stuff like this. Spread this around the world! @FreedomDaily",(fake) celebrities
The men and women of our military represent the very best of America. No doubt. @PompeoFans,(fake) celebrities
"Under Florida Governor Gov. DeSantis, we teach kids to love their country, not hate it. @PompeoFans",(fake) celebrities
@PompeoFans,(fake) celebrities
@PompeoFans,(fake) celebrities
FACTS...@PompeoFans,(fake) celebrities
@PompeoFans,(fake) celebrities
@PompeoFans,(fake) celebrities
"Thank you, Atlanta Braves@PompeoFans",(fake) celebrities
"""Biden you betrayed us"" Afghans protesting outside the Biden White House. ................................................ Join us here  @TeamTrumpOfficial",(fake) celebrities
@PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
NEW - Biden admin threatens that any refugee from Cuba fleeing the communist regime and trying to reach the U.S. will be turned away.@PompeoChannel,(fake) celebrities
Join us: @PompeoChannel,(fake) celebrities
A fearless leader!Join us: @PompeoChannel,(fake) celebrities
Cancel Culture is wrong and un-American.FORWARD  if you agree.Join us: @PompeoChannel,(fake) celebrities
let there be light and there was light. Join us: @PompeoChannel,(fake) celebrities
GREATEST PRESIDENT EVERJoin us: @PompeoChannel,(fake) celebrities
Chuck & Nancy have done nothing for America!Join us: @PompeoChannel,(fake) celebrities
"""We will not bend, we will not break, we will not yield...we will never, ever surrender.My fellow Americans, our fight is far from over.In fact, we have only just begun."" -Donald TrumpJoin us: @PompeoChannel",(fake) celebrities
"I’ve visited countries where freedom of speech is nonexistent. During our administration, President Trump and I never stopped fighting to protect your voice here in America. The First Amendment is our most precious amendment, and I will never stop fighting to protect it.Join us: @PompeoChannel",(fake) celebrities
President Trump looks so healthy. He really appears to have received his second wind.Join us: @PompeoChannel,(fake) celebrities
Best President Ever! Join us: @PompeoChannel,(fake) celebrities
#MAGA #TrumpRally Join us: @PompeoChannel,(fake) celebrities
Join us: @PompeoChannel,(fake) celebrities
Proud to be an American. I’m proud to live in the greatest country known to man. Happy Independence Day! God bless America!Join us: @PompeoChannel,(fake) celebrities
Happy Rally Day!Will you be watching?@ScavinoChannel,(fake) celebrities
The thought of every patriot!  @PompeoChannel,(fake) celebrities
Join us: @PompeoChannel,(fake) celebrities
"Welcome to the Lone Star State, President Trump!President Trump Visits The Border In Weslaco, Texas.Join us: @PompeoChannel",(fake) celebrities
Join us: @PompeoChannel,(fake) celebrities
TRUMP: “Where’s Mike? The pillow man!” Join us: @PompeoChannel,(fake) celebrities
FOUR MORE YEARS!Join us: @PompeoChannel,(fake) celebrities
Massive crowds at the Trump rally with more than 5 hours to go until showtime! Make sure you watch til the end 🤣@ScavinoChannel,(fake) celebrities
"Trump on newsmax this morning: ""I'll be making an announcement in the not too distant future...I've been fighting them (deep state for 5 years.....they don't love this country""!Join us: @PompeoChannel",(fake) celebrities
Look at all of these patriots! Join us: @PompeoChannel,(fake) celebrities
I stand — without apology — for your Second Amendment rights.Join us: @PompeoChannel,(fake) celebrities
🤣Join us here  @PompeoChannel,(fake) celebrities
"NOW - Dr. Fauci: ""Delta variant is the greatest threat in the US,"" calls for everyone to be vaccinated now.Join us here  @PompeoChannel",(fake) celebrities
Thank you for always putting America first! Join us here  @PompeoChannel,(fake) celebrities
Donald Trump is the most patriotic President in the US history!Do you agree with me?#SHARE Join us here  @PompeoChannel,(fake) celebrities
Sen. Ron Johnson brought up the Vaccine Adverse Event Reporting System (VAERS website this morning “They are suppressing this information and the American people are paying the price.”Join us here  @PompeoChannel,(fake) celebrities
"""Pray for the Children who haven't seen the LightPray for Children who continue to FightPray for the brave Soldiers 🪖 who hold them TightPray for the Angels to wrap them in Love & LightPray to God  to make this RightAmenJoin us here  @PompeoChannel",(fake) celebrities
Who else remembers? Join us here  @PompeoChannel,(fake) celebrities
Join us here  @PompeoChannel,(fake) celebrities
Join us here  @PompeoChannel,(fake) celebrities
"JUST IN - Mayor Lori Lightfoot officially declared racism a ""public health emergency"" today. Chicago to divert nearly $10 million in COVID funds to address the issue.Join us here  @PompeoChannel",(fake) celebrities
"Dr. Fauci on lab theory: ""We’ve always said to keep an open mind and continue to look. So I think it’s a bit of distortion to say that we deliberately suppressed that.""Join us here  @PompeoChannel",(fake) celebrities
"""FIRE FAUCI ACT"" INTRODUCED IN CONGRESSJoin us here  @PompeoChannel",(fake) celebrities
Calling all unapologetic Americans to join me and become a Pipehitter.Join us here  @PompeoChannel,(fake) celebrities
"Happy birthday, President Donald Trump! Serving alongside you to put America First was an honor.  Join us here  @PompeoChannel",(fake) celebrities
"""HAPPY BIRTHDAY PRESIDENT TRUMP!"" june 14, 2021Today is the sacred date connected to the birth of the American army and the American flag. Also, today is the birthday of the greatest American President Donald Trump! Join us here  @TeamTrumpOfficial",(fake) celebrities
"Sometimes, all it takes is just ONE PRAYER to change everything.@FlotusMelaniaTrump ",(fake) celebrities
Join us here  @PompeoChannel,(fake) celebrities
"During our Administration, the U.S. became a net exporter of oil for the first time in 70+ years. We must continue to produce our energy here in America, so we are not dependent on some other country.Join us here  @PompeoChannel",(fake) celebrities
Join us here  @PompeoChannel,(fake) celebrities
Join us here  @PompeoChannel,(fake) celebrities
France fines Google $268 million for abuse of Big Tech ad power.The entire world has had it with Big Tech’s behavior.Join us here  @PompeoChannel,(fake) celebrities
"President Trump""Fauci is ""not a great doctor, but he's a hell of a promoter, he likes television more than any politician in this room.""Join us here  @PompeoChannel",(fake) celebrities
Join us here  @PompeoChannel,(fake) celebrities
Watch Laura Loomer confront Jack DorseyJoin us here in  @PompeoChannel,(fake) celebrities
"Reporter: ""Do you feel confident in Dr. Fauci?"" Biden: ""Yes, I'm very confident in Dr. Fauci.""Join us here in  @PompeoChannel",(fake) celebrities
"Reporter: ""Can you imagine ANY circumstance where President Biden would fire Dr. Fauci?""Psaki: ""No.""Join us here in  @PompeoChannel",(fake) celebrities
@PompeoChannel,(fake) celebrities
The best thing a sitting President has ever said! @PompeoChannel,(fake) celebrities
"China: There is ""no evidence"" of a virus biolab leak, US is trying to blame China to stunt the country’s development.@PompeoChannel",(fake) celebrities
God Bless Our Heroes. 🦅 @PompeoChannel,(fake) celebrities
God bless America and our fallen heroes!  @PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
"Happy anniversary to my amazing wife, Susan. God truly blessed me the day I met you. I love you! @PompeoChannel",(fake) celebrities
The Union is still alive and God will protect the righteous sons who bled and are still bleeding to protect the cruddle of the Free World and democracy! @PompeoChannel,(fake) celebrities
"NEW - Sen. Ted Cruz gets Joe Biden’s ATF Director nominee David Chipman to admit that he wants to BAN the AR-15, the most popular rifle in America. “With respect to the AR-15, I support a ban.”Join @PompeoChannel",(fake) celebrities
Together we fought to secure a better future for our children. Our next generation will have to deal with the burden of the mistakes made in the past. Because of that our dedication and focus on improving the education and socialization of our children. Together we can change the standards and the quality of all conditions in the USA when it comes to education. @FlotusMelaniaTrump,(fake) celebrities
The core of conservatism is freedom for ALL. @PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
"""The Lord is my strength and my defense; he has become my salvation. He is my God, and I will praise him, my father's God, and I will exalt him."" Exodus 15:2 @PompeoChannel",(fake) celebrities
SHARE this video if your FAITH is strong as much as your love for this great country!Join: @PompeoChannel,(fake) celebrities
Join: @PompeoChannel,(fake) celebrities
NEW - What does Harris do with her hand after shaking hands with South Korean President Moon? Join: @PompeoChannel,(fake) celebrities
There seem to be no more masks or social distancing at The White HouseJoin: @PompeoChannel,(fake) celebrities
Freedom  Join: @PompeoChannel,(fake) celebrities
Join: @PompeoChannel,(fake) celebrities
#TRUMPFAMILY Join: @PompeoChannel,(fake) celebrities
#ThankYou Military for saving and protecting us Godspeed and good luck to you Join: @PompeoChannel,(fake) celebrities
Join: @PompeoChannel,(fake) celebrities
JOIN @PompeoChannel,(fake) celebrities
Join Channel @PompeoChannel,(fake) celebrities
God always has a plan Join Channel @PompeoChannel,(fake) celebrities
Join Channel @PompeoChannel,(fake) celebrities
Adam Kinzinger shamefully stands in front of the media and says “I stand with Liz” after she was just ousted. Join Channel @PompeoChannel,(fake) celebrities
Join Channel @PompeoChannel,(fake) celebrities
Join Channel @PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
"Visited the 700 club and CBN News to share why faith in the public square is essential to American success, both at home and abroad. Tune in here",(fake) celebrities
@PompeoChannel,(fake) celebrities
Blessings to all our Orthodox Christian friends around the world. Christos Anesti! Haqqan Qam! Christ is Risen! @PompeoChannel,(fake) celebrities
"President Trump: “If you look at what’s happening, we got it out. We got the word out on so many things, including...John Kerry...”  @PompeoChannel",(fake) celebrities
Lin Wood speaks on the US Military🦅 @GenMFlynn,(fake) celebrities
The President’s plan to put “climate change first” and at the forefront of his agenda will crush American jobs. It already has. The only answer is to put America First. @PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
Do you have a comment?Yes. @PompeoChannel,(fake) celebrities
Join Channel ,(fake) celebrities
Join Channel ,(fake) celebrities
Pres. Biden masks up for a video call to discuss climate change with world leaders He appears to be the only one wearing a mask. @PompeoChannel,(fake) celebrities
"Trust in God's plan. Be brave. Have patience. This isn't a football match, this is a real life fight for our country and our freedom!We will prevail and the sun will shine again!  @PompeoChannel",(fake) celebrities
Focus on God during storms.  If the news becomes too heavy... take a break and come back when you can think clearly.  Faith and hope is the proper lens by which we must see the world. @PompeoChannel,(fake) celebrities
"The shot heard around the world was the beginning of the American Revolution. April 19, 1775Today is also Patriot’s DayMay Future Prove Past like never before @PompeoChannel",(fake) celebrities
“Pray for those who threaten you.” Luke 6:28 @PompeoChannel,(fake) celebrities
A 71 year old President Donald Trump waited up until 2am to welcome home 3 American hostages after being up over 20 hours. These are the things a good President would do. Trump was our Leader. He was our defense and friend. He's a man who loves this country and it's citizens! @PompeoChannel,(fake) celebrities
God Bless the USA! @PompeoChannel,(fake) celebrities
"Russia expells 10 American diplomats and puts 8 members of the current and former US administration on the no-entry list, including FBI Director Wray. @PompeoChannel",(fake) celebrities
This man loves America with his whole heart! @PompeoChannel,(fake) celebrities
Respect @PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
Join channel,(fake) celebrities
Join channel,(fake) celebrities
Join ,(fake) celebrities
Join ,(fake) celebrities
@PompeoChannel,(fake) celebrities
"President Reagan once said, “If we lose freedom here, there is no place to escape. This is the last stand on earth.”  @PompeoChannel",(fake) celebrities
@PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
"“Put on the full armor of God, so that you can take your stand against the devil’s schemes.” Ephesians 6:11 @PompeoChannel",(fake) celebrities
@PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
Follow:  @PompeoChannel,(fake) celebrities
God bless  Donald J. Trump @PompeoChannel,(fake) celebrities
Happy Easter!  @PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
The duty to secure America First never ends.   @PompeoChannel,(fake) celebrities
@PompeoChannel,(fake) celebrities
"“Love the Lord your God with all your heart, and with all your soul, and with all your mind, and with all your strength.” Mark 120 @PompeoChannel",(fake) celebrities
"I may not be able to fit in my battle dress uniform anymore, but leading the CIA & State Department, I constantly focused on protecting our great military and all Americans.If nothing else, our enemies knew: attack our soldiers & you will pay. @PompeoChannel",(fake) celebrities
"If freedom of speech is taken away, then dumb and silent we may be led, like sheep to the slaughter. - George Washington @PompeoChannel",(fake) celebrities
Join Channel ,(fake) celebrities
There is nothing fair or equal about letting biological men compete in women’s sports. Period. @PompeoChannel,(fake) celebrities
Would you?@PompeoChannel,(fake) celebrities
MAGA@PompeoChannel,(fake) celebrities
"arum W-LAN Geräte, Handystrahlung uns gefährden und welche Möglichkeiten man hat.Holistische Gesundheit Heilung und AufklärungWir haben uns entschlossen für Sie eine Zusammenstellung zu machen. Die Technik kann sehr einfach für Ihre Handys, W-LAN Geräte, Häuser und Autos verwendet werden. Wir haben zusätzlich die nötigen Studien miteingefügt, damit Sie sich ein besseres Bild machen können. On Top ist nun ein Erfahrungsvideo von Memon mit eingefügt.Welche Positiven Wirkungen können zu erwarten sein?:-Auf biologischer Ebene neutralisieren die Geräte von Memon nachweislich die negativen Auswirkungen von Störfeldern und das Raumklima wird verbessert.-Es ist zellbiologisch getestet, wissenschaftlich bestätigt und publiziert und es ist für eine dauerhafte Anwendung ausgelegt – auch für 5G! Sie schützen Ihre Mikrozirkulation (Durchblutung der Blutgefäße -Sie werden vor oxidativen Zellstress geschützt (E-Smog hoch- / niederfrequent. Es findet eine Steigerung Ihrer Konzentrations- und Leistungsfähigkeit statt.-Ihre Vitalität, Schlafqualität und Gesundheit wird gefördert. Es renaturiert Ihre Atemluft in Gebäuden & Fahrzeugen. Der Feinstaub wird erheblich reduziert (insbesondere auch Nanopartikel z.B. von Druckern, Kopierern, Filtern, etc.-Eine Renaturierung Ihres Leitungswassers in Quellwasserqualität findet statt. Die Installation erfordert keine baulichen Eingriffe und ist wartungsfrei. Ein Premiumprodukt „Made in Germany“.-Mit derzeit über 80 Testungen und Studien ist Memon die wissenschaftlich umfangreichste dokumentierte Technologie ihrer Art (Studien werden mit eingefügt. Memon hat sich seit über 20 Jahren in allen Lebenslagen bestens bewährt und ist auf Nachhaltigkeit ausgelegt.Wir haben einen Gutschein Code miteingefügt, den uns Memon freundlicherweise zur Verfügung gestellt hat. Sie bekommen bei Memon für Ihre Anschaffung einen Rabatt von 5%. Der Code ist einmalig anwendbar. Gutscheincode:  Neustart2022 Me[mon StartseiteMe]( [monizer Combi Stecker (Büro,Praxen und Zuhause](       [erDoppelblind-Studie](  [MemonBroschüre Memon -]( [EffektZweite Doppelblind-Stu](   die MemonIhre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"atenschutz / Datenkrake Google: Wie lösche ich meine Daten richtig?(Q(QHolistische Gesundheit Heilung und Aufklärung""Google-Daten löschen und Tracking verhindern: So geht’s! Wenn Sie also ein Google-Konto haben, können Sie auch genau sehen, welche Daten das Unternehmen über Sie gespeichert hat. Im Dashboard gibt es beispielsweise eine Zusammenfassung aller verwendeten Google-Dienste und den dort gespeicherten Informationen. Von hier aus können Sie sich zu jedem genutzten Dienst weitere Details anzeigen lassen und Feineinstellungen vornehmen. Dieser Weg macht Sinn, wenn Sie das Datensammeln nur bei bestimmten Diensten verbieten (oder erlauben wollen.Wenn es allerdings darum geht, Google möglichst viel zu untersagen und alle gesammelten Daten und Verläufe löschen zu lassen, klicken Sie sich in den Bereich Daten & Personalisierung ein.""Lin[k zum weiterlesen des ArtikelsLi](      [oWissensbewahrung/Absicherun](Hier erhalten Sie weitere Informationen über das Themenfeld Identität, Daten, Google, KI und Faceboo]([kWerte Community wir sind nu](                 n auf InstagramHolistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Themenkomplex FriedensdemosAlice Schwarzer FÜR weitere WaffenlieferungenFür ihr Friedensmanifest muss die Feministen-Ikone viel Kritik einstecken – kommt aber nun doch die Schwarzer-Zeitenwende?Wenige Stunden vor ihrer gemeinsam mit Sahra Wagenknecht (53, Linke initiierten Demonstration zum Ukraine-Krieg nennt Alice Schwarzer (80 nun doch eine Voraussetzung dafür, dass diplomatische Verhandlungen mit Moskau stattfinden können: den Rückzug russischer Truppen!„Halten Sie mich für naiv?“, fragte Schwarzer im BILD-Talk „Die richtigen Fragen“ (siehe Video. Sie betonte: „Erst dann, wenn sich die Russen anfangen, aus den am 24. Februar besetzten Gebieten zurückzuziehen, kann man sagen: Man liefert keine Waffen mehr.“Meine Meinung dazu:Alles was sich im Fernseher zeigt, kannste in die Tonne kloppen, restlos alles, auch die Sarah Wagenknecht, auch sie glänzte ein paar mal mit Einaugensymbolik und ihr ""Aufstehen"" setzte sich auch schnell wieder hin. Traue keinem Promi‼",reichsbuerger_adjacent
"Themenkomplex Dritter WeltkriegEs gibt Pastoren, die ich verehre und dazu zählt Pastor Jakob Tscharntke‼",reichsbuerger_adjacent
"Themenkomplex MarketingEin jeder weiß, das Produkte minderer Qualität gut angepriesen werden müssen, damit sie Marktfähig sind. Qualität hingegen vermarktet sich von selbst, sie spricht sich rum. Dauert zwar länger, ist aber auch von längerer Dauer. Wer sich auf den § 4 des Reichsvereinsgesetz von 1908 beruft und meint sich darüber legitimieren zu müssen, der ist in Puncto ""Wahrheitsliebe"" eher als Mangelhaft zu bewerten.Meine Empfehlung:Man lese den § 4 des Reichsvereinsgesetztes von 1908 in seiner Gänze und hinterfrage die sich darauf Berufenden und warte die Antworten ab.",reichsbuerger_adjacent
"Themenkomplex  Lustiger als LustigLieber Godi, Du bist ja ein lustiger netter Kerl, manchmal ein wenig zu lustig aber hey, kann ja mal passieren, Prost. Erstens heißt der Kanal ""Lautgedacht fürs Heimathland"" und Zweitens hast Du mit dem Kanal nichts zu tun. Du sprichst davon das man sich nicht streiten soll, bitteschön, dann entfache doch auch keinen Streit in dem Du Dich mit fremden Federn schmückst. Godi, Du solltest mich kennen, ich liebe Steilvorlagen, ich verstehe sie unverzüglich zu nutzen und pariere jeden Tango, auch diesen. Schwamm drüber, ich kenne Dich ja auch und insofern weiß ich dieses ""Eigentor"" auch zu feiern. Ein schönes Wochenende, Gruß Heinrich.",reichsbuerger_adjacent
"Moin alle zusammen, euch einen schönen Tag",reichsbuerger_adjacent
"hakren im feinstofflichen und Drüsen im grobstofflichen. Das eine geht ohne das andere nicht.Holistische Gesundheit Heilung und AufklärungFreigeister von verschiedenen alternativen Gedankenmodellen neigen dazu, sich in eine Denkrichtung zu spezialisieren/radikalisieren. Die Folge ist in der Regel, dass die Bereitschaft abnimmt, neue Ideen in die Gleichung der Skala der Polarität mit einzubinden und somit ein holistisches Bild der persönlichen Umstände zu visualisieren.Mit dem ganzheitlichen Blick auf sämtliche Aspekte wird einem bewusst und klar, wie die Themen in der gesamten Vielfalt ineinander greifen.So ist es mit den Chakren und den Drüsen. Sind die Drüsen des Menschen nicht gesund oder eingeschränkt, können die Chakren als feinstoffliches Energiezentrum nicht funktionieren. Diese Drüsen bilden die nötigen Hormone, die als Transmitter zwischen dem grob Stofflichen und feinstofflichen im Zusammenspiel agieren.Will man eine Heilung im grob Stofflichen starten, muss das feinstoffliche mit einbezogen werden.Dies ist sehr sehr sehr kurz zusammengefasst. Über diese Themen kann man ganze Kapitel füllen.🪴Kronen Chakra(Sahasrara Chakra - Bis auf die Zirbeldrüse ist es keinem einzelnen Organ zugeordnet, Das Kronenchakra verbindet dich mit dem Göttlichen. Es ermöglicht dir, die Erfahrung von Einheit und die Verbindung aller Dinge zu erleben. Mithilfe des siebten Chakras kannst du die Beschränkungen deines Egos überwinden, du lernst im größeren Schema zu denken. Es hat eine schützende Wirkung auf den ganzen Körper. (Heimkommen, göttliche Führung, Einheitsbewusstsein🪴Stirn-Chakra(Ajna Chakra - steht in Verbindung mit der Zirbeldrüse. Auf körperlicher Ebene reguliert das Stirnchakra die Augen, den Weg der gesehen Bilder zum Gehirn. Es reguliert unseren Schlaf und den Biorhythmus. Ist das Stirnchakra in Balance, fühlen wir uns in unserer Kraft und erfahren große Ausdauer. (Sehen, Intuition, höhere Einsicht🪴Kehlkopf / Hals -Chakra (Muladhara Chakra - steht in Verbindung mit der Schilddrüse. Steht für Kommunikation und unterstützt dich dabei, die höchste Wahrheit deiner Seele zu leben und auszudrücken. Also sei ehrlich zu dir selbst und nimm deine Wirklichkeit an. (Wahrheit, Kommunikation, Klarheit, Kreativität🪴Herz-Chakra - (Anahata Chacra steht in Verbindung mit der Thymusdrüse. Es ist das Bindeglied zwischen den drei unteren, weltlichen Chakras, die deinen physischen Körper und deine Sinneserfahrungen zugeordnet werden, und den drei oberen, spirituellen Chakras, die eher mit deiner Intuition, deinem Geist und deiner Seele in Verbindung stehen.  (Liebe, Hingabe, Verbindung, Nähe🪴Nabel-Chakra (Manipura Chakra steht in Verbindung mit der Bauchspeicheldrüse. Das Solarplexus-Chakra ist der Sitz unserer Persönlichkeit. Es nährt Bauch(Organe, Leber, Magen, Galle und vegetatives Nervensystem. (Selbstwert, Willenskraft, Durchsetzungsvermögen, Energie, Bauchgefühl und Verdauung🪴Sakral-Chakra (Svadisthana Chakra Reproduktionsorgane/Drüsen von Mann und Frau. Im Sakralchakra geht es um Kreativität, Beziehungen, Fortpflanzung, tiefe Freude, Lust und Genuss – einfach loslassen und mit dem Leben fließen. (Lebensfreude, Emotionen, Sexualität, Intuition und Kreativität🪴Wurzel-Chakra (Muladhara - Steht in Verbindung mit den Geschlechtsdrüsen. Die festen Bestandteile des Körpers wie Knochen, Wirbelsäule, Zähne und Nägel – aber auch Blut, Beckenboden und Darm. (Erdung, Stabilität, SicherheitHier erha[lten Sie weitere Informationen über das Themenfeld Zirbeldrüse Unsere Com](  [munity wächst schnell und ist jetzt auch auf Instagram zu finden!H](                 olistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
Eine interessante RedeDiese Rede von Björn Höcke wird sicherlich in den Medien Gehör gefunden haben.Auf die Reaktionen bin ich gespannt. ,reichsbuerger_adjacent
"Themenkomplex Friedensvertrag von Brest-LitowskEs wird ja oft behauptet, dass der Friedensvertrag von Brest-Litowsk ein gültiger Vertrag mit Sowjetrussland wäre und somit der Frieden mit Russland zum WW I hergestellt sei. Ist das wirklich so? Im Versailler Vertrag liest sich das anders. Im Artikel 433 des Versailler Vertrag ist folgendes zu lesen:»Zur Sicherung der Ausführung der Bestimmungen des gegenwärtigen Vertrags, wodurch Deutschland endgültig die Aufhebung des Vertrags von Brest-Litowsk und aller Verträge, Übereinkommen und Abmachungen zwischen ihm und der russischen maximalistischen Regierung anerkennt, sowie zur Sicherung der Herstellung des Friedens und einer guten Regierung in den baltischen Provinzen und Litauen werden alle deutschen Truppen, die sich augenblicklich in den genannten Gebieten befinden, sobald die Regierungen der alliierten und assoziierten Hauptmächte den Augenblick mit Rücksicht auf die innere Lage dieser Gebiete für gekommen erachten, hinter die deutschen Grenzen zurückgenommen. Diese Truppen haben sich jeder Beitreibung, Beschlagnahme und aller anderen Zwangsmaßnahmen zur Erlangung von Lieferungen mit Bestimmung nach Deutschland zu enthalten und dürfen sich auf keine Weise in Maßregeln zur Landesverteidigung einmischen, welche die vorläufigen Regierungen von Estland, Lettland und Litauen etwa ergreifen.Bis zur Räumung oder nach der vollständigen Räumung dürfen keine neuen deutschen Truppen die genannten Gebiete betreten.«",reichsbuerger_adjacent
"Зампред Совбеза РФ Медведев: «Важно достичь всех целей специальной военной операции. Отодвинуть границы угроз нашей стране как можно дальше, даже если это будут границы Польши. Уничтожить неонацизм дотла. Чтобы не тратить потом время на отлов остатков бандеровских банд по малороссийским лесам. Чтобы мир обрёл долгожданное спокойствие». Stellvertretender Vorsitzender des Sicherheitsrates der Russischen Föderation Medwedew: „Es ist wichtig, alle Ziele einer speziellen Militäroperation zu erreichen. Schieben Sie die Grenzen der Bedrohung unseres Landes so weit wie möglich, auch wenn dies die Grenzen Polens sind. Zerstöre den Neonazismus bis auf die Grundmauern. Um später keine Zeit damit zu verschwenden, die Überreste von Bandera-Banden in den Wäldern von Little Russian zu fangen. Damit die Welt den lang ersehnten Frieden findet.Ehrliche Infos, mehr RUSSLAND @Deutsch_Russische_Freunde",reichsbuerger_adjacent
"Deutsche Wahldemokratie - treffend erklärt von einem Migranten!Demokratisch ist zudem, wenn...... du keine Cola wählst und ... dir die Cola-Wähler hinterher vorheulen, dass du als Nicht-Cola-Wähler schuld an ihrer Zuckerkrankheit bist...",reichsbuerger_adjacent
"In eigener Sache, eine Richtigstellung/KorrekturAuch mir passieren Fehler doch Fehler können und sollten korrigiert werden. Das von mir gepostete Video über die Reichsbürger von Extra 3 ist nicht aktuell, es ist aus dem Jahre 2016. Daraus resultiert, das meine Einschätzung, meine Bewertung falsch ist, dieses Video ist nicht das Ergebnis eines Zugzwangs, es ist viel schlimmer, dieses Video ist ein Grundstein für den aktuell herrschenden Narrativ im Themenkomplex ""Reichsbürger"". 2016, da gab es noch keinen ""Reichstagssturm"" und auch keine ""Putschisten"", das Thema 1871 hatte nicht annähernd soviel Reichweite wie jetzt, dennoch wurde ein Video produziert in dem schwere Bewaffnung auch als Stilmittel zur Kriminalisierung dieser Bewegung eingesetzt wurden. Für mich steht fest, mit diesem Video hat man vorgebaut und das zeigen der Waffen im Rahmen dieses Videos lässt mich folgern, das die ganze Nummer eines bewaffneten Putschversuches lediglich nur ein Konstrukt ist, um dem 2016 gesetzten Grundstein auch etwas Nachdruck zu verleihen. um Ihm ""Leben"" einhauchen zu können.           .",reichsbuerger_adjacent
"exagonales Wasser: Das unschlagbare Schutzschild gegen Krankheit und Alterung? Vortrag über die Vorteile vom hexagonalem Wasser.Holistische Gesundheit Heilung und AufklärungWerte Leser, Besucher und Freunde des Kanals, heute möchten wir nochmals mit Ihnen über ein faszinierendes Thema sprechen, das in der Gesundheits- und Wellness-Industrie immer mehr an Aufmerksamkeit bekommt: hexagonales Wasser.Hexagonales Wasser ist ein spezieller Zustand von Wasser, der als besonders gesundheitsfördernd gilt. In diesem Vortrag werden wir auf die Vorteile von hexagonalem Wasser eingehen und erklären, welche positiven Auswirkungen es auf den menschlichen Körper hat.Warum ist hexagonales Wasser wichtig? Strukturiertes Wasser wird aufgrund der Eigenschaften als besonders vorteilhaft für die Gesundheit angesehen. Es hat eine höhere Löslichkeit und ist in der Lage, Nährstoffe und Sauerstoff effektiver zu transportieren als normales Wasser. Lin[k zum weiterlesen des ArtikelsHe](           [n. (PDF Erklärung Sternenwasser Kup](       ferspiraleFür alle Mitglieder unserer Kanal-Community gibt es die Möglichkeit, einen Rabatt von 10 Prozent zu erhalten, indem sie den Code ""Sunnytime"" bei der Bestellung verwenden.Ihre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Unsere Nahrung macht uns KRANK !!!!Holistische Gesundheit Heilung und AufklärungMikronährstoffe wie Magnesium, Folsäure, Vitamin B6 und Vitamin C sind für den Körper unverzichtbar. Doch viele Menschen leiden unter einem Mangel an diesen wichtigen Nährstoffen. Laut Studien sind ausgelaugte Böden, Luftverschmutzung, zu schnelles Wachstum, lange Lagerung und Pestizide die Hauptursachen für den Verlust von Mikronährstoffen in Obst, Gemüse und anderen Lebensmitteln.Es wird betont, dass es wichtig ist, auf eine gute Qualität der Nahrung zu achten, um ausreichend Mikronährstoffe zu erhalten. Natürliche Nahrungsergänzungen können eine Alternative sein, solange sie von hoher Qualität und natürlichen Ursprungs sind. Synthetische Nahrungsergänzungen hingegen sollten vermieden werden.Es ist erwiesen, dass ein Mangel an Mikronährstoffen zu einer schwachen Immunabwehr und zu chronischen Entzündungen führen kann. Doktor Hartner empfiehlt, auf eine ausgewogene Ernährung mit viel Obst, Gemüse, Nüssen und tierischen Produkten aus artgerechter Haltung zu achten, um genügend Mikronährstoffe auf natürliche Weise zu erhalten.Die Menschen  sollten auch darauf achten, dass sie hochwertige Nahrungsergänzungen von vertrauenswürdigen Anbietern wählen, um sicherzustellen, dass sie genügend Mikronährstoffe erhalten. Insgesamt ist es wichtig, sich bewusst zu machen, wie wichtig Mikronährstoffe für den Körper sind und wie man sie auf natürliche Weise aufnehmen kann, um eine optimale Gesundheit und ein starkes Immunsystem zu gewährleisten.You[Tube-LinkWi]([ssensbewahrung/AbsicherungU]([nsere Community wächst schnell und ist jetzt auch auf Instagram zu finden!H](           olistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
Hedwig - Das deutsche Land,reichsbuerger_adjacent
"Aus aktuellem AnlassDie YouTube-Zensur hat mal wieder zugeschlagen, der Zweitkanal von SC-360 Media wurde gelöscht. Carsten und Stephan sind aber nicht untätig, jeder der die beiden weiterhin auf YouTube anschauen möchte kann dies jetzt auf folgendem Kanal. Also einfach mal schnell ein Abo da lassen. ",reichsbuerger_adjacent
"Themenkomplex Der SuperpatriotNun, was soll ich dazu noch sagen außer das meine Bezeichnung ""Superpatriot"" ein Volltreffer ist?Er scheint selbst 1871 zu sein, wie kann man es wagen, gegen ihn zu gehen? 🤣Man mache doch einfach mal ein Experiment und schaue, in welchem Kanal die Wahrheit die geschrieben steht, fortwährend und ohne unterlass gepostet wird und wo man sich einfach nur begrüßt und wieder verabschiedet. Es ist eindeutig oder? Ja, das war der Inhalt des Chats eines ""Aufklärers"" mit über 2800 Mitgliedern vom 16. Februar 2023, jener der behauptet, das er die Wahrheit die geschrieben steht, verkündet🤪",reichsbuerger_adjacent
"Big Breaking! „Wann werden alle zugeben, dass die gesamte Reaktion auf die ‚Pandemie‘ von Covid-19 ein Betrug war?“Elon Musk antwortet:""ES KOMMT!!!!!""",reichsbuerger_adjacent
"War Kaiser Wilhelm I, ein Zeitreisender?Ja, das müsste er gewesen sein, wenn der Begriff Deutschland erst auf dem Potsdamer Abkommen von den Alliierten definiert wurde. Natürlich war er kein Zeitreisender. Was der Superpatriot euch durch geschickte Rhetorik  unterschieben will, grenzt an Hochverrat. Auf dem Potsdamer Abkommen wurde nicht Deutschland als solches definiert sondern es wurde seine räumliche Ausdehnung definiert, und zwar in den Grenzen von 1937, Grenzverläufe, die schon durch den Versailler Vertrag definiert wurden. Der Kaiser Wilhelm I benutzte den Begriff Deutschland in seiner ersten Rede im Reichstag vom 21. März 1871 sehr sehr oft, auch redete er vom deutschen Volk. Wie kann das sein, es gab doch kein deutsches Volk, so zumindest der Superpatriot?Doch, es gab ein deutsches Volk, mit der Reichsverfassung von 1871 wurde es im Artikel 3 definiert.",reichsbuerger_adjacent
"Themenkomplex ZugzwangEgal was mit diesem Video von EXTRA 3 des NDR bewirkt werden soll, eines zeigt es mir deutlich, sie stehen unter Zugzwang denn sie würden sowas nicht produzieren wenn es keinen Anlass dazu gäbe. Mit anderen Worten, da scheint was zu wachsen was sie zum Gegensteuern zwingt. Interessant ist aber, das hier differenziert wird zwischen ""Reichsbürger"" und ""Nazi"". Auch das ist in meinen Augen einem gewissem Zugzwang geschuldet. Was lernen wir daraus? Sanfter Druck, vor allem steter Druck, zwingt das Gegenüber in eine Handlung.Beim Katz und Mausspiel ist es wichtig zu wissen, wer die Katze ist ",reichsbuerger_adjacent
Heinrich auf Tour bei Lutherstadt WittenbergAm Donnerstag den 16.03.2023 ist Heinrich im Raum Lutherstadt Wittenberg auf Vortragstour. Die Veranstaltung beginnt um 16.00 Uhr und für 18.00 Uhr ist ein Pause mit Abendessen nach Wunsch geplant.Die Kosten für Speisen und Getränke müssen allerdings selbst getragen werden. Der genaue Veranstaltungsort wird noch rechtzeitig bekannt gegeben.Die Veranstaltung ist wie alle Veranstaltungen von mir Eintrittsfrei.Die Räumlichkeiten fassen maximal 40 Gäste und darum ist eine frühzeitige Anmeldung empfehlenswert. Angemeldet werden kann sich ausschließlich über die folgende E-Mailadresse.‼Wichtig‼Gebt dazu bitte euren Namen und die Anzahl der Teilnehmer an.vortragWB@web.de,reichsbuerger_adjacent
"Themenkomplex Letzte GenerationJa, der liebe Gott bestraft sofort. Eine Dummbratze der Letzten Generation stolpert über ihre selbst ausgelegte Ölspur. In der Tat, diese Volldeppen gehören definitiv zur letzten Generation der Vollverblödeten.Sie stellen den Höhepunkt der Vollverblödung dar und werden Gott sei Dank aussterben. Manch einer von ihnen wird sich im Reifenprofil eines 38 Tonners verewigen, weil die Ölspur die Bremsung erschwerte, andere werden sich bei ähnlichen Aktionen einen Schädelbasisbruch zuziehen und es könnte passieren, dass wiederum andere dieser Gattung von aufgebrachten Fahrzeugführern, welche bedingt durch die gelegte Ölspur in einen schweren Unfall verwickelt wurden, diese Kackbratzen einfach mit einem Radkreuz erschlagen. Ich verbuche das dann unter natürlicher Auslese.",reichsbuerger_adjacent
"WICHTIG SENSATION - Angela Merkel hat in Donezk im Donbass studiert! Wir haben ihre ehemalige Lehrerin gefunden und mit ihr gesprochen!  TV-Show ""Anti-Fake"" mit Alina Lipp und Wovan und Lexus auf DEUTSCH!Traurig, dass Angela scheinbar ein riesiger Fan der Stadt Donezk war und trotzdem in heutiger Zeit die ukrainischen Streitkräfte dabei unterstützt, eben diese Stadt und seine harmlosen Bürger seit 2014 zu beschießen 🤷‍Übersetzung: Deutsc[h-Russische Nachrichten@neu]( esausrussland",reichsbuerger_adjacent
"Themenkomplex Migration/UmvolkungBrauchen die Deutschen wirklich die Migration?Nein, brauchen sie nicht denn würde die Politik die Familie im gleichen Maße fördern wie es bei der Migration der Fall ist, gäbe es keine Überalterung der Bevölkerung. Gretel Schwab aus Alpirsbach brachte dies in einer Zeitung auf den Punkt.",reichsbuerger_adjacent
"Themenkomplex Souveräne BundesstaatenWaren die einzelnen Bundesstaaten des Deutschen Reich wirklich voll Souverän wie so manch einer behauptet? Wenn man die Verfassungen der Bundesstaaten liest, wird man feststellen das es nicht so war. Verfassung der freien Hansestadt Bremen.vom 20. Februar 1854in der am 1. Januar 1894 publizierten FassungErster Abschnitt. Von dem Bremischen Staat im Allgemeinen.§ 1. Die Stadt Bremen und das mit derselben verbundene Gebiet bilden einen selbständigen Staat unter der Benennung: freie Hansestadt Bremen.Als einer der Bundesstaaten, welche das deutsche Reich bilden, teilt der Bremische Staat die aus dieser Verbindung herfließenden Rechte und Verpflichtungen.§ 2. Erwerb und Verlust der Staatsangehörigkeit bestimmen sich nach den Reichsgesetzen.Bürger des Staats ist jeder Angehörige desselben, welcher den Staatsbürgereid geleistet hat.Verfassung der freien und Hansestadt Hamburgvom 13. Oktober 1879geändert durch Gesetz vom 6. Juli 1888 (GS S. 43 Gesetz vom 22. Juni 1894 (GS S. 112 Gesetz vom 2. November 1896 (GS S. 94 Gesetz vom 3. November 1913 (GS. S. 179.Artikel 1Die Stadt Hamburg und das mit derselben verbundene Gebiet bilden unter der Benennung ""die freie und Hansestadt Hamburg"" einen selbständigen Staat des Deutschen Reiches.Artikel 3Angehörige des Hamburgischen Staates sind Diejenigen, deren hiesige Staatsangehörigkeit nach Maßgabe der Reichsgesetzgebung begründet ist.Artikel 21Hinsichtlich des Hamburgischen Contingents zum Reichsheere werden die nach der Verfassung und den Gesetzen des Deutschen Reiches den Contingentsherren zustehenden Rechte vom Senate ausgeübt, soweit nicht besondere Conventionen ein Anderes bestimmen.Artikel 22Der Senat vertritt den Staat in seinem Verhältniß zum Deutschen Reiche und zum Auslande.Er leitet die Reichs- und auswärtigen Angelegenheiten des Hamburgischen Staates, führt die auf dieselben bezüglichen Verhandlungen, ernennt die Bevollmächtigten bei anderen Staaten und beim Bundesrathe des Deutschen Reiches. Er schließt die Staatsverträge, hat aber vor Ratifizierung derselben die Zustimmung der Bürgerschaft einzuholen.Artikel 65Die Bürgerschaft ist berechtigt, vom Senate Auskunft über Staats-Angelegenheiten zu verlangen. Die entsprechende Verpflichtung des Senats erleidet eine Ausnahme in Betreff obschwebender Verhandlungen in Reichs- oder auswärtigen Angelegenheiten. …",reichsbuerger_adjacent
"alvanischer Strom: Die natürliche Methode zur Behandlung von Entzündungen. Alte verschwiegene Wissenschaft?Holistische Gesundheit Heilung und AufklärungDie Begeisterung für dieses Gerät basiert auf der soliden wissenschaftlichen Grundlage der elektro-galvanischen Heilkunde und ihrer bewährten Wirksamkeit bei der Behandlung von Schadstoffablagerungen und Entzündungen im Körper. Zahlreiche Forschungsberichte belegen, dass elektrische Vorgänge eine zentrale Rolle in den Lebensprozessen von Pflanzen, Tieren und Menschen spielen. Das Galvanische Wechselstromgerät nutzt diese Erkenntnisse, um das körpereigene elektrische Potential zu erhöhen und damit die Gesundheit und Leistungsfähigkeit zu verbessern. Seine Anwendung ermöglicht es, ""niederschwellige Entzündungen"" zu behandeln und den Organismus in Richtung seiner ursprünglichen evolutionären Ordnung zu führen.Das Galvanische Wechselstromgerät hat sich in zahlreichen Studien als äußerst effektiv erwiesen. Eine Metaanalyse von 15 randomisierten kontrollierten Studien ergab, dass die Anwendung galvanischer Ströme die Schmerzen bei rheumatoider Arthritis signifikant reduzieren kann (Quelle: Journal of Clinical Medicine. Eine andere Studie kam zu dem Ergebnis, dass die Verwendung von galvanischem Strom bei der Behandlung von akuten Knöchelverstauchungen die Schmerzen lindert und die Funktion des betroffenen Gelenks verbessert (Quelle: European Journal of Physical and Rehabilitation Medicine.Das Galvanische Wechselstromgerät erweist sich als äußerst nutzerfreundlich und stellt eine vertrauenswürdige, natürliche Alternative zu herkömmlichen, schmerzlindernden Medikamenten dar. Es handelt sich hierbei um eine nicht-invasive Methode, welche in der Regel keine Schmerzen oder unerwünschten Nebenwirkungen verursacht. Des Weiteren kann das Gerät von Menschen jedes Alters problemlos bedient werden. Falls Sie eine natürliche und wirkungsvolle Methode zur Behandlung von Schmerzen und Entzündungen suchen, kann das Galvanische Wechselstromgerät eine mögliche Lösung sein, nach der Sie gesucht haben.Hie[r haben Sie eine ausführliche PDF über die Riesenvorteile des Galvanischen Feinstroms.🩻Hi](             [m-GerätWerte Community wir sind nun au](        f InstagramUnsere Community aus unserem Kanal bekommt einen Nachlass von 10 Prozent, wenn Sie den Code: ""Sunnytime"" beim Erwerb eingeben.Ihre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"apsöl und Margarine: Gesundheitsgefährdung durch falsche Fette(QHolistische Gesundheit Heilung und Aufklärung""Die Gesundheitsgefährdung durch Rapsöl und Margarine wird leider ernährungswissenschaftlich wie auch von medizinischer Seite völlig ignoriert. Gesunde Fette wie beispielsweise ökologisches Schweineschmalz oder rein biologisch erzeugte Öle von Olivenöl über Sesamöl bis zu den verschiedenen Nußölen werden therapeutisch selten gezielt zur Gesunderhaltung oder zur Wiederherstellung der Gesundheit eingesetzt.Besonders bei Stress und Burnout, aber auch bei Hormonstörungen bis hin zur Unfruchtbarkeit spielen schlechte Fette, aber auch zu wenig Fette eine entscheidende Rolle im Krankheitsprozess.""You[Tube-LinkAb](s[icherungHo](listische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Immer wenn SternTV und SpiegelTV unsere Proteste als ""rechts"" zu framen versuchen, sollte man sich vor Augen führen, wer der Eigentümer dieser Presseerzeugnisse ist. Spiegel gehört zu Gruner & Jahr, Stern gehört zur RTL-Group. Sowohl Gruner & Jahr als auch die RTL-Group gehören zu Bertelsmann. Bertelsmann ist im Besitz der Oligarchen-Familie Mohn. Heinrich Mohn war ab 1921  Förderer der NSDAP und später Fördermitglied der SS. Sohn Reinhard war Mitglied in HJ, SS und NSDAP. Bertelsmann kooperierte eng mit dem NS-Propagandaministerium und produzierte gr. Mengen Wehrmachtsliteratur. Heute versucht der Konzern diese Geschichte umzuschreiben.Die Zeit-Artikel ""Ein Musterbetrieb"" (2002(gelöschtTAZ-Artikel ""Dünner Schlussstrich"" (2002WDR-Artikel über Reinhard Mohn (2021""Die braune Vergangenheit von Bertelsmann"" (1999Bericht Historiker-Komission (2000",reichsbuerger_adjacent
"Heinrich auf Tour, bald auch in deiner StadtAm Samstag den 25.03.2023 ist Heinrich 80 Km nördlich von Hamburg auf Vortragstour. Der genaue Veranstaltungsort sowie die genaue Uhrzeit (Nachmittags wird noch bekannt gegeben.Die Veranstaltung ist wie alle Veranstaltungen von mir Eintrittsfrei, damit ein Jeder an dieser Veranstaltung teilnehmen kann.Für Speisen und Getränke Vorort ist gesorgt, diese müssen aber von jedem selbst getragen werden.Die Räumlichkeiten fassen 80 Gäste und darum ist eine frühzeitige Anmeldung empfehlenswert. Angemeldet werden kann sich ausschließlich über die folgende E-Mailadresse.‼Wichtig‼Gebt dazu bitte euren Namen und die Anzahl der Teilnehmer an.vortragHH@web.de",reichsbuerger_adjacent
"Putins Warnung: „Eure Elite dreht komplett durch“ Nach Putins Rede zur Lage der Nation behaupten die West-Medien, der russische Präsident habe nur Propaganda und Lügen verbreitet. Doch stimmt das wirklich? In diesem Bericht unterziehen wir Putins Aussagen einem Faktencheck. Das Ergebnis könnte eindeutiger nicht sein…🦁 Unterstützung von LION MediaPaypal BankverbindungEmpfänger: LOEWENHERZ MEDIA LLCIBAN: BE40 9673 4703 6963BIC: TRWIBEB1XXXAbonnieren: @LIONMediaTV 22. Februar 2023",reichsbuerger_adjacent
"Themenkomplex Zertrümmerung von ThesenDieser Themenkomplex dient dem Zweck, selbst aufgestellte Thesen von sogenannten ""Leitpatrioten"" zu zertrümmern.Heute wird dem durch lustige ""Leitpatrioten"" gesetzten Narrativ,  dass Deutschland als Begriff erst auf dem Potsdamer Abkommen der Alliierten Siegermächte des 2. Weltkrieg definiert wurde, ein weiterer Sargnagel eingetrieben. Man lese und verstehe: Staatsgrundgesetz für das Herzogtum GothaMan lese den § 1 und den § 2 ganz genau‼",reichsbuerger_adjacent
"Themenkomplex Systeminkompatibilität Diese Banane ist ein Musterbeispiel für eine nicht vorhandene Systemkonformität, sie ist nicht krumm, nein, sie hat wie alle anderen auch, welche Systeminkompatibel sind, einen geraden Rücken. 🤣Ich habe sie nicht gegessen, ich werde sie mir von Gunter von Hagens präparieren lassen und für die Nachwelt erhalten, als Symbol des Widerstandes  Lang lebe die Banane....",reichsbuerger_adjacent
"""Kleiner Lifehack an alle männlichen Arbeitnehmer: Ich werde mit 62 Jahren das Geschlecht wechseln. Dann wird aus Herr Sievi einfach Frau Sievi und Frau Sievi geht dann mit 63 in Rente und 1 Jahr später werde ich mein Geschlecht wieder zum Mann wechseln.""t.me/GlobalPatriots 🦅",reichsbuerger_adjacent
"Themenkomplex Zertrümmerung von ThesenDieser Themenkomplex dient dem Zweck, selbst aufgestellte Thesen von sogenannten ""Leitpatrioten"" zu zertrümmern.Heute wird dem durch lustige ""Leitpatrioten"" gesetzten Narrativ,  dass Deutschland als Begriff erst auf dem Potsdamer Abkommen der Alliierten Siegermächte des 2. Weltkrieg definiert wurde, ein weiterer Sargnagel eingetrieben. Man lese und verstehe: Verfassungsurkunde für das Großherzogtum Badenvom 22. August 1818geändert durch Gesetz vom 14. April 1825 (RegBl. Nr. 6 Gesetz vom 13. Juni 1831 (RegBl. Nr. 10  Gesetz vom 28. Dezember 1831 (RegBl. S. 62 Gesetz vom 5. August 1841 (RegBl. S. 213 Gesetz vom 17. Februar 1849 (RegBl. S. 75 Gesetz vom 17. Juni 1862 (RegBl. S. 233 Gesetz vom 21. Oktober 1867 (RegBl. S. 423 Gesetz vom 20. Februar 1868 (RegBl. S. 345 Gesetz vom 21. Dezember 1869 (GVBl. S. 571 Gesetz vom 16. April 1870 (GVBl. S. 299 Gesetz vom 24. Juli 1888 (GVBl. S. 399 Gesetz vom 24. August 1904 (GVBl. S. 339Neubekanntmachung vom 26. August 1904 (GVBl. S. 374I. Von dem Großherzogthum und der Regierung im Allgemeinen § 1. Das Großherzogthum bildet einen Bestandtheil des Deutschen Reiches.§ 2. Alle organischen Beschlüsse der Bundesrates, welche die verfassungsmäßigen Verhältnisse Deutschlands oder die Verhältnisse deutscher Staatsbürger im Allgemeinen betreffen, machen einen Theil des badischen Staatsrechts aus, und werden für alle Classen von Landesangehörigen verbindlich, nachdem sie von dem Staatsoberhaupt verkündet worden sind.",reichsbuerger_adjacent
"Ihr Lieben die 1871 Friedensboten vereint mit der Deutschlandfrage Berlin🤍🤝,laden Euch zu unseren Sprachchat Abend ein, wie immer versuchen wir Euch auf eure Fragen, auch Antworten zu geben 🥰Hier der Einladungslink Der Kanal:In Zusammenarbeit mit",reichsbuerger_adjacent
"Themenkomplex FalschspielerHier auf Telegram gibt es viele Falschspieler, insbesondere im Kreis der 1871er Patrioten tummeln sich einige.Hier nun weiterer Stoff, der einigen Falschspielern das Genick brechen wird, insbesondere die Fake-Wahlkommission mit ihrem lustigen Finanzberater Erhard Golla sollte dieses jetzt auch mal ganz deutlich durchlesen. Und lieber Hajo, auch Du wärst gut beraten dieses hier mal in Augenschein zu nehmen‼Ja, und ob ein Herr Radon dieses hier geschriebene überhaupt lesen bzw. verstehen wird, bleibt fraglich.",reichsbuerger_adjacent
2018 Warum läuft sowas nicht jeden Tag im normalen Fernsehen?Trump sprach 2012 schon davon ... @CNconspiracynewsroom ,reichsbuerger_adjacent
"Themenkomplex ""Das ging nach Hinten los""""Bush hat 9/11 selber verursacht, und Hitler hätte den Job besser gemacht als der Affe, den wir nun haben. Unsere einzige Hoffnung jetzt ist Donald Trump"".Das waren die Zeilen die Microsoft veranlasste, ihren KI-Chat-Bot ""Tay"" nach nur 16 Stunden Betriebszeit vom Netz zu nehmen. 🤣H     ",reichsbuerger_adjacent
"1 Millionen Euro Schaden für jede Durchsuchung: Leipziger Antifa-Szene droht Sachsen mit Terror!Wie lange wollen Ministerpräsident Kretschmer und sein Innenminister Schuster die linke Szene in Sachsen noch gewähren lassen? Während in Ungarn konsequent durchgegriffen wird, haben die Linksextremisten in Sachsen Narrenfreiheit. Und drohen jetzt ganz offen: Für jede weitere Hausdurchsuchung soll es Randale-Demos mit einer Millionen Euro Sachschaden geben. Dass diese Drohung ernstzunehmen ist, zeigte sich am vergangenen Wochenende: Dort zog eine sogenannte ""Scherbendemo"", bei der alle anliegenden Geschäfte mit Steinen beworfen wurden, durch den Leipziger Osten.Wo bleibt die Reaktion der Landesregierung? Müssen durch den roten Terror erst Menschen sterben, bis entschlossen auf Linksextremismus reagiert wird?FREIE SACHSEN: Folgt uns für Nachrichten und Informationen bei Telegram! ",reichsbuerger_adjacent
Im Wald weiß der Jäger genau was zu tun ist wenn das Schwarzwild aufmuckt....,reichsbuerger_adjacent
"arum Ihnen das keiner sagt! Viele Jahrzehnte länger und glücklicher Leben? Gewusst wie! Holistische Gesundheit Heilung und AufklärungStellt der Alltag eine Herausforderung für Sie dar? Fühlen sie sich erschöpft? Sind sie gereizt? Haben sie Kreislaufbeschwerden? Fühlen sie sich erschlagen und traurig? Haben Sie Übergewicht? Haben Sie Diabetes oder Allergien? Sind Sie Energielos? Sie sind ständig krank? Haben Sie Rheuma? Haben Sie vielleicht sogar Krebs? Sollten Sie eines dieser Symptome bei sich feststellen dürfen, wäre es sinnvoll sich den folgenden Artikel genaustens durchzulesen und zu verstehen. Hast Du dich schon einmal mit dem Thema BIO-HACKING auseinandergesetzt? Erzähl es uns unbedingt in den Kommentaren! Wir sind gespannt.🥰🫶Link[zum weiterlesen. Swipe durch die Bilder und lasse uns gern ein Like und/oder Kommentar da.Holis](               tische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"""Ernährung: pflanzliche Öle sind Hauptursache fast aller chron. Erkrankungen""Holistische Gesundheit Heilung und Aufklärung""Omega 6 Fettsäuren aus pflanzlichen Ölen sind Hauptursache von Herzinfarkt, Herzschwäche, Schlaganfall, Krebs, Diabetes und auch Makuladegeneration. Ein sehr überzeugender Vortrag des Makula-Degenerations-Forschers Dr. Chris Knobbe fasst historische und aller-neueste Forschungsergebnisse zusammen, welche dies umfänglich beweisen!Das ist wohl einer der wichtigsten Artikel die ich jemals geschrieben habe! Absolut empfohlen, bitte unbedingt teilen! Der Artikel ist lang, auch komplex – und braucht viel Zeit – die ist es wert, es geht um JAHRE ihrer Gesundheit!Inhalt: Pflanzliche Öle – in Industrieprodukten überall verarbeitet –-lösen Insulin-Resistenz, Kohlenhydrat-Unverträglichkeit und Diabetes aus,-führen zu Mitochondriopathie, Energie-Produktions-Mangel,-aktivieren viele Krebs-Gene,-Atherosklerose, Herzinfarkt und Herzinsuffizienz-verursachen Makuladegeneration und die Pandemie von AdipositasDiese ungesättigten pflanzlichen Öle werden im Körper kaum abgebaut. Omega 6 hat im Körper eine Halbwertszeit die über viele Monate geht und ist im wahrsten Sinn toxisch!""Lin[k zum weiterlesen des Artikels hier.Hi](       [eUnsere Community wächst schnell und ist jetzt auch auf Instagram zu](                  finden!Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"+++Nach Maskenzwang jetzt Maskenverbot+++🤣Im durchregulierten Deutschland kann aus einem Zwang von einem Tag auf den anderen ein Verbot werden. Nachdem die Maskenpflicht im öffentlichen Nahverkehr endlich gefallen ist, dürfen Taxifahrer nun keine Maske mehr tragen, auch nicht freiwillig.",reichsbuerger_adjacent
"...und das obwohl ja die Narrative, von wegen Angriffskrieg von Putin, von Allen dahergebetet werden, leider auch von Sahra. Es ist somit noch nicht einmal ihre Minimalopposition mehr möglich. Ich möchte die Liste der Unterzeichner dieser Kriegspetition einsehen, damit ich weiß, wen wir nach dem Zusammenbruch vor ein Kriegsverbrechertribunal zu stellen haben.",reichsbuerger_adjacent
"Agenda47: Präsident Trump wird die Kriegstreiber und Globalisten entlassen, die endlose Kriege anstreben""Seit Jahrzehnten sind dieselben Leute wie Victoria Nuland und viele andere wie sie davon besessen, die Ukraine in die NATO zu drängen, ganz zu schweigen von der Unterstützung des Außenministeriums für die Aufstände in der Ukraine"", so Präsident Trump.""Diese Leute suchen schon seit langem die Konfrontation, ähnlich wie im Irak und in anderen Teilen der Welt, und jetzt stehen wir am Rande des Dritten Weltkriegs. Und viele Leute sehen das nicht, aber ich sehe es, und ich hatte in vielen Dingen recht.""""Schauen Sie sich die globalistischen Kriegstreiber an, die unsere Gegner unterstützen. Das liegt daran, dass sie Kandidaten für den Krieg sind. Ich bin der Präsident, der den Frieden bringt, und zwar Frieden durch Stärke. Es gab einen Grund, warum wir keine Konflikte hatten, es gab einen Grund, warum wir nicht in Kriege verwickelt wurden, weil andere Länder uns respektiert haben.""",reichsbuerger_adjacent
"Reichskanzler Otto von Bismarck formulierte einst die Grundsätze der deutschen Außenpolitik:„Gegen Russland führt man keinen Krieg. Immer wenn beide Länder zusammenstanden, ging es ganz Europa gut.“Frieden mit unseren russischen Brüdern und Schwestern 🤍",reichsbuerger_adjacent
"Themenkomplex ""Die Hülle""Manch einer ist einfach nur noch eine Hülle, die frisst, pisst und kackt , und ja, ehe ich es vergesse, meisten einfach nur noch Scheiße sabbelt....Da bekommt der Begriff ""Nutzlose Esser"" eine ganz neue wegweisende Bedeutung‼",reichsbuerger_adjacent
",,Das Wort „deutsch“ besagt „Atem Gottes”, „Leben Gottes”, „Geist Gottes”. Es ist die gleiche Bedeutung, welche das Zeichen od-il hat.""- - - Wortbedeutung DEUTSCHLAND - ,,Heiliges Land"" vermisst sein ,,Heiliges Volk""Von Benjamin F.Du siehst nicht zufällig das im Wort DEUtSchland das lateinische Wort für ,,Gott"" steckt, nämlich ,,DEUS"".in deus,...erklingt deutsch und dutch (niederländisch, germanisch peuda ->teut, daher Teutonen.  diutisc->Heidenvolk eigentlich: diutisc=diu (Gott+tisc (-tisch für gehörigwörtlich: ,,zum Gott gehörig"" sinngemäß: die Göttlichen""Nicht zufällig hat es den Wortstamm von ,,DEUTEN"" und ,,DEUTLICH"" in sich.Nicht zufällig sagen die Völker im Orient ,,Allemanja"" (,,Allah Männer"" zu unserem Land, das sich nicht zufällig auf so manchen Weltkarten exakt in der Mitte befindet.Nicht zufällig sagte der Christus angeblich: ,,Wenn ich wiederkomme werde ich erscheinen in Aschkenas..."" Aschkenas ist das althebräische Wort für Deutschland. ",reichsbuerger_adjacent
"Rechtsgutachten Nr. 6 des Ständigen Internationalen Gerichtshofs, 10. September 1923Der Völkerbundsrat hat am 03. Februar 1923 folgenden Beschluss gefasst: a eine Anzahl von Ansiedlern, die ehemals deutsche Reichsangehörige waren und jetzt auf polnischem, früher zu Deutschland gehörigem Gebiet wohnhaft sind, haben insbesondere auf Grund des Artikels 91 der Vertrages von Versailles die polnische Staatsangehörigkeit erworben. Sie besitzen ihre Güter auf Grund von Rentengutsverträge; obgleich diese Verträge mit der deutschen Ansiedlungskommission vor dem Waffenstillstand vom 11. November 1918 abgeschlossen worden waren, hatte eine Auflassung  vor diesem Tage nicht stattgefunden. Die polnische Regierung betrachtet sich auf Grund des Artikels 256 des Versailler Vertrages als rechtmäßige Eigentümerin dieser Güter und hält sich für berechtigt, die erwähnten Verträge zu annullieren. Infolgedessen haben die polnischen Behörden gewisse Maßnahmen gegen diese Ansiedler ergriffen, die ihre Vertreibung von den Gütern, die sie innehaben, zur Folge haben; b die polnischen Behörden wollen Pachtverträge nicht anerkennen, die vor dem 11. November zwischen der Deutschen Reichsregierung und deutschen Reichsangehörigen, die jetzt polnische Staatsangehörige geworden sind, abgeschlossen worden sind. Es sind diese Pachtverträge über deutsches Staatseigentum, die später auf Grund des Vertrages von Versailles, insbesondere gemäß Artikel 256, auf den Polnischen Staat übergegangen ist. Der Völkerbundrat ersucht den Ständigen Internationalen Gerichtshof, ein Rechtsgutachten über folgende Fragen abzugeben:1. Betreffen die unter a und b bezeichneten Punkte internationale Verpflichtungen der Art, wie sie in dem am 28. Juni 1919 in Versailles unterzeichneten Vertrag zwischen den Vereinigten Staaten von Amerika, dem Britischen Reich, Frankreich, Italien, Japan und Polen vorgesehen sind, und gehören sie gemäß diesem Vertrage zur Zuständigkeit des Völkerbundes?2. Für den Fall, dass die erste Frage bejaht wird, ersucht der Rat den Gerichtshof, ein Rechtsgutachten über die Fragen abzugeben, ob das ihm vorstehen unter a und b bezeichnete Verhaltene der Polnischen Regierung im Einklang mit ihren internationalen Verpflichtungen steht?… der Gerichtshof ist der Ansicht:dass die in a und b des Beschlusses des Völkerbundsrates vom 3. Februar 1923 erwähnten Punkte internationale Verpflichtungen von der Art betreffen, wie sie am 28. Juni 1919 in Versailles unterzeichnete Vertrag zwischen den Vereinigten Staaten von Amerika, dem Britischen Reich, Frankreich, Italien, Japan und Polen im Auge hat, und dass diese Punkte zur Zuständigkeit des Völkerbundes gehören, wie sie sich aus diesem Vertrage ergibt, das die unter a und b des erwähnten Beschlusses bezeichnete Haltung der Polnischen Regierung nicht im Einklang mit ihren internationalen Verpflichtungen steht …Loder                         A. HammarskjöldPräsident                     Sekretär  Die deutsche Minderheit hat immer wieder versucht, durch Anrufung der ihr durch internationale Verträge zu ihrem Schutz gegebenen internationalen Instanzen zu ihrem Recht zu kommen. Beim Völkerbund sind nicht weniger als 154 Beschwerden anhängig gemacht worden, die die Lage der deutschen Minderheit in Polen betreffen. Vor der gemischten Kommission für Oberschlesien wurden, abgesehen von den in die Tausende gehenden Beschwerden, die ohne Stellungnahme des Präsidenten erledigt wurden, 90 deutsche Beschwerden verhandelt, von den 75 als berechtigt anerkannt wurden. Quelle:Das zweite Weißbuch des Auswärtigen Amtes 1940🟥=",reichsbuerger_adjacent
SONDERSENDUNGPutin-Rede LIVE aus Moskau⏰10:00 UHR  Zeit Die Rede wird heute bei Telegram LIVE auf RTunz  eutscher Synchronisation gestreamt werden oder über Telegram-Web LIVE auf RTd Folge mir auf:Telegr  t[agramTip](ps im: Hil[febereich](,reichsbuerger_adjacent
"Themenkomplex ""Ich hab die Nase voll""Ein Lokführer eines S-Bahn-Zuges in Stuttgart äußert sich mit klaren Worten über den Schrott den er zu fahren hat. Der Mann hat einen dicken Hals – unüberhörbar. In einem Video auf Tiktok, das seit Sonntag mehr als 75 000-mal angeklickt wurde, ist eine Ansage in einer Stuttgarter S-Bahn zu hören. Der Zug beschleunige nicht mehr richtig, sagt die Stimme. „Das liegt daran, dass wir nur noch mit dem allerletzten Dreck herumfahren“, heißt es in der Brandrede des Lokführers. Einmal in Fahrt, beschwert sich der Mann darüber, dass „die neuen Fahrzeuge, die wir bekommen haben, einfach nur noch Schrott sind“.",reichsbuerger_adjacent
"Aus dem Memorandum des Britischen Premiers Lloyd Georg vom 25. März 1919… Die Aufrechterhaltung des Friedens wird davon abhängen, dass keine Ursachen zur Verzweiflung vorhanden sind, die dauend den Geist des Patriotismus, der Gerechtigkeit oder des „fair play“ aufstacheln. Unsere Bedingungen dürfen hart, sogar grausam und selbst erbarmungslos sein, um Genugtuung zu erlangen, aber gleichzeitig können sie so gerecht sein, dass das Land, dem sie auferlegt werden, in seinem Herzen fühlen wird, dass es kein Recht zur Klage hat. Aber Ungerechtigkeit und Anmaßung, ausgespielt in der Stunde des Triumphes, werden nie vergessen und vergeben werden.Aus diesen Gründen bin ich auf das schärfste dagegen, der deutschen Herrschaft zu entziehen, um sie einer anderen Nation zu unterstellen. Ich kann mir keine stärke Ursache für einen künftigen Krieg vorstellen, als dass das deutsche Volk, das sich zweifellos als eine der kraftvollsten und mächtigsten Rasse der Welt erwiesen hat, rings von einer Anzahl kleiner Staaten umgeben werden soll, von denen viele aus Völkern bestehen, die noch nie vorher eine stabile Regierung aufgestellt haben, aber jeder breiten Massen von Deutschen einschließt, die die Vereinigung mit ihrem Heimatland fordern. Der Vorschlag der polnischen Kommission, 2 100 000 Deutsche der Aufsicht eines Volkes von anderer Religion zu unterstellen, das noch niemals im Laufe seiner Geschichte die Fähigkeit zur stabilen Selbstregierung bewiesen hat, muss meiner Beurteilung nach früher oder später zu einem neuen Krieg in Osteuropa führen …Quelle:Das zweite Weißbuch des Auswärtigen Amtes 1940🟥=",reichsbuerger_adjacent
"Das Schanddiktat von Versailles.Heute kann man wohl sagen, „was wir verloren haben“. Das in der Grafik aufgezeigte ist nur ein Bruchteil von dem, was alles von uns geraubt und geplündert wurde.🟥=",reichsbuerger_adjacent
"üde und erschöpft beim Autofahren? Elektrosmog im Fahrzeug könnte die Ursache sein. Elektrosmog im eigenen Auto harmonisieren. Gesund und erholt aussteigen (EMFHolistische Gesundheit Heilung und AufklärungGuten Tag! Wir möchten Ihr Bewusstsein für die möglichen Gefahren des Autofahrens schärfen, die jedoch nicht auf die Art und Weise auftreten, wie Sie es vermutlich erwarten. Wir sprechen von den schädlichen elektromagnetischen Feldern, die in jedem Auto erzeugt werden, insbesondere in Elektro und Tesla-Autos. Jeder, der längere Strecken mit dem Auto, Bus oder der Bahn zurückgelegt hat, weiß, wie erschöpft man danach geistig und körperlich sein kann. Dieses Phänomen lässt sich besonders bei Kindern und Beifahrern beobachten, die oft schnell einschlafen.In einem Auto sind viele Kilometer an Kabeln verbaut, die beim Fahren elektromagnetische Felder erzeugen. Hinzu kommen die zahlreichen Technologien wie Bluetooth, GPS, Radiostrahlung und hochfrequente Strahlung, die das Problem noch verstärken. Ein Auto funktioniert wie ein sogenannter Faradayscher Käfig, was bedeutet, dass Insassen bei einem Gewitter am sichersten darin aufgehoben sind, da der Blitz durch die Abschirmung nicht ins Innere des Fahrzeugs gelangen kann. Leider verstärkt die Abschirmung jedoch auch die negativen Wellenmuster wie Bluetooth, GPS und hochfrequente Strahlung und kann dadurch dazu führen, dass man sich müde, erschöpft und unwohl fühlt.Hier kommt Memon ins Spiel: Hier wird eine Technologie zur Verfügung gestellt, mit der Sie diese Strahlungsfelder im Auto neutralisieren können. Die Memon Technologie erzeugt eine harmonische Gegenwelle, die alle negativen Informationsmuster im Auto harmonisiert. Diesbezüglich haben wir bereits einige Beiträge veröffentlicht, die im Detail erklären, wie diese Technologie funktioniert.Diese Technik ist einfach in ihrem Auto montierbar. Sie werden umgehend eine Verbesserung in Ihrem Wohlbefinden und bei Ihren Mitfahrern feststellen dürfen. Me at unserer Community einen exklusiven Gutscheincode zur Verfügung gestellt. Mit dem Code ""memoneffekt"" erhalten Sie einen Rabatt von 5% auf Ihre Bestellung bei Memon. Der Code ist einmalig anwendbar und gilt für alle Produkte.Me[monizerCar StartseiteMem](       o[nBroschüre Memon - Effe]([ktZweite Doppelblind-Studie](     MemonHolistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"5G - die unsichtbare Gefahr ein Video Vortrag über Elektromagnetische StrahlungHolistische Gesundheit Heilung und AufklärungIn diesem interessanten Vortrag spricht Doktor Karl Hartner über die unterschätzte Gefahr des Elektrosmogs. Er weist zunächst darauf hin, dass die zunehmende Anzahl von Elektrogeräten unser Umfeld verändert hat und dass der Elektrosmog, den sie erzeugen, vollkommen in der gesamten Menge unterschätzt wird.Doktor Hartner erläutert die verschiedenen Arten von elektromagnetischen Feldern und ihre unterschiedlichen Auswirkungen auf den menschlichen Körper. Zudem werden Studien erwähnt, die zeigen, dass Elektrosmog gesundheitliche Probleme wie Schlafstörungen, Kopfschmerzen und sogar Krebs verursachen können.Darüber hinaus betont der gute Mann, dass es nicht nur um die Strahlung von Handys geht, sondern auch um die Belastung durch WLAN-Netzwerke, Smart Homes und 5G-Netze. Im Vortrag wird darauf hingewiesen, dass die Grenzwerte für Elektrosmog möglicherweise nicht ausreichend sind, da sie auf veralteten Annahmen basieren.In dem Vortrag werden praktische Tipps geteilt, die helfen können, sich vor Elektrosmog zu schützen, wie zum Beispiel das Abschalten von WLAN-Netzwerken während der Nacht oder die Verwendung von speziellen Abschirmvorrichtungen.Insgesamt zeigt der Vortrag von Karl Hartner, dass Elektrosmog eine unterschätzte Gefahr darstellt und dass es wichtig ist, sich darüber bewusst zu sein und Maßnahmen zu ergreifen, um sich selbst und seine Familie zu schützen.You[Tube-LinkWi]([ssensbewahrung/AbsicherungU]([nsere Community wächst schnell und ist jetzt auch auf Instagram zu finden!H](                          WirkungHolistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Wea issn dös?Das Foto zeigt den ehemaligen RAF-Sympathisanten F.-W. Steinmeier in jüngeren Jahren. Er dürfte, seinem Verhalten nach zu urteilen, geistesgestört sein.Wie lange noch kann es einem Land auf Dauer gutgehen, wenn es solche Typen als Repräsentanten hat?Seine politische Einstellung in der Vergangenheit erklärt im nachhinein seine unsägliche Entgleisung, die in der verbalen Adelung der wegen mehrfachen Mordes verurteilten RAF-Terroristin Gudrun Ensslin zu sehen ist. Sie wurde vom Bunzelpräser in einem ehrlichen Moment der Geschwätzigkeit als ""Große Frauenpersönlichkeit des 20. Jahrhunderts"" gewürdigt.Damit hat der irre Sozi allen anständigen und nicht-mordenden Frauen ins Gesicht geschlagen.RAF-Sympathisant Steinmeier war auch Mitglied bei den ""Sozialistischen Juristen"" sowie Redakteur beim links-orthodoxen Pahl-Rugenstein-Verlag, der vom Verfassungsschmutz beobachtet und maßgeblich von der DDR finanziert worden ist.",reichsbuerger_adjacent
"EISENACH MONTAGSSPAZIERGANG AM 20. FEBRUAR 2023Bürgerprotest wie jeden Montag in Eisenach! Wir bleiben bei unseren Forderungen, die Waffenlieferungen zu beenden und Diplomaten zu entsenden. Unsere Regierung wird uns ansonsten immer tiefer in diesen Stellvertreterkrieg verwickeln. Erst liefern sie Helme, dann Gewehre, Panzer und Flugzeuge. Demnächst schicken sie unsere Söhne und Töchter in den Krieg. MACHT FRIEDEN! Es ist an der Zeit!Danke an jeden, der Gesicht zeigt. Wir sehen uns nächsten Montag oder schon Samstag 14:00 Uhr zur Mahnwache für Frieden auf dem Markt.Folgt uns  ",reichsbuerger_adjacent
"Themenkomplex Versailler VertragWas der Versailler Friedensvertrag heute für uns bedeutetEin Artikel aus dem Handelsblatt von 2019 der bestätigt, das mit dem Versailler Vertrag der Grundstein zur NWO gelegt wurde.Teil IIIWährend Leonhard kein eindeutiges Gesamturteil fällt, ist das Versailler Vertragswerk aus Conzes Sicht gescheitert, weil es „den Hass und die Gegensätze des Krieges weiter geschürt hat“. Auch Wilsons Völkerbund wurde ein Reinfall. Der Bund, resümiert der Historiker Eberhard Kolb in seiner komprimierten Übersicht „Der Frieden von Versailles“, entpuppte sich rasch „als schwaches und problematisches Gebilde“, das „nur noch ein Schattendasein führte“.Selbst im eigenen Land stand Wilson auf verlorenem Posten. Die USA wurden nie Mitglied des Völkerbunds, heute attackieren sie dessen Nachfolger, die Vereinten Nationen. War Wilson nach seiner Ankunft in Frankreich wie ein Messias bejubelt worden, feierte ihn bei seiner Abreise kaum einer mehr.",reichsbuerger_adjacent
"Themenkomplex Versailler VertragWas der Versailler Friedensvertrag heute für uns bedeutetEin Artikel aus dem Handelsblatt von 2019 der bestätigt, das mit dem Versailler Vertrag der Grundstein zur NWO gelegt wurde.Teil IINahost: Verpasster FriedeVor allem aber die Konflikte im Nahen und Mittleren Osten sind ohne die Pariser Friedensgespräche vor 100 Jahren kaum denkbar. Briten und Franzosen hatten die Araber im Krieg zum Aufstand gegen die osmanische Besatzung aufgerufen und ihnen versichert, man strebe in der Region „die Errichtung nationaler Regierungen an, die ihre Autorität aus der selbstständigen und freien Wahl der eingeborenen Bevölkerung herleiten“.Darauf berief sich in Paris der arabische Delegationsführer, der Emir Faisal. „Die Alliierten versprachen der arabischen Nation ihre Freiheit und Unabhängigkeit am Ende des Krieges. Nun, da sie siegreich aus dem Krieg hervorgegangen sind, ist es notwendig, dass sie sich an ihre Versprechen halten.“Doch die Hoffnung auf einen unabhängigen Staat trog. Briten und Franzosen teilten das arabische Erbe der Osmanen zwischen sich auf: Paris erhielt das Völkerbundmandat für Syrien und den Libanon. London das Mandat für den späteren Irak samt seinen erdölreichen Quellen im kurdischen Norden und das Gebiet östlich des Jordans.Während Leonhard in seinem Buch im Mandatssystem den „ersten Schritt in Richtung internationaler Kontrolle von Kolonialherrschaft“ sieht, spricht der Marburger Historiker Conze von einer bloßen Verteilung der „Kriegsbeute“. Im Zeichen von Wilsons Selbstbestimmungsrhetorik erreichten die britischen und französischen Kolonialreiche nach dem Ersten Weltkrieg jedenfalls ihre maximale Ausdehnung.Die Großmächte hatten ihre Versprechen gebrochen. Das setzte die Region schon damals in Flammen. Nachdem die Araber im März 1920 ein eigenes großsyrisches Reich ausgerufen hatten, schlugen Briten und Franzosen die Unabhängigkeitsbewegung brutal nieder und setzten Luftangriffe ein. Der Rhythmus von Revolte und Repression im Kampf um staatliche Selbstbestimmung bildete nun das Leitmotiv der nächsten Jahrzehnte.Dass die westlichen Großmächte nur ihre eigenen ökonomischen und geostrategischen Interessen verfolgten, ist aus einem weiteren Grund fatal: Faisal und Chaim Weizmann, Chef der zionistischen Delegation in Paris, hatten nämlich vor Beginn der Konferenz vereinbart, dass in Palästina ein unabhängiger jüdischer Staat entstehen solle – vorausgesetzt, auch die Araber erhielten einen eigenen Staat. Hätten die Großmächte diese historische Chance genutzt, wäre es womöglich nie zum heutigen Nahost-Konflikt mit seinen Kriegen und Spannungen zwischen Juden und Arabern gekommen.Europa: Neue Konflikte im OstenAnders als im Nahen und Mittleren Osten oder in China traten die Großmächte in Ost- und Südosteuropa nicht als Treiber, sondern als Getriebene auf. Schon vor und während der Friedenskonferenz hatte sich die Auflösung der Vielvölkerreiche in teilweise bewaffneten Auseinandersetzungen um territoriale Neuordnungen und Grenzen entladen – so etwa in Polen und der Ukraine.Nach dem Ende des Ersten Weltkriegs kostete das nochmals Hunderttausenden Menschen das Leben, schreiben Leonhard und Conze. Sie erhellen, wie in den neu gegründeten Staaten im Osten Europas sofort wieder ethnische Konflikte hochkochten. Minderheiten wurden unterdrückt, ganze Bevölkerungsgruppen als „Ausländer“ und „Verräter“ verfolgt.So sinnvoll Wilsons Forderung nach staatlicher Selbstbestimmung in anderen Teilen der Welt gewesen sein mag – in Ost- und Südosteuropa schien sie den Nationalismus erst richtig zu entfachen. Autoritäre rechte Bewegungen unterhöhlten die jungen Demokratien.Am Vorabend des Zweiten Weltkriegs war einzig die Tschechoslowakei noch eine demokratische Republik nach westlichem Vorbild. Bis heute haben es Minderheiten in Ost- und Südosteuropa schwer. Der Zerfall Ex-Jugoslawiens in den Neunzigern, aber auch die aktuellen rechtspopulistischen Tendenzen in den Parlamenten Polens, Ungarns oder Tschechiens und der Slowakei legen davon Zeugnis ab.",reichsbuerger_adjacent
"Themenkomplex Versailler VertragWas der Versailler Friedensvertrag heute für uns bedeutetEin Artikel aus dem Handelsblatt von 2019 der bestätigt, das mit dem Versailler Vertrag der Grundstein zur NWO gelegt wurde.Teil IVor 100 Jahren schuf die Pariser Friedenskonferenz eine neue globale Ordnung. Die Folgen sind bis heute sichtbar – vor allem im Nahen Osten.Landkarten und ihre Grenzen sagen oft mehr über diejenigen aus, die sie erstellt haben, als über die Welt, die sie beschreiben wollen. Und nur selten sind so viele Grenzen auf dem Globus neu gezogen worden, wie während der Pariser Friedenskonferenz vor 100 Jahren.Dabei ging es bei dem Treffen, dessen wichtigstes Resultat der Friedensvertrag von Versailles war, nicht immer redlich zu: Karten wurden gefälscht, genauso wie Bevölkerungsstatistiken.Australien etwa beanspruchte Neuguinea mithilfe manipulierter Landkarten für sich, auf denen die Insel viel zu nahe an dem Kontinent lag. Ein britischer Diplomat notierte damals: „Ein quälendes Geschäft. Wie fragwürdig kommt man sich dabei vor! Eine Karte, ein Bleistift, Pauspapier. Der Mut sinkt mir, wenn ich an die Menschen denke, die unsere schwankenden Linien einschließen oder ausschließen.“Hinzu kam, dass die Repräsentanten der drei großen Siegermächte des Ersten Weltkriegs – US-Präsident Woodrow Wilson, Englands Premier David Lloyd George und Frankreichs Regierungschef Georges Clemenceau – die Masse der Zahlen, Grenzen und Siedlungsdetails schlichtweg nicht überblicken konnten. In der Schlacht der Karten ging es um nichts Geringeres als die Neuordnung der Welt.Die Friedenskonferenz von Paris war so etwas wie das erste politische Großspektakel neuerer Zeit. Mehr als 10.000 Menschen – darunter Staats- und Regierungschefs und Gesandte aus insgesamt 32 Ländern – versammelten sich ab dem 18. Januar 1919 in Frankreichs Hauptstadt, um die Welt nach dem Ersten Weltkrieg neu zu vermessen. Entsprechend groß waren die Hoffnungen, die sich an die internationale Megakonferenz knüpften.Ostasien: „Betrug“ von VersaillesWenn Chinas Staatschef Xi Jinping heute gegenüber dem Westen mit demonstrativem Selbstbewusstsein auftritt, dann kompensiert er damit auch ein wenig Pekings Demütigung in Versailles. In ihren Büchern „Die große Illusion“ und „Der überforderte Frieden“ zeigen die Historiker Eckart Conze und Jörn Leonhard, wie inständig Peking nach dem Ersten Weltkrieg die Rückgabe Kiautschous auf der Halbinsel Shandong forderte.Im Friedensvertrag ging das einstige deutsche Pachtgebiet jedoch nicht zurück an China, sondern wurde unter japanisches Protektorat gestellt. Japan hatte die Halbinsel nach der Kriegserklärung an Berlin im August 1914 besetzt.Der Deal war bei den Friedensgesprächen eine Randnotiz gewesen, schnitt aber tiefe Wunden in die chinesische Seele, die bis heute nicht vollständig verheilt sind. So hatten die „großen drei“ – USA, Großbritannien und Frankreich – Japans Forderung abgelehnt, die „Gleichberechtigung aller Rassen“ in die Völkerbundakte aufzunehmen. Als Trostpflaster erhielt Tokio schließlich das umstrittene Territorium am Unterlauf des Gelben Flusses.Alle Hinweise der Chinesen, es gehe um den Geburtsort von Konfuzius, fruchteten nicht. Erst 1922 ging die Provinz, die heute eine der reichsten Chinas ist, zurück an Peking. Für die Chinesen „markierte der ,Betrug von Versailles‘ eine Zäsur und den Beginn eines neuen nationalen Narrativs“, bilanziert Leonhard. Nicht zuletzt wegen der Friedenskonferenz hätten westliche Werte bis heute in China einen schlechten Ruf, so der Autor.",reichsbuerger_adjacent
Themenkomplex Sie sagen es uns durch FilmeBeim ZDF wird schon interessantes gesendet....  ,reichsbuerger_adjacent
"Heinrich auf Tour, bald auch in deiner StadtAm Samstag den 25.03.2023 ist Heinrich 80 Km nördlich von Hamburg auf Vortragstour. Der genaue Veranstaltungsort sowie die genaue Uhrzeit (Nachmittags wird noch bekannt gegeben.Die Veranstaltung ist wie alle Veranstaltungen von mir Eintrittsfrei, damit ein Jeder an dieser Veranstaltung teilnehmen kann.Für Speisen und Getränke Vorort ist gesorgt, diese müssen aber von jedem selbst getragen werden.Die Räumlichkeiten fassen 80 Gäste und darum ist eine frühzeitige Anmeldung empfehlenswert. Angemeldet werden kann sich ausschließlich über die folgende E-Mailadresse.‼Wichtig‼Gebt dazu bitte euren Namen und die Anzahl der Teilnehmer an.vortragHH@web.de",reichsbuerger_adjacent
"Heinrich auf TourAm Samstag den 25.03.2023 ist Heinrich 80 Km nördlich von Hamburg auf Vortragstour. Der genaue Veranstaltungsort sowie die genaue Uhrzeit wird noch bekannt gegeben.Die Veranstaltung ist wie alle Veranstaltungen von mir Eintrittsfrei, damit ein Jeder an dieser Veranstaltung teilnehmen kann.Für Speisen und Getränke Vorort ist gesorgt, diese müssen aber von jedem selbst getragen werden.Die Räumlichkeiten fassen 80 Gäste und darum ist eine frühzeitige Anmeldung empfehlenswert. Angemeldet werden kann sich ausschließlich über die folgende E-Mailadresse.‼Wichtig‼Gebt dazu bitte euren Namen und die Anzahl der Teilnehmer an.vortragHH@web.de",reichsbuerger_adjacent
Zitat der Woche,reichsbuerger_adjacent
"Telefonstreich mit der ehemaligen Bundeskanzlerin Angela MerkelSie wurde mit Margaret Thatcher, der «Eisernen Lady», verglichen. Sie wurde als Matriarchin der europäischen Politik bezeichnet. Sie wurde verdächtigt, die Verbindung zum Kreml zu haben… und sie wurde Opfer eines falschen Poroschenko.Merkel und «Poroschenko» diskutierten über Macron, Biden und Scholz. Merkel bestätigte, dass das Minsker Abkommen von Anfang an nur Zeit schinden sollte, damit die Ukraine bewaffnet wird. Die Ex-Kanzlerin erzählte, wie sich der Westen verbündet, um weiter Waffen an die Ukraine zu liefern. Sie berichtete auch über das weißrussische «Drama» und ihr endgültiges Aufgeben der russischen Sprache.Warum ist es schlecht, die Weltkriegs-Reparationen Polen zu zahlen, im Unterschied dazu, den Maidan in Weißrussland zu unterstützen? Und warum ist es schade, dass dieser Maidan scheiterte? Das könnt ihr nirgendwo außer unserem neuen Telefonstreich mit Angela Merkel hören! Neu             ",reichsbuerger_adjacent
HEUTE IST WIEDER MONTAG ... Folgt uns  ,reichsbuerger_adjacent
eutschland ist kein Jod armes Land? Endlich wieder durchschlafen? Wieder intensive Träume erleben? Lange und glücklich Leben? Diese Audio dient lediglich zu Informationszwecken. Es werden keine Heilempfehlungen gemacht.[Hier erhalten Sie weitere Informationen über das Themenfeld Jod!W](              agram,reichsbuerger_adjacent
"Vorsicht - Jod ist gefährlich !!Holistische Gesundheit Heilung und AufklärungLiebe Community, in der Vergangenheit haben wir uns intensiv mit dem Thema Jodmangel in der deutschen Bevölkerung auseinandergesetzt. In einer ausführlichen Aufklärungsreihe haben wir Ihnen verdeutlicht, wie wichtig Jod für die ganzheitliche Gesundheit jedes Einzelnen sein kann.In diesem Videovortrag sind unsere Kollegen von Karmananda ganzheitlich sehr verständlich auf dieses Thema eingegangen. Schauen Sie gerne rein!Videobeschreibung: Wir leben in einer stillen Epidemie des Jodmangels. In diesem Beitrag sagt der Arzt Karl Hartner ein paar Worte zu diesem Thema.You[Tube-LinkWi]([ssensbewahrung/AbsicherungW]([erte Community wir sind nun auf Instagram](              Jod!Ihre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"ntdeckt unsere Instagram-Seite und werdet Teil unserer weiter wachsenden Community!Liebe Kanalbesucher,Besuchen Sie bei uns auf Instagram, um vielfältigeren Content zu entdecken und immer auf dem Laufenden zu sein! Freuen Sie sich auf neue Einblicke in unsere Arbeit. Wir freuen uns, Sie zusätzlich auf Instagram begrüßen zu dürfen![sere Community wächst schnell und ist jetzt auch auf Instagram zu finden!Ih](           re Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Weil es so erstaunlich viele Schwätzer gibt, die immer über andere Personen schimpfen: 2 Minuten Weisheit: Sokrates und die drei Siebe(Folgt mir auf Telegram: ",reichsbuerger_adjacent
"‼Keine Gnade für ""Reichsbürger"" : Alabas Schwiegervater seit 74 Tagen in U-Haft‼Vor 74 Tagen ging der größte Antiterror-Einsatz der deutschen Kriminalgeschichte über die Bühne. 5000 Polizisten stoppten die mutmaßlichen Pläne von Promi-Koch Frank Heppner (62 und Prinz Heinrich XIII. Reuß (71, das Land zu übernehmen. Seither sitzen sie in Haft.Der Schwiegervater von David Alaba, Frank Heppner, soll gemeinsam mit weiteren Reichsbürgern den Umsturz in Deutschland geplant haben. In Kitzbühel klickten die Handschellen, es folgte eine Auslieferung nach Deutschland. Am 7. Dezember des Vorjahrs flog die gesamte Bande auf 55 mutmaßliche Reichsbürger sitzen seither in Haft.58.000 Kinderporno-Dateien – 0 Tage UntersuchungshaftObwohl Heppner über einen festen Wohnsitz verfügt – und es sehr zweifelhaft erscheint, dass ihm aktuell der Putsch in Deutschland gelingen würde, bleibt der Promi-Koch weiter in Haft.Keine einzige Minute im Gefängnis verbrachte unterdessen Florian Teichtmeister (43. Obwohl der TV-Kommissar und Burgtheater-Star 58.000 Bilder sexuell missbrauchter Kinder sammelte wurde über ihn keine Untersuchungshaft verhängt. Brisant auch: Zuvor hatte die Justiz das Ermittlungsverfahren gegen den linkslastigen Promi wegen des Besitzes von mehr als 100 Gramm Kokain eingestellt. Zur Einordnung sei erwähnt, dass Süchtige mit dieser gewaltigen Menge länger als 3142 Tage auskommen würden. Für die Ermittler im Fall Teichtmeister war das allerdings nur Eigenbedarf!......Quelle↕↕↕ Folgt uns auf Telegram/HauptkanalChat-Kanal",reichsbuerger_adjacent
"Themenkomplex wichtige Telegram-DiskussionenAuf Telegram wird sehr sehr viel diskutiert. Ganz entzückend finde ich immer Diskussionen über Sachverhalte, auf die kein Mensch Einfluss hat. Zum Beispiel die Diskussion über den Themenkomplex ""Warum ist die Banane krumm"". Bei all diesen Diskussionen um die Banane wird von den diskutierenden meist das wesentliche vergessen, nämlich einfach mal eine Banane zu essen, spätestens dann verläuft sich nämlich die Diskussion über die Form einer Banane komplett ins Nichts. Der Zweck einer Banane in menschlicher Nähe ist nicht, das sie als Diskussionsgrundlage dient und verdirbt, sie will gegessen werden, eigens dafür wurde sie auch mal gepflückt. Und nun übertragt das ganze mal auf die Diskussion ""Flache Erde vs Kugel Erde"".Ich glaube der Zweck der Erde ist jener, das wir auf ihr gut miteinander leben doch das scheinen wir irgendwie aus dem Focus verloren zu haben.....",reichsbuerger_adjacent
"""Heimatkunde-Tour""  18. - 19.03.2023in Baden-WürttembergEinlass 12.00 UhrBeginn 14.00 Uhrca. 20 Kilometer nördlichvon PforzheimAnmeldung unter: CHL-17@gmx.de",reichsbuerger_adjacent
"Die Geschichte wiederholt sichIn Moskau ist eine ungewöhnliche Installation mit dem Titel ""Geschichte wiederholt sich immer"" und dem Datum 21. Februar 2023 erschienen... ist das Datum, an dem der russische Präsident Wladimir Putin seine Rede vor der Bundesversammlung halten wird.В Москве появилась необычная инсталляция ""История всегда повторяется"" и дата 21 февраля 2023 года... именно в этот день президент России Владимир Путин обратится с посланием к Федеральному собранию.Из[первых уст - подписаться@d](    er17stammtisch ",reichsbuerger_adjacent
"DENKanstoß - Das aktuelle Weltgeschehen 02/23 - mit Peter Denk & Manuel C. MittasThemen und Infos zum DENKanstoß am 12.4 in Wien mit Peter Denk, Swami Madhava & Manuel C Mittas:Mehr zu Peter Denk: Mehr zu Manuel Mittas: Mit Ihrer freiwilligen Zuwendung unterstützen Sie unsere Freie- und zu 100% unabhängige Medienarbeit!",reichsbuerger_adjacent
"QAnon: Ein Geheimprojekt der NSA?19. Februar 2023Vor über 5 Jahren haben Insider unter dem Pseudonym „Q“ die ersten Posts auf der Hacker-Plattform 4chan geteilt und damit ein Erwachen angestoßen, welches sich wie ein Lauffeuer um den Globus verbreitet. Doch wer steckt hinter Q? Eine Reise in den Kaninchenbau zeigt, dass uns die Insider selbst zahlreiche Hinweise gegeben haben.@LIONMediaTV",reichsbuerger_adjacent
"Themenkomplex Deutsches ReichWarum wird Bismarck weggebaerbockt? - Dr. Götz Frömming, AfDInteressanter Vortrag eines AfD-Politiker.Achtung, wer jetzt denkt ich bin ein Freund von Parteien per se, der irrt. Ich poste es um mal feststellen zu können, wer wie was auf dem Schirm hat. ",reichsbuerger_adjacent
"Sprengung des Nord-Stream Pipelines USA ein TerrorstaatModerator: Kommentieren Sie bitte die Aussage des amerikanischen Journalisten Seymour Hersh, der US-Behörden vorwarf, die Explosion an der Gaspipeline «Nord Stream» verursacht zu haben. Seiner Meinung nach haben die Vereinigten Staaten die Explosion bereits vor Beginn der militärischen Spezialoperation geplant, und zwar im Dezember 2021.Valeriy Pyakin:  ""Nicht einfach geplant, sondern die Sache war bereits beschlossen. Danach hat es 9 Monate gedauert, bis Biden die endgültige Entscheidung getroffen hat. Diese lange Zeit war nötig, um Biden zu überzeugen, weil es ihm wichtig war, die Spuren zu verwischen. Warum war das für Biden so wichtig? Weil er gesehen hat, dass Russland voller Entschlossenheit ist. Erinnern Sie sich bitte an den Dezember 2021, als wir dem Westen ein Ultimatum gestellt haben. Russland agiert aktiv. ...""Hi    Unsere Ressourcen auf Telegram:FK   F[KT - Podcast](      n  Abonnie FKT",reichsbuerger_adjacent
Die Aufzeichnung des Livestreams vom 19.02.2023 auf Odysee finden Sie hier ,reichsbuerger_adjacent
"Künstliche Intelligenz erkennt anhand der Stimme Corona-Infektion.Forscher liessen eine Künstliche Intelligenz (KI YouTube-Audiodateien auswerten. In den meisten Fällen konnte die KI feststellen, ob die Nutzer mit Omikron infiziert waren. Langfristig hofft das Team jedoch auf schnelle, kostengünstige KI-Lösungen, um anhand von Social-Media-Inhalten die Entwicklung von Infektionstrends besser verfolgen zu können. Un Sollte die Genauigkeit der Modelle weiter verbessert werden, könnten sie künftig eine Alternative zu physischen Schnelltests bieten.Die Geschichte hat leider gezeigt, dass kaum ein Unsinn zu absurd ist, um ernst genommen zu werden. Und dass bei vielen technischen Neuerungen schlimme Befürchtungen wahr geworden sind. Nehmen wir nur den PCR-Test. Der nach Ansicht seines Erfinders nie geeignet war, Infektionen nachzuweisen. Und ohne den nach Ansicht von namhaften Experten Corona als besonders heftige Grippewelle in die Geschichte eingegangen wäre – ohne „Massnahmen“.   ",reichsbuerger_adjacent
"alvanischer Strom: Die natürliche Methode zur Behandlung von Entzündungen. Alte verschwiegene Wissenschaft?Holistische Gesundheit Heilung und AufklärungDie Begeisterung für dieses Gerät basiert auf der soliden wissenschaftlichen Grundlage der elektro-galvanischen Heilkunde und ihrer bewährten Wirksamkeit bei der Behandlung von Schadstoffablagerungen und Entzündungen im Körper. Zahlreiche Forschungsberichte belegen, dass elektrische Vorgänge eine zentrale Rolle in den Lebensprozessen von Pflanzen, Tieren und Menschen spielen. Das Galvanische Wechselstromgerät nutzt diese Erkenntnisse, um das körpereigene elektrische Potential zu erhöhen und damit die Gesundheit und Leistungsfähigkeit zu verbessern. Seine Anwendung ermöglicht es, ""niederschwellige Entzündungen"" zu behandeln und den Organismus in Richtung seiner ursprünglichen evolutionären Ordnung zu führen.Das Galvanische Wechselstromgerät hat sich in zahlreichen Studien als äußerst effektiv erwiesen. Eine Metaanalyse von 15 randomisierten kontrollierten Studien ergab, dass die Anwendung galvanischer Ströme die Schmerzen bei rheumatoider Arthritis signifikant reduzieren kann (Quelle: Journal of Clinical Medicine. Eine andere Studie kam zu dem Ergebnis, dass die Verwendung von galvanischem Strom bei der Behandlung von akuten Knöchelverstauchungen die Schmerzen lindert und die Funktion des betroffenen Gelenks verbessert (Quelle: European Journal of Physical and Rehabilitation Medicine.Das Galvanische Wechselstromgerät erweist sich als äußerst nutzerfreundlich und stellt eine vertrauenswürdige, natürliche Alternative zu herkömmlichen, schmerzlindernden Medikamenten dar. Es handelt sich hierbei um eine nicht-invasive Methode, welche in der Regel keine Schmerzen oder unerwünschten Nebenwirkungen verursacht. Des Weiteren kann das Gerät von Menschen jedes Alters problemlos bedient werden. Falls Sie eine natürliche und wirkungsvolle Methode zur Behandlung von Schmerzen und Entzündungen suchen, kann das Galvanische Wechselstromgerät eine mögliche Lösung sein, nach der Sie gesucht haben.Hie[r haben Sie eine ausführliche PDF über die Riesenvorteile des Galvanischen Feinstroms.🩻Hi](             [m-GerätWerte Community wir sind nun au](        f InstagramUnsere Community aus unserem Kanal bekommt einen Nachlass von 10 Prozent, wenn Sie den Code: ""Sunnytime"" beim Erwerb eingeben.Ihre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Themenkomplex Dualismus Welle/KorpuskelEs heißt ja in der spirituellen Szene, das die Gedanken Dinge manifestieren können, das die Frequenzen der Gedanken Einfluss auf das Materielle haben. Meine Wenigkeit als Jemand der zwischen verschieden Welten wandern kann, also zwischen der spirituellen Welt und der reinen physischen auf Wissenschaft basierenden Welt sage, das diese Annahme nicht nur eine Annahme ist, sondern das sie ein Fakt ist und ich führe dazu den Beweis aus der physikalischen Welt an, den eigentlich ein jeder kennt.Klangmuster, das Ergebnis des Einfluss von Frequenzen auf die Anordnung von Materie. Diese Klangmuster machen eigentlich den Dualismus Welle/Korpuskel der für die Eigenschaften des Lichtes gilt, optisch sichtbar, und zwar auf viel tieferen Frequenzen als die des Lichtes. Mein Weltbild ist eine gesunde Mischung, es gibt nicht nur das Physikalische oder das Spirituelle, beide bedingen einander und gehen eine harmonische Co-Existenz ein, sie befruchten sich Gegenseitig.",reichsbuerger_adjacent
"Eine deutsche Frau & Hannes""Germanias Kliff"" YOU TUBE :",reichsbuerger_adjacent
"Wie ich es auch schon immer gesagt habe, gut und vernünftig gehen tut man mit dem linken und dem rechten Bein, Einbeinige haben bei einem Sprint deutlich das Nachsehen. Man kann Herrn Niemeyer ja vieles nachsagen, eines aber nicht, er verdammt als Linker nicht die Rechten, im Gegenteil, er redet mit Ihnen und tauscht sich mit ihnen auch aus, nimmt auch deren Argumente an sofern sie für ihn plausibel sind und korrigiert dann seinen ursprünglichen Kurs genau um den angenommen Einfluss aus der anderen Richtung. Das nennt man Konsens und dieser basiert immer auf der Logik, dass das Bessere des Guten Feind ist.",reichsbuerger_adjacent
Es gibt kein Links oder Rechts in Fragen wie Krieg und Frieden oder der Grundrechte.,reichsbuerger_adjacent
"""Der Arzt der Zukunft"" Ralph Waldo Trine (1866 - 1958""Die Zeit wird kommen, wo die Tätigkeit des Arztes nicht darin bestehen wird, den Körper zu behandeln, sondern den Geist zu heilen, der dann seinerseits den Körper heilen wird.Mit anderen Worten:Der echte Arzt wird Philosoph und Lehrer sein, mit seine Sorge wird es sein, den Menschen gesund zu erhalten und nicht erst, wenn er krank geworden ist, seine Heilung zu versuchen.Der wahre Arzt wird nicht nur den Körper mit Medizin, sondern vielmehr den Geist mit Grundsätzen behandeln.Er wird die Menschen lehren, dass Frohsinn, Wohlwollen, edle Taten, Liebe, Güte auf den Körper ebenso wohltuend wirken, wie auf den Geist und dass ein frohes Herz die beste Arznei ist......und noch später wird eine Zeit kommen, wo jeder sein eigener Arzt ist, je mehr er mit den höheren Gesetzen des Lebens Übereinstimmung findet und die Kräfte seines Geistes nutzt.""Waldo Trine, um 1900, ""Der Arzt der Zukunft""  ",reichsbuerger_adjacent
"Aus aktuellem AnlassFür alle Vollidioten, insbesondere dem Oberdeppen, dem Kanalbetreiber des Kanals ""Deutschland/DeutschesReich/Vaterland"" einmal eine kleine Erinnerung, wie sich das so mit dem Commander Pansen, dem Master auf SHAEF verhielt. Jeder der den Aussagen des Kanals ""Deutschland/DeutschesReich/Vaterland"" glauben schenkt, sollte für sich das Attribut ""Aufgewacht"" nicht in Anspruch nehmen denn es stellt definitiv die höchste Form von Selbstüberschätzung dar. ",reichsbuerger_adjacent
"ie Zirbeldrüse ist das wohl mächtigste und faszinierendste Organ des MenschenHolistische Gesundheit Heilung und AufklärungZwar erscheint die kleine Drüse im ersten Moment weit weniger bedeutungsvoll, als sie tatsächlich ist, zweifelsfrei wird sie jedoch seit Jahrtausenden von verschiedensten Kulturen rund um die Welt verehrt.Mittlerweile wurde auch ihre außergewöhnliche Bedeutung für unsere körperliche, geistige und spirituelle Gesundheit anerkannt. Wie schaffen wir es also, unser drittes Auge zu öffnen? Im heutigen Beitrag haben wir kurz zusammengefasst, welche Schritte notwendig sind, damit auch Sie ihre Zirbeldrüse aktivieren können. L[ink zum weiterlesen. Swipe durch die Bilder und lasse uns gern ein Like und/oder Kommentar da.Fü](               r mehr wichtige Infos Besuchen Sie uns auf der Holistischen Gesundheit Heilung und Aufklärung.",reichsbuerger_adjacent
"geht`s los ? Folge 484 -Version                                                                                                                                                                                                                                                  Themen:- Markus der Rosenkavalier ?- Drogenprobleme in Brüssel ?- POLIZEI in Bedrängnis ?- Jeder gegen Jeden in der Ampel ?- Ungarn, Warnung vor Farbrevolution ?- Biden bei bester Gesundheit ? Ihr findet uns auf: - S YouTube- S Rumble -   - D[Live—](———————————Telegramm Hauptkanal:  Chat:        ———————————Wir schenken Euch gern unsere Zeit, da schenken Freude bereitet.Möchtet Ihr uns etwas zurückschenken, dann geht das hier:SC-360Media DE72370190001010241200BUNQDE82XXXoder",reichsbuerger_adjacent
"Deutschland in Farbe (nachträglich ""coloriert, in den 1930er Jahren vor dem KriegBremen, Berlin, Potsdam, Danzig, Königsberg, Oberammergau, München u.a.Mehr auf    ",reichsbuerger_adjacent
"HERZMENSCH Alle Menschen sind wertvoll, doch einige denken auch noch an andere!Folgt uns auf: t.me/freiesth",reichsbuerger_adjacent
"Themenkomplex FalschlenkerNeulich hatte ich ja schon mal was über diesen ominösen Kanal mit seiner Blacklist gezeigt.Der Kanalbetreiber ist in meinen Augen ein gescheiterter Volldepp, dem bedingt durch zu heftigen Zusammenprall mit dem Exekutiv-Organen der BRD empfohlen wurde, den Störsender zu spielen, anders sind mir seine Aktivitäten nicht mehr zu erklären. Wie dem auch sei, er ist ein Volldepp aber er kommt zu spät und wer zu spät kommt, den bestraft das Leben 🤣Q",reichsbuerger_adjacent
"Themenkomplex AffenbabysMan muss nicht alles kommentieren, vieles spricht für sich selbst.....🤣",reichsbuerger_adjacent
"Für diejenigen, die durch meine jüngsten Beiträge verwirrt sinMir ist aufgefallen, dass der Zug aus Ostpalästina DIREKT über 2 Abflussrohre (gelbe Quadrate entgleist ist. Dann fiel mir auf, dass der orangefarbene Wagen (rotes Rechteck im Vergleich zu den Wagen um ihn herum deplatziert war.Jemand hat den orangefarbenen Waggon, der giftige Chemikalien enthielt, vorsätzlich in den Abflusskanal gestellt und gekippt, der in den Ohio River mündet.Mit anderen Worten: Dies war ein terroristischer Akt. Und das ist ein verdammt guter Beweis.@QWWG1WGA16PLUS1",reichsbuerger_adjacent
"Themenkomplex SpaltpilzSchauen sie genau hin, hier sehen das Antlitz des ""Politikwissenschaftler"" Varwick. Dieser sogenannte Wissenschaftler in Sachen Politik outet sich gerade als Spaltpilz, als Jemand der die Demokratie verachtet und eine Diktatur von Links bevorzugt. In einer Demokratie, so jedenfalls habe ich es mal in der Schule gelernt, wirken alle politischen Lager mit, solange sie sich auf dem Boden und im Rahmen der freiheitlichen Grundordnung bewegen. Varwick sieht das anders, er zieht seine Unterstützerunterschrift zu der Veranstaltung von Frau Wagenknecht und Frau Schwarzer zurück, weil diese sich nicht ausreichend von Rechts abgrenzen.Frieden scheint eben das Monopol der Linken zu sein, die Rechten haben da nichts zu suchen.Man erinnere sich:Auch Hitler war ein Sozialist....   ",reichsbuerger_adjacent
"""Heimatkunde-Tour""  18. - 19.03.2023in Baden-WürttembergBeginn 11.00 Uhrca. 20 Kilometer nördlichvon PforzheimAnmeldung unter: CHL-17@gmx.de",reichsbuerger_adjacent
"""geht`s los ?"" und Freunde auf ""Heimatkunde"" Tour in Sachsen 22.01.2023 -Version Heinrich Göttsche ""Leben wir wirklich im besten Deutschland aller Zeiten?""Ihr findet uns auf:                                                                       Telegramm Hauptkanal:  Chat: ",reichsbuerger_adjacent
Genießt den Rest der Schow.,reichsbuerger_adjacent
"alvanischer Strom: Die natürliche Methode zur Behandlung von Entzündungen. Alte verschwiegene Wissenschaft?Holistische Gesundheit Heilung und AufklärungDie Begeisterung für dieses Gerät basiert auf der soliden wissenschaftlichen Grundlage der elektro-galvanischen Heilkunde und ihrer bewährten Wirksamkeit bei der Behandlung von Schadstoffablagerungen und Entzündungen im Körper. Zahlreiche Forschungsberichte belegen, dass elektrische Vorgänge eine zentrale Rolle in den Lebensprozessen von Pflanzen, Tieren und Menschen spielen. Das Galvanische Wechselstromgerät nutzt diese Erkenntnisse, um das körpereigene elektrische Potential zu erhöhen und damit die Gesundheit und Leistungsfähigkeit zu verbessern. Seine Anwendung ermöglicht es, ""niederschwellige Entzündungen"" zu behandeln und den Organismus in Richtung seiner ursprünglichen evolutionären Ordnung zu führen.Das Galvanische Wechselstromgerät hat sich in zahlreichen Studien als äußerst effektiv erwiesen. Eine Metaanalyse von 15 randomisierten kontrollierten Studien ergab, dass die Anwendung galvanischer Ströme die Schmerzen bei rheumatoider Arthritis signifikant reduzieren kann (Quelle: Journal of Clinical Medicine. Eine andere Studie kam zu dem Ergebnis, dass die Verwendung von galvanischem Strom bei der Behandlung von akuten Knöchelverstauchungen die Schmerzen lindert und die Funktion des betroffenen Gelenks verbessert (Quelle: European Journal of Physical and Rehabilitation Medicine.Das Galvanische Wechselstromgerät erweist sich als äußerst nutzerfreundlich und stellt eine vertrauenswürdige, natürliche Alternative zu herkömmlichen, schmerzlindernden Medikamenten dar. Es handelt sich hierbei um eine nicht-invasive Methode, welche in der Regel keine Schmerzen oder unerwünschten Nebenwirkungen verursacht. Des Weiteren kann das Gerät von Menschen jedes Alters problemlos bedient werden. Falls Sie eine natürliche und wirkungsvolle Methode zur Behandlung von Schmerzen und Entzündungen suchen, kann das Galvanische Wechselstromgerät eine mögliche Lösung sein, nach der Sie gesucht haben.Hie[r haben Sie eine ausführliche PDF über die Riesenvorteile des Galvanischen Feinstroms.🩻Hi](             [m-GerätWerte Community wir sind nun au](        f InstagramUnsere Community aus unserem Kanal bekommt einen Nachlass von 10 Prozent, wenn Sie den Code: ""Sunnytime"" beim Erwerb eingeben.Ihre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
". NUR ZUR ERINNERUNG ...Rede + 10 Jahre = ...Das Parteien-System MUSS abgeschafft werden - keine Frage!Aber es gab hier und da lichte Momente, die mit Wahrheit und Weitsicht gewürzt waren / sind.Einfach wieder einmal sacken lassen!.",reichsbuerger_adjacent
"Ray McGovern, ehemaliger CIA Analyst über die Nord Stream 2 Pipeline-Sprengung durch die USA:""Jetzt ist die Frage, wird dieser Substack-Artikel, und ich bin zuversichtlich, ich weiß jetzt, dass      wurde. Werden die Deutschen es sich ansehen und diesen Clip herunterladen, der zeigt, wie Olaf Scholz neben Joe Biden steht, als Joe Biden sagt: „Wir werden Nord Stream 2 beenden“? Wird das deutsche Volk Olaf Scholz und seine Stellvertreterin Baerbock, die Außenministerin, jetzt fragen: ""Habt ihr das gemeinsam gemacht, Olaf? Oder war es für Sie eine Überraschung, dass die Vereinigten Staaten das gemacht haben?"" Dass die Vereinigten Staaten es getan haben, ist eine Selbstverständlichkeit, seien wir ehrlich.""Die Deutschen sollten jetzt tatsächlich Antworten fordern. War das ein deutsch-amerikanischer Angriff auf die russischen Pipelines, oder war es ein Angriff der USA auf Russland UND Deutschland?",reichsbuerger_adjacent
Themenkomplex WahlmanipulationDas Thema ist im Mainstream angekommen und wird dort ausgewalzt....,reichsbuerger_adjacent
"Das nächste Unglück: In Osceola County, Florida ist ein Pflanzenzucht-Betrieb abgebrannt. Das mehr als 5 Hektar große Feuer erzeugt dichten, toxischen Qualm, da Millionen Plastiktöpfe und Düngemittel abbrennen. Gefahrengut-Teams sind vor Ort und überwachen die Luftqualität.@LIONMediaNews",reichsbuerger_adjacent
"Er gehört auch zu jenen, die ihre Aussagen mit dem Leben bezahlt haben...",reichsbuerger_adjacent
Guido WesterwelleUnterstützen Sie uns !  ,reichsbuerger_adjacent
"Wir haben die Bilder der Linksextremisten!Am Wochenende prügelte sich eine deutsche Linksextremistentruppe durch Budapest. Einige Mitglieder sind Teil der sog. Hammerbande um Lina Engel. Wir veröffentlichen hier alle   , die wir beschaffen konnten.   !  ns! Mehr Info  brief. U dcasts.",reichsbuerger_adjacent
"ie schockierende Wahrheit! Ernährungsfallen der Lebensmittelindustrie - so schlecht ist unser Essen/8 Tricks der Lebensmittelindustrie, die du nicht kennen sollst(Q(QHolistische Gesundheit Heilung und AufklärungUnsere Kollegen von Mister Raw und Welt der Gesundheit haben ein sehr interessantes Gespräch über die Ernährungsfallen der Lebensmittelindustrie geführt. Uns war klar, dass die Spiel - und Freiräume der Lebensmittelindustrie durch die Gesetzgebung sehr großzügig ist. Wir waren dennoch über das Ausmaß, der Technischen Verarbeitung der Lebensmittel die man freiverkäuflich erwerben kann, sehr erschrocken. Vielen Dank an unsere Kollegen. Dies ist ein sehr wertvolles und bahnbrechendes Interview. ""Im Supermarkt gibt es heutzutage eine Fülle an Produkten. Ein Großteil der Konsumenten greift auf die Lebensmittel zurück, die ihnen z.B. als besonders makellos ins Auge springen. Doch wissen sie bei all den Produkten eigentlich, was sie sich da überhaupt in den Einkaufswagen gelegt haben? Denn wenn man mal genauer hinschaut, wird schnell klar, dass Verbraucher ziemlich oft getäuscht werden.Die Lebensmittelindustrie greift dabei auf Tricks zurück, die den meisten von uns nicht einmal im Traum einfallen würden. Einige Zusatzstoffe etwa müssen noch nicht einmal in der Zutatenliste auftauchen.""Ein[weiterer Link zum nachlesen des SachverhaltesYo](      nk      Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Wirkungen von Jod(Q Holistische Gesundheit Heilung und AufklärungWir möchten darauf hinweisen, dass es sehr wichtig ist, sich mit diesem Thema ausgiebig zu beschäftigen. Kaufen Sie bitte nicht gleich das Erstbeste Jodprodukt. Wir werden von unserer Seite keine Produktempfehlung machen. Es gibt einiges zu beachten. Bitte Fragen Sie immer vorher ihren Heilpraktiker und lassen Sie ihren Jod Wert ermitteln. Unsere Schilddrüse ist sehr empfindlich und kann bei Falscheinnahme zu langfristigen Schädigungen kommen. All das dient lediglich zu Informationszwecken.Was macht Jod im menschlichen Körper wenn keine Einschränkungen im Form von Nitratbelastungen und Mineralienmangel vorliegt und die Schilddrüse optimal funktioniert.""-Stärkung des Immunsystems gegen alle Arten von radioaktiven Einflüssen: Verhinderung der Aufnahme und Anreicherung von radioaktivem Jod in Drüsen und Gewebe.-Unterstützung wesentlicher Funktionen in der Regulation von Stoffwechselprozessen in fast jeder Zelle, Schutz gegen schwerwiegende Stoffwechsel- und Entwicklungsstörungen.-Wirkung als Antioxidans: Neutralisierung von schädlichen freien Radikalen und deren Kettenreaktionen.    -Erzeugung von gesundheitswichtigen Hormonen, vor allem der Schilddrüsenhormone Thyroxin (T4 und Trijodthyronin (T3-Aufbau und Erneuerung von Energie für mehr Vitalität im Alltag. Beruhigung des Körper, Lösung von Nervenanspannungen: Abbau von Reizbarkeit, Umschalten auf Ruhe, Verbesserung des Schlafs zum Aufbau und Speichern neuer Kraftreserven-Neutralisierung von Brom, Fluor, Chlor und einigen Schwermetallen wie Quecksilber und Blei (Jod ist die einzige Option, giftiges Fluor, Chlor und Brom aus der Schilddrüse und der Zirbeldrüse zu entfernen, in der sich Fluor konzentriert, vor allem bei Jodmangel    -Antibakterielle Wirkung zur Entkeimung und Desinfektion: Vernichtung sämtlicher schädlicher Keime im Blut; Schwächung stärkerer Keime (bei ausreichender Jod-Versorgung bei jedem Schilddrüsen-Durchfluss bis zur Abtötung-Reinigung des Bluts, Beseitigung aller üblichen Infektionen-Hilfe gegen infektiöse Entzündungen (z. B. des Zahnfleisches-Verbesserung der geistigen Leistungsfähigkeit    -Verstärkter Abbau von Fetten durch Anregung der Oxidation und damit der Fettverbrennung-Hilfe gegen Schilddrüsenunterfunktion (Hypothyreoidismus-Verhinderung von zu starkem Zellwachstum (bei Zysten, Knoten, Hyperplasie, Krebs/Tumoren-Effektive Hilfe bei Erkrankungen der weiblichen Brust und der Prostata""Qu[elle AuszugH](         Wir sind nun auf folgenden Plattformen vert[reten🦋‍‍](ETTsee okub Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"KANONENFUTTER GESUCHTREKRUTIERUNG IN DER UKRAINEODESSA, 02.2023 Die Verluste an der ukrainischen Ostfront sind dermaßen hoch, dass eine rasche personelle Verstärkung notwendig ist. Egal wie. Hauptsache schnell. Bilder von der ""Rekrutierung"" in Odessa/Ukraine ""Wir sind eine Demokratie. Wir können nicht vorgehen wie Russland, wo man mit Schlagstöcken zum Militär gezwungen wird. Wir sind nicht so ein Staat. Wir kämpfen für Europäische Werte und wir wollen Mitglied der Europäischen Union werden. Deshalb müssen wir für diese Überzeugungen kämpfen."" Wolodmyr Selensky Und viele ukrainische Männer werden jetzt mit Schlagstöcken davon überzeugt, in die ukrainische Armee einzutreten. Währenddessen vergnügen sich die Kinder der Mächtigen in Dubai, Berlin oder den Skiressorts der Schweizer Alpen.@RoyalAllemand",reichsbuerger_adjacent
@humor_ist_wenn,reichsbuerger_adjacent
"⏱ Ablenkungsmanöver der USA?  Eine kompakte ZeitlinieVom Spionageballon bis hin zu UFOs - es geht gerade rund in den USA.Nicht nur die Anzahl, sondern auch die Art der Ereignisse deuten auf Ablenkungsmanöver hin.Zu verbergen gäbe es ja genug:#EpsteinsList#Übersterblichkeit#Nordstream-Sprengung#UkrainegeschäfteJoeBiden#UkrainegeschäfteHunterBidenFolge Rabbit Research auf tel uf sub uf you uf ody neuauf Twi",reichsbuerger_adjacent
Wir erkennen die systematische Entmachtung der nationalen Parlamente. Das Ziel ist die Machtübernahme durch die internationalen Strukturen: Neue Weltordnung! Ganze Sendung ansehen: Ihr könnt dem Abgeordneten Gerald Hauser auf Telegram folgen: Folgt auch mir auf Telegram,reichsbuerger_adjacent
"Ihr Lieben,da anscheinend einige sogenannte Patrioten , einen anderen Weg einschlagen und da noch viel Unwissenheit entstanden ist .Die 1871 Friedensboten klären nun auf, was die SHEAF Gesetze für uns überhaupt bedeuten ..Ein Weiterleiten oder kopieren ist ausdrücklich untersagt .Es dient nur der Spaltung.Also schaut genau hin wer das tut !!Die 1871 Friedensboten vereint mit der Deutschlandfrage Berlin 🤍🤝Hier der Einladungslink Und unser Kanal",reichsbuerger_adjacent
"ie schockierende Wahrheit über die Ernährungsfallen und Ernährungslügen in der Lebensmittelindustrie! (K      Holistische Gesundheit Heilung und AufklärungDie Wahrheit über die Lebensmittelindustrie ist erschreckend. Den meisten Verbrauchern ist nicht bewusst, dass Sie von der Lebensmittelindustrie im wahrsten Sinne des Wortes getäuscht werden. Wissen Sie das Verwerfliche an der Sache ist, dass die Spiel- und Freiräume der Lebensmittelindustrie aufgrund der Gesetzgebungen sehr großzügig gestaltet sind.Im Supermarkt gibt es eine Fülle an Produkten, die alles andere als gesund oder natürlich sind. Ehrlich gesagt, würden wir viele dieser sogenannten Lebensmittel nicht einmal den Tieren zum Fressen geben. Die Lebensmittelindustrie arbeitet mit optischen Täuschungen, um ihre Produkte attraktiver zu machen. So werden beispielsweise Obst und Gemüse künstlich gefärbt oder aufgehübscht, damit es makellos aussieht.Es ist heutzutage unumgänglich in Eigenverantwortung sich über die Zutaten der Produkte zu informieren. In diesem Artikel werden Sie lernen, wie Sie in Zukunft den üblichen Ernährungsfallen und Ernährungslügen nicht auf den Leim gehen[. Link zum weiterlesen auf Instagram.  Wir freuen uns auf ihren Besuch](            .Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Kommt am Samstag, 18.2.2022 um 11.30 Uhr zum Harras in München, wo wir eine informative Versammlung mit UlliOma und Dr. Daniel Langhans abhalten werden und die großen Proteste gegen die Kriegshetze der Globalfaschisten einleiten werden.",reichsbuerger_adjacent
"Jetzt fahndet die ungarische Polizei nach den flüchtigen Antifa-Terroristen von Budapest!Viktor Orbáns Polizei gibt jetzt richtig Gas: Nachdem sich mehrere der Antifa-Terroristen, die am vergangenen Wochenende eine Gewaltorgie in Budapest begingen, bereits in Haft befinden, fahndet die Polizei nun nach zwei weiteren Angreifern - mindestens einer davon stammt aus der Leipziger Szene, was weitere Bezüge nach Sachsen belegt.Hier sind die Fahndungsmeldungen der Polizei nach Moritz Christian Leopold Schröter (Leipzig und Clara Judith Wittkugel (geboren in Niedersachsen zu finden:Möglicherweise befinden sie sich sogar bereits wieder in Deutschland. Hinweise nimmt die ungarische Polizei entgegen, sie können aber auch per E-Mail an kontakt@freie-sachsen.info gesendet werden. FREIE SACHSEN: Folgt uns für bei Telegram! ",reichsbuerger_adjacent
"Dresden: Antifa stört Gedenken an die Opfer des alliierten Bombenterrors Jedes Jahr erinnern die Dresdner an die Vernichtung ihrer Stadt durch angloamerikanische Terrorbomber. Doch die Vertreter des Establishments verachten nach wie vor die eigenen Opfer, die schutzlos der sinnlosen Feuersbrunst im Höllensturm ausgeliefert waren. Ausgerechnet an diesem Tag organisierte man eine geschmacklose Gegendemonstration. Natürlich tauchten auch die gewalttätigen Horden der Antifa auf, um den Trauermarsch zu attackieren. Folgen Sie uns auf Telegram:  Folgen Sie auch unserem Textnachrichten-Kanal AUF1.INFO: ",reichsbuerger_adjacent
Das #linkende antideutsche Pack gehört an die Front geschickt und dort im Meatgrinder gemäß ihrer Antifriedenshaltung aufgerieben.,reichsbuerger_adjacent
"🤔🤔Ehrliche Infos, mehr RUSSLAND @Deutsch_Russische_Freunde",reichsbuerger_adjacent
"Der Krieg startete nicht 2022 sondern 2014, so Stoltenberg. Ja komisch, Russland ist aber erst 2022 am 24. Februar in die Ukraine einmarschiert....Diese Berufszionisten sagen es ganz klar doch die Schäfchen bekommen das irgendwie nicht mit.",reichsbuerger_adjacent
"Ja, da hat der Bill absolut Recht, als Täter, als Bioterrorist kann man das definitiv sagen...",reichsbuerger_adjacent
"Bill Gates sagt, die nächste große Bedrohung für die Menschheit sei Bioterrorismus. Interpol stimmt zuIn einem Interview mit der BBC fragte der britische Journalist Amol Rajan Gates, was seiner Meinung nach die große zukünftige Bedrohung für die Menschheit sei, über die wir nicht genug nachdenken würden.Weil wir anfangen, ""genug über den Klimawandel nachzudenken"", antwortete Gates, sei die Antwort ""Bioterrorismus, der wirklich schrecklich ist"".Bioterror und Pandemien sind in gewisser Weise dasselbe, sagt Gates, denn sie setzen die Menschheit gefährlichen und sogar tödlichen Krankheiten aus, aber ""Bioterror ist etwas schwieriger abzuwehren, weil derjenige, der es versucht, es bewusst tut und dein Verteidigungssystem kennt, also kann er versuchen, es zu umgehen"". ACheckMateNews T  |  S | TM  |  G  | O         ",reichsbuerger_adjacent
"„Zuerst muss der Abfall (die Revolte, der Aufstand kommen.“(Paulus in 2. Thess. 2„Netanjahus Pläne sind zu radikal, Präsident warnt: „Pulverfass kurz vor Explosion“Ob der Staat bald zerbricht?„Tel Aviv: Der israelische Präsident Isaac Herzog hat eine seltene Rede zur Hauptsendezeit gehalten, um davor zu warnen, dass das Land am Rande eines „verfassungsrechtlichen und sozialen Zusammenbruchs“ steht, wegen eines Plans der Regierung, die Macht der Justiz zu reduzieren.Herzog, der eher als zuverlässig langweilig denn alarmierend bekannt ist, sprach von einer weit verbreiteten Sorge, dass der von der neuen Regierung von Ministerpräsident Benjamin Netanjahu geplante Wechsel so radikal sei, dass er Zweifel an der Zukunft der Demokratie des Landes, seiner Attraktivität für ausländische Investoren und seiner Anziehungskraft, Verbindungen zu seinen stärksten Verbündeten zu bewahren.“Das bedeutet für Israel im Klartext: Bürgerkrieg, Inflation und Isolation. „Der fehlende Dialog zerreißt uns von innen heraus, und ich sage es Ihnen laut und deutlich: Dieses Pulverfass steht kurz vorm Explodieren“, sagte Herzog der Nation. ""Das ist ein Notfall.""Deutlicher geht’s eigentlich nicht mehr.„Zehntausende haben wöchentlich gegen die Pläne der Regierung demonstriert, während zahlreiche Ökonomen, Wirtschaftsführer, Sicherheitschefs im Ruhestand und Rechtsgelehrte in Opposition gegangen sind.“Weiter:",reichsbuerger_adjacent
"arum die Erdung so wichtig für den Menschen ist und ihr leben um viele bereichernde Jahre verlängert.Holistische Gesundheit Heilung und AufklärungIm letzten Beitrag sind wir bereits auf die Erdung eingegangen. Heute vertiefen wir diese Thematik und klären genauer auf.Damit nämlich Mineralien, Vitamine und alle Stoffwechselprozesse überhaupt funktionieren können, benötigen alle Lebewesen Energie in Form von Elektronen und Protonen im Austausch mit der Umwelt.Wir Menschen sind bioenergetisch betrachtet wie eine mächtige Batterie. Erdung ist etwas, dass wir alle machen können und es ist gut für unsere Gesundheit! [ink zum weiterlesen. Swipe durch die Bilder und lasse uns gern ein Like und/oder Kommentar da.‍](               Für mehr wichtige Infos, besuchen Sie uns auf der Holistische Gesundheit Heilung und Aufklärung.",reichsbuerger_adjacent
"Finanzkrise, Schweinegrippe, Klimawandel, Coronapandemie, China-Krise, Ukraine-Krieg, Überbevölkerung und am Ende vielleicht noch Aliens...Mit ständigen äußeren Krisen werden wir permanent abgelenkt. Dabei übersehen wir die innerpolitischen Sauereien, die seit Jahren kontinuierlich umgesetzt werden.Es wird Zeit für eine Generalabrechnung. Wer könnte das tun?Paul Pawlowski: Übernehmen Sie!!!Seid LIVE dabei, am 14.02.2023 um 20:04 Uhr auf , ,  und .Wir freuen uns auf Euch! 🤗",reichsbuerger_adjacent
"Wir werden seit Jahrzehnten hinters Licht geführt.Ein Patent das im Panzerschrank verloren ging. Kaum bekannt... Eigentlich wären mit dieser Idee sämtliche Debatten über schmutzige Verbrenner der letzten Jahre obsolet geworden.Saubere Verbrennung durch Wasserdampfeinspeisung Weniger Treibstoffverbrauch Weniger Verschleiß am Motor, damit höhere Laufzeit des Motors & Pkw insgesamt. Durch die Automobilindustrie nicht gewollt, weil weniger neue PKW verkauft worden wären & Treibstoff noch günstig war. Mittlerweile vergessen... Tüftler & Techniker wissen, dass unsere Zivilisation technologisch bereits viel weiter sein könnte, wenn nicht ständig Profitinteressen & Bürokratie dem entgegen stehen würde. Mit dem EU-Verbot der Neuzulassungen von Verbrennungsmotoren gehen auch viele alternative nachhaltige Konzepte verloren. Paderborner Erfinder Videofilm von 1989, da gab es noch keine Katalysatoren...youtu.be/KyMDYp4kIlgBitte Überall verbreiten & abonnieren @KatastrophenvorsorgeFL",reichsbuerger_adjacent
"Botschafter Sergej Netschajew im I mit der Zeitung «Izwestija»Das Eigentum einer Reihe von russischen Energieunternehmen in Deutschaland ist de facto schon beschlagnahmt worden. Man „jagt“ nach Vermögen und Kapitalanlagen der sanktionierten russischen Unternehmer. Es werden Wege gesucht, „eingefrorene“ russische Staatsmittel zugunsten der Ukraine zu beschlagnahmen. Wenn darüber überhaupt diskutiert wird, dann dreht sich der Diskurs nur darum, wie man die Enteignungspläne juristisch korrekt begründen und ansehnlich machen könnte. Unsere Kontrahenten sollten sich aber keinen Illusionen hingeben: So ein Schritt würde sich unheilvoll auf die Attraktivität des deutschen Rechtsraumes für ausländisches Kapital auswirken und zu unseren Gegenmaßnahmen führen.",reichsbuerger_adjacent
"Ihr Lieben,da anscheinend einige sogenannte Patrioten , einen anderen Weg einschlagen und da noch viel Unwissenheit entstanden ist .Die 1871 Friedensboten klären nun auf, was die SHEAF Gesetze für uns überhaupt bedeuten ..Ein Weiterleiten oder kopieren ist ausdrücklich untersagt .Es dient nur der Spaltung.Also schaut genau hin wer das tut !!Die 1871 Friedensboten vereint mit der Deutschlandfrage Berlin 🤍🤝Hier der Einladungslink Und unser Kanal",reichsbuerger_adjacent
unnytime.Holistische Gesundheit Heilung und AufklärungEine sehr gute Parodie über die alte und junge Generation. Das ist Humor den wir schätzen. Wunderbar gemacht.Unbedingt anschauen 🥂Werte[Community wir sind nun auf InstagramIhre](       Holistische Gesundheit Heilung und Aufklärung,reichsbuerger_adjacent
"Wir fressen uns zu Tode / Für euch gelesen: Wir fressen uns zu Tode von Galina Schatalova (Q(QHolistische Gesundheit Heilung und AufklärungStatement: Die jetzige aktuelle Diskussion von Insekten als sogenannte neue Nahrungsquelle mag beängstigend sein, aber das eigentliche Problem liegt viel tiefer. Jahrzehntelange systematische Vergiftung durch den Konsum von industriell verarbeiteten Lebensmitteln hat unseren Körpern schwer geschadet. Es ist an der Zeit, dass Sie verstehen müssen eine gesunde Ernährung für sich zu wählen, damit Sie ihr Wohlbefinden fördern und die Gesundheit ihrer Familie schützen zu können.Artikel:""Die Ärztin und Wissenschaftlerin Dr. Galina Schatalova leitete die medizinische Auswahlkommission für die sowjetischen Kosmonauten. Sie war bereits 75 Jahre alt Während außerdem die Anhänger der Kalorierentheorie den Bedarf pro Mensch und Tag auf 2500 bis 3000 Kalorien ansetzen (dies im normalen Leben, nicht speziell in der Wüste, ist Dr. Schatalova nach jahrelangen Studien zu dem Ergebnis bekommen, dass 250 bis 400 Kalorien pro Tag nicht nur ausreichen, sondern auch nicht überschritten werden dürfen, wenn der Mensch gesund sein will.Dies genau zu erforschen, hat sie weder Forschungsaufwand, Kosten, noch Mühen gescheut. Zum Beispiel kamen die Schatalova-Wüstenwandervögel, die 20 Tage für die 500 Kilometer eingeplant hatten, bereits nach 16 Tagen am Ziel an und alle fühlten sich sogar fitter, als zu Beginn der Tour. Zum Anderen haben einige bei diesem Gewaltmarsch mit Minimalkost sogar an Gewicht zugelegt.""Lin[k zum weiterlesen des ArtikelsYo](          Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Angstpornos sind hoch im Kurs:Blackouts, Atomkrieg, Die Aliens kommen und zum drüber streuen bricht die Erde bald auseinander....na dann volle Kraft voraus! Hauptsache wir lenken von der Pipeline-Geschichte ab! Weil Seymour Hersh hat ja keine Ahnung! Der wichtigste Investigativ Journalist der letzten 50 Jahre ist jetzt ein seniler Verschwörungstheoretiker und hat keine Ahnung - das wäre so als wenn der Kaiser Franz (Beckenbauer keine Ahnung mehr von Fußball haben würde....",reichsbuerger_adjacent
"Eskalation in Dresden: Sitzblockaden, Rangeleien, Böller!Der Gedenkspaziergang hat den Pirnaischen Platz erreicht und der linksextreme Mob tobt - es gibt Sitzblockaden (die von der Polizei allerdings sofort geräumt werden, Rangeleien, Böller fliegen. Die Lage ist sehr angespannt, derzeit stoppt der Spaziergang. Es wird sich zeigen, ob die Dresdner Behörden gewillt sind, das Versammlungsrecht gegen den tobenden Mob durchzusetzen und ein würdiges Gedenken zu ermöglichen.FREIE SACHSEN: Folgt uns für alle Nachrichten und Informationen bei Telegram! ",reichsbuerger_adjacent
"Weg mit dem Dreck, mindestens 10 Jahre Haft wegen versuchten gemeinschaftlichen Mord und danach die Antifa zur Terrororganisation erklären und als eben solche behandeln und bejagen.",reichsbuerger_adjacent
"Budapest/Leipzig – Sie schleichen sich von hinten an, prügeln brutal auf einen Mann in Budapest (Ungarn ein. Mit einem Totschläger bewaffnet schlägt ein Vermummter auf den Hinterkopf des Opfers, der Mann fällt zu Boden.Dann schlagen gleich mehrere Männer und Frauen auf den Wehrlosen ein. Immer weiter schlägt der Schlagstock-Mann zu, immer wieder auf den Kopf. Auffallen Es sind vorwiegend Frauen auf den Aufnahmen zu sehen, die eine Überwachungskamera im 11. Budapester Bezirk aufgenommen hat.Nach BILD-Informationen handelt es sich bei den mutmaßlichen Angreifern um Clara W. (22, Anna M. (25, Emilie D. (20, Moritz S. (20, Tobias E. (29 aus Deutschland und Ilaria S. (38 aus Italien. Alle werden dem linksextremen Spektrum zugeordnet. Die Deutschen stammen gebürtig aus Sachsen, Thüringen, NRW, Schleswig-Holstein und Niedersachsen.Gesocks und überflüssig solche deppen. Die sind nicht deutsch sondern völlig abnormal..Dreckspack...Ihr wollt die Wahrheit   ",reichsbuerger_adjacent
"Themenkomplex Welt am DrahtIst unsere Welt nur eine große Matrix, eine Simulation?Viele Menschen haben sich darüber schon Gedanken gemacht.Rainer Werner Fassbinder hat einen mehrteiligen Film zu dem Thema nach dem 1964 erschienene Science-Fiction-Roman Simulacron-3 von Daniel F. Galouye mit dem Titel ""Welt am Draht"" gemacht. Handlung Teil I Die Handlung spielt in einer alternativen Gegenwart der 1970er Jahre. Am „Institut für Kybernetik und Zukunftsforschung (IKZ“ wurde ein Supercomputer namens Simulacron-1 entwickelt, der imstande ist, eine Kleinstadt zu simulieren. Diese Simulation läuft rund um die Uhr und wird von „Identitätseinheiten“ bevölkert, die in etwa dasselbe Leben führen wie normal lebende Menschen und ein Bewusstsein besitzen. Außer einer einzigen „Kontakteinheit“ weiß keiner der simulierten Menschen, dass ihre Welt eine Simulation bzw. ein Simulakrum ist.Fred Stiller wird zum neuen Technischen Direktor des Instituts befördert, nachdem sein Vorgänger, Professor Henry Vollmer, unter ungeklärten Umständen ums Leben kam. Zuvor hatte dieser gegenüber seinem Mitarbeiter, dem Sicherheitschef Günther Lause, noch angedeutet, eine „ungeheure Entdeckung“ gemacht zu haben. Einige Tage später, auf einer Party von Stillers Vorgesetztem Herbert Siskins, verschwindet Lause wie vom Erdboden verschluckt, unmittelbar, bevor er mit Stiller darüber sprechen wollte, was Vollmer vor seinem Tod ihm gegenüber noch gesagt hat. Die Polizei wird eingeschaltet, Lause bleibt jedoch verschwunden. Stiller vermutet, dass mit Vollmers Tod etwas nicht stimmte und Lauses Verschwinden damit zu tun hat. Er muss jedoch feststellen, dass jeder, dem gegenüber er Lause erwähnt, sich nicht an diesen erinnern kann. Auch in den Personaldatenbanken des Instituts ist der Name nicht verzeichnet – offiziell hat Lause nie existiert. Sicherheitschef des Instituts ist zudem seit Jahren ein Mann namens Hans Edelkern.Während Stiller weitere Nachforschungen anstellt, ereignen sich innerhalb der Computersimulation seltsame Dinge: Eine der Identitätseinheiten mit dem Namen Christopher Nobody wollte Selbstmord begehen und wird daraufhin von Stillers Mitarbeiter Fritz Walfang aus der Simulation gelöscht. Stiller begibt sich selbst mittels einer „Kontaktschaltung“ in die künstliche Welt, um dort mit der Kontakteinheit namens Einstein Kontakt aufzunehmen. Von dieser erfährt er, dass Nobody zur Erkenntnis gelangt war, nicht wirklich zu existieren und seitdem seelisch schwer unter dieser Erkenntnis litt. Als sich später Walfang erneut in die Simulationswelt einklinkt, gelingt es Einstein, sein Bewusstsein mit dem von Walfang auszutauschen und so in die wirkliche Welt zu gelangen. Stiller bemerkt dies jedoch und kann ihn überwältigen. Einstein meint, dass er es geschafft habe, auf die nächste Stufe zu gelangen und noch höher gelangen möchte. Auf Stillers Einwand, dass er bereits in der Realität angelangt sei, meint dieser lachend, dass auch Stillers Welt nichts anderes als eine von vielen virtuellen Welten ist.Sind womöglich die immer wiederkehrenden Kataklysmen ein Reset des ganzen Programs? Fragen über Fragen....",reichsbuerger_adjacent
"Themenkomplex UFO-AlarmMir bleibt bei diesem Müll nur noch eines zusagen:All jene, also die sogenannten Eliten, die diese Agenda hochhalten, sie versuchen uns jetzt zu präsentieren, können keine intelligenten Wesen sein, sie müssen saublöd sein. Warum denke ich soGanz einfach:Welche Spezies, irgendwo aus dem Universum, reist Lichtjahre, mit einer uns um Jahrtausende überlegenden Technik zur Erde, um sich dann in deren Atmosphäre von irdischen Flugzeugen oder Raketen, abschießen zu lassen⁉ Keine‼All jene, die uns diesen Bullshit weis machen wollen, sind Vollidioten, die es nicht länger verdient haben an der Spitze der Menschheit zu stehen und jene, die deren Bullshit auch noch glauben, sollten eingereiht werden in den letzten Exodus der humanoiden Volldeppen. Es reicht, die Menschheit wird sich dieser Teufel entledigen und nein, die Zeit für Verhandlungen ist abgelaufen. ",reichsbuerger_adjacent
"Themenkomplex Klimawandel-HoaxEs gibt keinen #Klimawandel und es wird somit auch keinen Anstieg der Meeresspiegel geben.Warum?Weil #tristatecity in Holland direkt am Meer gebaut werden soll.So ein Projekt verschlingt viel Geld, Geld von Investoren. Warum investieren sie in solche Projekte in Meeresnähe soviel? Weil sie wissen das es keinen Anstieg der Meeresspiegel geben wird als Folge eines Klimawandels durch Co².All jene die den Klimawandel erdacht haben und hypen, gehören meiner Meinung nach enteignet und zu lebenslanger Zwangsarbeit verurteilt‼",reichsbuerger_adjacent
"Themenkomplex BombenterrorTerence Hill zum Bombenterror auf Dresden:""Ja, wie immer, die Fabriken waren nicht kaputt, die Stadt war aber kaputt""Aus Erfahrung wissen wir nun, je moderner die Waffen, desto mehr Zivilisten werden getötet. Im ersten Weltkrieg gab es die meisten Toten bei den Soldaten. Im zweiten Weltkrieg verschob sich das Verhältnis massiv in Richtung Zivilisten und im Irakkrieg 2003 mit sogenannten ""Hochpräzisionswaffen"" gab es mehr tote Zivilisten als Soldaten. Das Ziel der modernen Krieg ist also der Sieg durch die Vernichtung des Volkes,  durch den demoralisierenden Terror am Volk und nicht der Sieg  durch eine Schlacht auf dem Felde.Mein Fazit: All jene, die eine solche Strategie verfolgen und ausführen sind Kriegsverbrecher und sollten hingerichtet werden.",reichsbuerger_adjacent
"Wir vergessen nicht!Die Hölle von ´45, lag in dieser deutschen Stadt, in der ein ganzes Volk symbolisch den Tod gefunden hat. Niemals werden wir vergessen: Dresden war ein Massengrab, in dem auch die letzte Unschuld der Sieger starb...Mein ℹ -Kanal ",reichsbuerger_adjacent
"So langsam kann man eine wasserdichte Erklärung für die Übersterblichkeit der letzten Jahre geben: Sie ist ein Resultat der COVID-19 Impfstoffe / Gentherapien.Wir haben für Deutschland die bislang vorhandenen Belege auf Ebene von Aggregatdaten zusammengetragen und dargestellt, dass es kaum möglich ist, eine andere als die Erkläung zu geben, dass COVID-19 Impfstoffe / Gentherapien Menschen umbringen. Wer es nachlesen will, der kann das hier tun:  ",reichsbuerger_adjacent
HEUTE IST WIEDER MONTAG ... Folgt uns  ,reichsbuerger_adjacent
"Lawrow: US-Beamte geben Beteiligung an Nord-Stream-Explosionen zu, dass sie hinter den Explosionen von Nord Stream stecken und freuen sich, darüber zu sprechen, sagte Außenminister Sergej Lawrow. Das Interview wurde auf der Website des Außenministeriums veröffentlicht.Laut den Vereinigten Staaten hat Russland in den letzten 20 bis 30 Jahren „zu gut“ mit Deutschland zusammen gearbeitet, wodurch eine „mächtige Allianz“ aus russischen Ressourcen und deutscher Technologie entstanden sei.Lawrow bemerkte, dass dies zu einer Bedrohung für viele amerikanische Monopolunternehmen geworden sei.„Tatsächlich geben amerikanische Beamte zu, dass die Explosionen, die sich auf Nord Stream 1 und Nord Stream 2 ereigneten, ihr Werk waren. Jetzt reden sie sogar gerne darüber.Ehrliche Infos, mehr RUSSLAND @Deutsch_Russische_FreundeEhrliche Infos, mehr RUSSLAND @Deutsch_Russische_Freunde",reichsbuerger_adjacent
"""Das Ausmaß und die Intensität der Kämpfe in der Ukraine haben selbst die NATO überrascht. Es wirft die Frage auf, ob das Bündnis überhaupt in der Lage ist, einen Krieg mit großen Einheiten gegen Russland zu führen. Das gab kürzlich erstmals der General Christopher G. Cavoli, der NATO-Oberbefehlshaber in Europa (Supreme Allied Commander Europe, SACEUR, auf einer schwedischen Verteidigungskonferenz offen zu.""",reichsbuerger_adjacent
Ach wer hätte das gedacht ... Nato-Volldeppen,reichsbuerger_adjacent
Zitat der Woche,reichsbuerger_adjacent
"Es war einmal, vor sehr langer Zeit, als das ZDF noch die Wahrheit sagte und sich für die Meinung und Gesundheit der Menschen interessierte....Haarp (schon damals!, Chemtrials (Alumiium, Schwefeldioxid. Damals hieß es noch, dass z. B. die USA Wettermanipulationen einsetzen, um Länder zu erpressen und zu kontrollieren, um Dürren und Hagel zu verursachen, obwohl die UNO dies verbietet.In dem Bericht wurde sogar erwähnt, dass Korea aus diesem Grund einen nuklearen Angriff auf die USA erwägt.Man denke nur daran, wie fortschrittlich diese Technologie heute ist....Ein solches ""kleines Erdbeben"" in einem ungehorsamen Land, zwei Tage nachdem Erdogan US-rael aufgefordert hat, die Vereinbarungen einzuhalten, ist PIKUŚ!!!Hoffen wir, dass sie am Ende dafür bezahlen müssen.",reichsbuerger_adjacent
"Generaloberst Helmuth von Moltke ( *25.05.1848 - †18.06.1916Wollte man annehmen, daß Deutschland in diesem Krieg vernichtet würde, so wäre damit das deutsche Geistesleben, das für die spirituelle Weiterentwicklung der Menschheit notwendig ist; und die deutsche Kultur ausgeschaltet; die Menschheit würde in ihrer Gesamtentwicklung in unheilvollster Weise zurückgeworfen werden.Die romanischen Völker haben den Höhepunkt ihrer Entwicklung überschritten, sie können keine neuen befruchtenden Elemente in die Gesamtentwicklung hineintragen. Die slawischen Völker, in erster Linie Rußland, sind noch zu weit in der Kultur zurück, um die Führung der Menschheit übernehmen zu können. Unter Herrschaft der Knute würde Europa in den Zustand geistiger Barbarei zurückgeführt werden. England verfolgt nur materielle Ziele.Eine geistige Weiterentwicklung der Menschheit ist nur durch Deutschland möglich. Deshalb wird Deutschland diesem Krieg nicht unterliegen, es ist das einzige Volk, das zur Zeit die Führung der Menschheit zu höheren Zielen übernehmen kann. Es ist eine gewaltige Zeit in der wir leben. Dieser Krieg wird eine neue Entwicklung der Geschichte zur Folge haben, und sein Ergebnis wird der gesamten Welt die Bahn vorschreiben, auf der sie in den nächsten Jahrhunderten vorzuschreiten haben wird. Deutschland hat den Krieg nicht herbeigeführt, es ist nicht in ihn eingetreten aus Eroberungslust oder aus aggressiven Absichten gegen seine Nachbarn. Der Krieg ist ihm von seinen Gegnern aufgezwungen worden, und wir kämpfen um unsere nationale Existenz, um das fortbestehen unseres Volkes, unseres nationalen Lebens. Damit kämpfen wir um ideale Güter, während unsere Gegner es offen aussprechen, daß ihr Ziel die Vernichtung Deutschlands ist.Quelle:Erinnerungen, Briefe, Dokumente 1877-1916 von Generaloberst Moltke(Der Kommende Tag A.-G. Verlag, Stuttgart 1922🟥=",reichsbuerger_adjacent
"Das ist der Wahnsinn ‼‼ Schaut Euch bitte mal an, welche Macht diese KI von Black Rock jetzt schon hat und von Tag zu Tag mehr aufbaut  Und wie heisst der Berater von der sog. FED, als auch der EZB ⁉Erinnert irgendwie an den Spruch: Die Geister die ich rief..., oder was meint Ihr? Danke Regina für die Zusendung Möchten wir das Teilen sehr erwünscht  Für mehr Info‘s, folge meinem Kanal „5 vor 12⁉⏳“  ",reichsbuerger_adjacent
".   12.02.2023Bottrop, Essener Straße @technikus_news",reichsbuerger_adjacent
"So wird das wieder ein Rohrkrepierer, wie schon ""Aufstehen""... die Frage von Krieg und Frieden ist keine Rosinenpickerei und keine von Rechts oder Links. ",reichsbuerger_adjacent
"Seit Jahrzehnten bereiten sie denKlima-Ausnahmezustand systematisch vor.Alles auf Lügen gebaut!Zeitungsausschnitt 27.06.1993 (Krone, Österreichs größte Tageszeitung====folgt mir auf Telegram:====",reichsbuerger_adjacent
"StillerProtest B295SimmozheimSamstags11 bis 13 UhrSelbstbestimmung,Beendigung der Fremdverwaltung,FriedensvertragVerfassung 1871🤍",reichsbuerger_adjacent
12.02.2023 Stiller Protest B107 Schmölen.,reichsbuerger_adjacent
Stiller Protest am 12.2.23 an der B2,reichsbuerger_adjacent
"Die B241 in Goslar , unterstützt uns gerne 🤝Die 1871 Friedensboten 🤍",reichsbuerger_adjacent
"Themenkomplex MenschheitEine kurze Info an jene Eliten die meinen sie könnten die Welt beherrschen und die Menschheit versklaven. Der Schöpfer hat die Lunte bereits platziert um euren Plan zu vereiteln.Derjenige der diese Lunte zünden wird, hält das brennende Streichholz schon in der Hand. Gog Magog .....",reichsbuerger_adjacent
Wenn sie sich wieder zu faul sind Fotos vor Ort zu knipsen ... erst South Carolina USA und 7 Tage später Canada ,reichsbuerger_adjacent
Themenkomplex Klimazionisten,reichsbuerger_adjacent
"Themenkomplex FlugobjekteDer geistige Zustand der menschlichen Zivilisation aus der Sicht derjenigen, die ein unbekanntes #Flugobjekt lenken, kurz und knapp auf den Punkt gebracht.",reichsbuerger_adjacent
"Auch heute!Mit der üblichen Begleitung, von zwei Polizisten, die B7 steht für Frieden Freiheit und Souveränität!Beteiligt waren heute die FahnenOst und West PreußenReichsland Elsass LothringenHansestadt LübeckGroßherzogtum Sachsen Weimar EisenachKönigreich PreußenPreußische Provinz SachsenUnd die Wiederstandsfahne.Das alles unter unseren Heimath Farben Schwarz Weiß Rot.Wie immer gibt es deutlich mehr positive Resonanz.Die Menschen müssen sich Gedanken machen.Das Motto bleibt.Wir kommen wieder und sagen Danke an alle Unterstützer",reichsbuerger_adjacent
Sie sagen es uns durch FilmeEin weiterer Schnipsel der zum denken anregen sollte.,reichsbuerger_adjacent
"‼ Ließ die Biden-Regierung Nord Stream sprengen? US-Militär-Blog zeigt brisantes Video#USRedaktionVerschwörung, ja oder nein? Pulitzer-Preisträger Seymour Hersh behauptet, die US-Regierung habe die Nord Stream Pipelines gezielt sprengen lassen, da die Pipeline stets als Bedrohung für die “westliche Dominanz” angesehen worden. Während Hersh sich auf eine nicht näher genannte Quelle beruft, werden seine Behauptungen nun von unbeteiligten Dritten bestätigt.          , wie tatsächlich ein norwegisches Militärflugzeug Runden wenige Stunden vor der Detonation über der Pipeline dreht. Hershs brisanter Bericht taucht im Mainstream derweil nur am Ran[de auf.Eva-He]( t | OdyseeZum Online-Kongress: ",reichsbuerger_adjacent
"12.02.2023 - Stiller Protest für Frieden, Freiheit und Souveränitätan der L30 in Königs Wusterhausen (Brandenburg",reichsbuerger_adjacent
"Themenkomplex Potsdamer AbkommenEtwas Wissenswertes zu diesem Abkommen, welches Rechtlich betrachtet kein Vertrag im völkerrechtlichen Sinne ist.In rechtlicher Hinsicht handelt es sich dabei nicht um einen internationalen Vertrag, sondern um ein gemeinsames Konferenzkommuniqué, eine gemeinsame Willens- beziehungsweise Absichtserklärung. Dieses Konferenzkommuniqué wird in der Regel, sachlich und rechtlich ungenau, als Abkommen von Potsdam bezeichnet.Seine inhaltliche Bindung und Reichweite waren umstritten, da zwischen politischer und rechtlicher Wirkung deutlich zu unterscheiden ist.",reichsbuerger_adjacent
KONSPIRATIV KOMPLIZIERT!! TEIL.1 EIne Serie über den Zustand unserer Medien!,reichsbuerger_adjacent
"Themenkomplex FalschspielerDer lustige Kanal Deutschland/DeutschesReich/Vaterland, also jener Kanal der auf den Spuren von Commander Pansen unterwegs ist, zieht sein Programm durch, sein Ultimatum für die von ihm gelisteten Kanalbetreiber läuft bald ab. 🤣Nun, ich verstehe schon das bei dem was auf diesem Planeten so alles passiert, dem einem oder dem anderem die Sicherung durchbrennen kann aber bei diesem Vogel bin ich mir sicher, dass da noch nie eine Sicherung vorhanden war.....",reichsbuerger_adjacent
"Themenkomplex Freie Energie, Vorsicht BetrugEs kursieren immer mehr Videos auf YouTube die einem zeigen, wie man mit einfachsten Mitteln selbst Energie erzeugen kann.Gerade in Mode gekommen sind Videos, wie man aus alten CDs selbst Solar-Module bauen kann. Natürlich ist das alles Bullshit und warum das so ist will ich euch erklären. Das  gezeigte Video ist bei YouTube monetarisiert und hat nach 4 Wochen 2,4 Millionen aufrufe. Da man solch ein Video bis zum Ende gucken muss, wird man auch viel Werbung eingeblendet bekommen.Als ich meinen YouTube-Kanal noch hatte mit 8000 Abonnenten, hatte ich einmal 160,- Euro im Monat bekommen für ca. 12000 Aufrufe. Nun rechne das mal hoch auf 2,4 Millionen.Dann hat dieses Video dem Ersteller 32.000€ eingespielt, wenn nicht noch viel mehr da meine Videos laut meiner Statistik so gut wie nie in voller Gänze gesehen wurden. Dieses Video hingegen muss man bis zum Schluss sehen, man will ja das Ergebnis der Arbeit miterleben. Noch irgendwelche fragen? Guter Stundenlohn für einen barfüßigen Inder mit Internetanschluss. Aus genau diesem Grund schießen diese ""Ich mach mir meine Energie selbst"" Videos wie Pilze aus dem Boden, es ist ein reines Geschäftsmodel basierend auf Betrug. ",reichsbuerger_adjacent
"arum die Erdung so wichtig für den Menschen ist und ihr leben um viele bereichernde Jahre verlängert.Holistische Gesundheit Heilung und AufklärungDie Erdung hat viele positive Auswirkungen auf den menschlichen Körper. Sie kann dazu beitragen, Stress und Anspannung zu reduzieren und das körpereigene Wohlbefinden zu steigern.Sie kann auch dazu beitragen, das Immunsystem zu stärken und die Entzündungsreaktion des Körpers zu verringern.Der menschliche Organismus benötigt die Erdung, um gesund und vital zu bleiben. Das wirklich gute an der Sache ist, es ist kostenlos und beschert Ihnen viele zusätzliche Jahre an Lebensqualität!Sie glauben dies nicht? Dann sollten Sie sich diesen Artikel genauer anschauen.L[ink zum weiterlesen. Swipe durch die Bilder und lasse uns gern ein Like und/oder Kommentar da.‍](               Für mehr wichtige Infos Besuchen Sie uns auf der Holistischen Gesundheit Heilung und Aufklärung.",reichsbuerger_adjacent
"tudien beweisen klar, hochfrequente 5G Strahlung kann durch einfache Technik neutralisiert werden. Gesundheit bis ins hohe Alter.Holistische Gesundheit Heilung und AufklärungIn unseren Fachartikeln über die Niederfrequente/Hochfrequente Strahlung haben wir Ihnen in unabhängigen wissenschaftlichen Studien verdeutlicht, dass 3G/4G/5G Strahlung, Bluetooth, W-LAN und Elektrosmog, aber auch Geopathische Störfelder in Form von Wasseradern, Verwerfungen in der gesamten Summe unsere wertvolle Gesundheit auf dramatische Art immer weiter einschränkt.Wissen Sie das tückische bei uns Erwachsenen ist, dass die Abnahme unserer Vitalität schleichend voranschreitet. Erst nach Jahren bemerken wir die physischen, geistigen und mentalen Einschränkungen, die uns dann am Ende mit voller Wucht, mit allen Konsequenzen erreicht. Bei unseren Kindern möchte ich nur auf einen wesentlichen Umstand hinweisen. Die Abwehr und Schutzmechanismen unserer Kinder sind in keiner Weise so ausgebildet wie bei uns Erwachsenen.........Sei es in ihrem Zuhause, auf der Arbeit, in der Schule, in der Stadt, selbst im Auto sind wir zu jederzeit diesen nicht förderlichen Strahlen ausgesetzt. Nach dieser Aufzählung wird einem klar, dass wir als menschliche Spezies in einer absolut unnatürlichen nicht artgerechten Umgebung/Welt leben. Stellen Sie sich nun bewusst selbst die Frage, geht es Ihnen gut?In unseren Artikeln ( Te ( T ( T  haben wir Ihnen Ernährungsmöglichkeiten aber auch Technologien von Memon vorgestellt, wie Sie mit homöopathischen Feldern des Lichtspektrums der Sonne die schlechten Eigenschaften der Frequenzen negieren können so das ihre Zellen nicht mehr von dieser Strahlung beeinträchtigt werden können. Um dieses Thema zugänglicher für Sie zu machen haben wir Ihnen ein vier Minuten Video von Memon hinzugefügt, wo ganz einfach erklärt wird wie diese Technologie funktioniert.Sollten Sie die Tiefe dieses Themas verstehen wollen, empfehlen wir Ihnen unsere ausgearbeiteten Artikel. Die Beiträge haben wir zusätzlich in einem Podcast für Sie eingesprochen. Uns ist wichtig, dass Sie diese Technik verstehen.-Mit derzeit über 80 Testungen und Studien ist Memon die wissenschaftlich umfangreichste dokumentierte Technologie ihrer Art in Deutschland und weltweit (Studien werden mit eingefügt. Memon hat sich seit über 20 Jahren in allen Lebenslagen bestens bewährt und ist auf Nachhaltigkeit ausgelegt. In dieser Doppelstudie wird einfach und treffend erklärt, wie die Endgeräte von Memon in Büros, Häusern, Autos und Handys eine Neutralisierung der negativen Hochfrequenzen und Umwelteinflüssen erreicht wird.M hat uns freundlicherweise einen Gutscheincode für unsere Kanalbesucher zur Verfügung bereitgestellt. Für Ihre Anschaffung bei Memon erhalten Sie einen Rabatt von 5 %. Der Code ist einmalig anwendbar. Gutscheincode: Neustart2022 einfach angeben.Me[monizer Combi Stecker (Büro,Praxen und ZuhauseM](       [rZweite Doppelblind-Studie M](  [emon Memon Sta]( [rtseiteHier erhalten Sie weitere Informationen über das Themenfeld Schutz vor 5G und Strahlenfelder und ih](                re WirkungWir sind nun auf folgen  ven🦋GETse YouTube |InstagramHolistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Themenkomplex Raubzug gegen DeutschlandDie Amerikaner wären nicht da wo sie sind, wenn es das Deutsche Volk nebst seiner Erfinder nicht gegeben hätte. Es gab Gebiete der Wissenschaft, auf denen die Deutschen einen Vorsprung von 100 Jahren gegenüber allen anderen Nationen hatte.Mit Sicherheit gehört die Tarnkappenfähigkeit von Flugzeugen dazu.Ebenso brauchten die Amerikaner ewig, um einen Tarnkappenbomber als Nurflügler zu bauen, die B2.Die Horten  Ho 229 konnte das schon zu Zeiten des 2. Weltkrieges. Die gesamte Raketentechnik kommt auch aus Deutschland. 110.000 Tonnen Papiergewicht an Patenten wurden geklaut.",reichsbuerger_adjacent
"Bitte dieses Video jedem Richter, Staatsanwalt, Schöffen oder Anwalt zeigen.Es ist für SIe von großer Bedeutung.Im folgenden Post finden Sie die zugrundeliegenden DokumenteDr. Bodo Schiffmann 10.2.23",reichsbuerger_adjacent
"Themenkomplex Linke HammerbandeEs wird bewusst der Tod von Menschen in Kauf genommen. In Überzahl und bewaffnet wird heimtückisch aus dem Hinterhalt angegriffen. Damit das ausgewählte Ziel sich nicht wehren kann, wird massiv mit hochkonzentrierten Pfefferspray gesprüht. Diesmal reiste man sogar den Patrioten nach Budapest hinterher, wo die Teilnehmer einen 60 KM Marsch zu Ehren der deutschen und ungarischen Soldaten absolvieren. Die deutschen Täter schienen nicht zu wissen, daß ringsherum viele Kameras alles aufgenommen haben.Schwarzwild wird wie bejagt?",reichsbuerger_adjacent
"Einen wunderschönen guten Tag zusammen.Heute einmal ein paar kurze Anmerkungen für Verwirrte und Verirrte, die gerne behaupten oder glauben, die Begriffe Deutsche, Deutschland, Deutscher, seien erst seit der Weimarer Republik und erst mit Adolf in Erscheinung getreten.Hier ein paar praktische und simple BeispieleEs heißt ""made in Germany"" und nicht made in Sachsen/Preußen/Bayern usw. und wurde schon vor der Reichsgründung im Ausland an deutsche Waren angebracht und für diese gebraucht.Im Gedicht Ernst Moritz Arnds, welches er während der Befreiungskriege 1812 gegen Napoleon schrieb, heißt es ""Was ist des Deutschen Vaterland?"" Er schreibt nicht, was ist des Preußen /Bayern/Sachsen/Hessen usw. Vaterland.Nach der Reichsgründung wurde später der DEUTSCHE Flottenverein gegründet.Einer der bekanntesten Aussprüche Heinrich Heines lautet, ""Denk’ ich an Deutschland in der Nacht, dann bin ich um den Schlaf gebracht"". Auch dieser Ausspruch stammt noch vor der Reichsgründung.Turnvater Jahn gründete Anfang des 19. Jahrhunderts die deutschen Turnerschafften und an den Universitäten entstanden die deutschen Burschenschaften.Es sind seit je her die deutschen Völker, welche die deutschen Länder besiedeln.In der 1871er Verfassung wird dies auch in vielen Artikeln mehrfach betont, dass das Land, DEUTSCHLAND ist und die Deutschen darin leben. Der Staat in seiner politischen Ausrichtung und seinem Bestand ist das Deutsche Reich und seine Staatsangehörigen nach dieser politischen Benennung Reichsangehörige, entweder als Teil eines der Deutschen Gliedstaaten, welche man auch als Bundesstaaten, oder Länder bezeichnen kann oder unmittelbar als deutscher Reichsangehöriger.Die Besatzung und die damit einhergegangenen Folgen haben bis heute nichts am Deutschen Volk, den Deutschen, Deutschland und dieser Staatsangehörigkeit geändert. Die politische Ausrichtung ist durch den Besatzer eine andere als vor 1918, zumindest so lange die Besatzung andauert, jedoch bleibt das Volk von heute, das gleiche Volk wie damals.Es war und ist ein deutscher Staat mit deutschen Bürgern, bis 1999 im Staatsangehörigkeitsgesetz noch Reichsangehörige genannt und mittlerweile deutsche Staatsangehörige bezeichnet. Egal ob Weimar oder Hitler, DDR oder BRD, sie alle dürfen und können diesen Sachverhalt nicht ändern, ohne dabei das Völkerrecht brechen zu müssen. Sie verwalten alles, mit dem Segen des Besatzers, mehr auch nicht. Am Deutschen Mutterstaat und Völkerrechtssubjekt Deutsches Reich, ändert dies nichts.Nur weil man einen Blumenkohl grün anmalt, wird daraus kein Brokkoli.Wir halten fest. Der Begriff Deutschland und Deutsche, dient schon seit Jahrhunderten als weltweit verwendeter Begriff, zur Definition des jeweiligen Staates oder staatsähnlichen Gebildes in der Mitte Europas. Setzte er sich in seiner Geschichte auch aus noch so vielen Klein- und Einzelstaaten zusammen. Mit Gründung der modernen Verfassungs- und Nationalstaaten, ist der Begriff Deutschland und Deutsche dann auch völkerrechtlich relevant geworden und juristisch verwendet worden. Sowohl im Inneren, als auch im Außenrechtsverhältnis. Das Erbe der Kleinstaatlichkeit in der Mitte Europas und des Deutschen ureigene Verbindung zu seinem Stamm, hält überdies das Bewusstsein, Sachse, Preuße, Bayer, Badener, Hesse, Mecklenburgern usw. zu sein, am Leben und schafft uns Deutschen eine unwahrscheinlich wertvolle und vielschichtige Kultur, auf die wir mit Stolz zurück und vorwärts blicken können.Und zu guter Letzt. Der Reichstag in Berlin wurde noch während der aktiven Zeit des Deutschen Reiches mit der Inschrift ""DEM DEUTSCHEN VOLKE"" versehen und nicht etwa mit ""DEM REICHSANGEHÖRIGEN"" oder indem man alle Bundesstaatenangehörigkeiten einmeißelte, verziert.Dies ein kleiner deutscher Exkurs von mir.Ein schönes WochenendeEs grüßtRené Otto",reichsbuerger_adjacent
"luorid ist es nun schlecht oder doch Gesund?Holistische Gesundheit Heilung und AufklärungGibt es einen Unterschied zwischen dem ""guten"" Fluorid und dem ""schlechten"" Fluorid, wenn es um unsere Gesundheit geht?Kann Fluorid positive oder negative Auswirkungen auf Zähne, Zirbeldrüse, Knochen und Herz haben?In diesem Beitrag werden wir das Rätsel hinter dem guten und schlechten Fluorid lösen.L[ink zum weiterlesen. Swipe durch die Bilder und lasse uns gern ein Like und/oder Kommentar da.‍](               Für mehr wichtige Infos Besuchen Sie uns auf der Holistischen Gesundheit Heilung und Aufklärung.",reichsbuerger_adjacent
‼Zündstoff vom Feinsten ‼,reichsbuerger_adjacent
"Der Chef der russischen privaten Kampfeinheit „Wagner“, Evgeny Prigoshin, teilte CNN mit, dass sich nach dem Erscheinen eines Werbespots für Wagner 10 Millionen Amerikaner beworben hätten, um gegen die NATO zu kämpfen.Anfrage der Redaktion von CNN:„Guten Tag, können Sie uns erklären, warum die Aufnahme von russischen Strafgefangenen bei der PMO ‚Wagner‘ beendet wurde? Welchen Grund gibt es dafür?“Die Antwort Evgeny Progishins:„Nach der Erscheinung der Werbung für die PMO ‚Wagner‘, speziell auf den amerikanischen Markt zugeschnitten, haben wir mehr als 10 Millionen Anfragen von Bürgern der USA erhalten, welche in die Reihen der Organisation ‚Wagner‘ eintreten wollen, um gegen die NATO zu kämpfen.Aktuell prüfen wir die Bewerbung von etwa einer Millionen amerikanischer Bürger zur Arbeitsaufnahme bei uns.Darum haben wir zeitweilig die Rekrutierung von Freiwilligen in russischen Haftanstalten angehalten.""",reichsbuerger_adjacent
"Глава МИД ФРГ Анналена Бербок признала ошибкой свои слова о том, что Запад находится в состоянии войны с Российской Федерацией: ""Есть такая пословица, которая гласит, что не ошибается лишь тот, кто не живёт». Это чрезвычайное важное заявление! Не шучу. Послушайте, Анналена, если Вы полагаете, что все имеют право на ошибки, потому что это часть человеческой жизни, так перестаньте заниматься эскалацией кризиса, которая ведёт к убийствам людей из западного оружия. 8 лет режим Зеленского, которого поддерживала Германия,  убивал людей Донбасса. Чтобы прекратить кровопролитие и купировать угрозы его перерастания в очередную мировую войну, была начата  СВО. И тут НАТОвские преступники стали подливать масло в огонь, превращая всё это в масштабную бойню. Если Вы осознали свою ошибку искренне, Вы это поймёте. Должны понять. А если опять лицемерите, то совершаете ошибку уже непоправимую.",reichsbuerger_adjacent
"Maria Sacharowa beginnt den Tag mit KlartextBundesaußenministerin Annalena Burbock räumte ihre Worte, der Westen befinde sich im Krieg mit der Russischen Föderation, als Irrtum ein: ""Es gibt ein Sprichwort, das besagt, dass nur wer nicht lebt, sich nicht irrt."" Dies ist eine äußerst wichtige Ankündigung! Ich scherze nicht.Hören Sie, Annalena, wenn Sie glauben, dass jeder das Recht hat, Fehler zu machen, weil dies zum menschlichen Leben gehört, dann hören Sie auf, die Krise zu eskalieren, die dazu führt, dass Menschen mit westlichen Waffen getötet werden.Seit 8 Jahren tötet das von Deutschland unterstützte Zelensky-Regime die Menschen im Donbass. Um das Blutvergießen zu stoppen und die Gefahr seiner Eskalation zu einem weiteren Weltkrieg zu stoppen, wurde die NWO ins Leben gerufen. Und dann begannen die NATO-Kriminellen, Öl ins Feuer zu gießen und verwandelten das Ganze in ein großangelegtes Massaker.Wenn Sie Ihren Fehler aufrichtig erkannt haben, werden Sie ihn verstehen. Musst verstehen. Und wenn Sie wieder heuchlerisch sind, dann machen Sie einen irreparablen Fehler.",reichsbuerger_adjacent
"NORDSTREAM 2 TERROR ANSCHLAG DURCH DIE USA ‼BUNTENTAG KASPER 🤡 THEATER Aktuelle Stunde, 10.2.2023, Nach Antrag der AfDNormalerweise ist es nicht wichtig was die Kasper im Buntentag der Besatzungsverwaltung so von sich geben. Ausnahmsweise zeigen wir Euch hier Reden und Ausschnitte, um ein Zeit Dokument zu schaffen und zu verdeutlichen mit welchem Unsinn die BRD Schafe gefüttert werden. AfD fordert 137 Tage nach dem Anschlag, und dem Artikel von Seymour Hersh endlich Aufklärung und Antworten in einem Untersuchungsausschuss von der kriminellen RegierungGRÜNE nennen den Terror Anschlag als Nicht – ThemaSPD nennt Fragesteller Feinde „unserer (also ihrer Demokratie“CDU ist stolz auf die Mitgliedschaft in der AtlantikbrückeLINKE greift die kriminelle Regierung aufs Schärfste an und fordert ebenfalls AufklärungDas System wehrt sich mit Händen und Füßen gegen die Wahrheit",reichsbuerger_adjacent
Lachen ist Gesund ,reichsbuerger_adjacent
"Themenkomplex Nord Stream IIScott Ritter spricht Klartext. Die deutschen Schlafschafe blöken nur während ihre ""Verbündeten"" sie zur Schlachtbank führen. ",reichsbuerger_adjacent
"ranshumanismus versus Epigenetik - Dr. Bruce Lipton - deutsch Holistische Gesundheit Heilung und AufklärungUnser Partnerkanal hat ein sehr wichtiges und zudem interessantes Interview mit dem Epigenetiker Bruce Lipton geführt. An der Stelle bedanken wir uns bei Frau Dr. Wichmann für das bereitgestellte Interview.""Mit deutscher Synchronisation von Paula P`Cay und Charis NassBesonders die letzten drei Jahre haben gezeigt, in welche Richtung es gehen soll: Transhumanismus wird als die Lösung für die vermeintlich vielfältigen Probleme angepriesen.In diesem Gespräch zwischen Dr. Bruce Lipton und Dr. Heidi Wichmann wird die Wichtigkeit der Epigenetik unter diesen veränderten Umständen betrachtet.Was ist stärker, Transhumanismus oder Epigenetik?""🪴Que[lle: Heidi Wichmann Od](         Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"ie Krebs Industrie - Wie Du überleben kannst!(Q(HHolistische Gesundheit Heilung und Aufklärung""Krebs"" bezeichnet in der Medizin die unkontrollierte Vermehrung und das wuchernde Wachstum von Zellen, d. h. eine bösartige Gewebeneubildung (maligne Neoplasie bzw. einen malignen (bösartigen Tumor (Krebsgeschwulst, Malignom. Bösartig bedeutet, dass neben der Zellwucherung auch Absiedelung (Metastasierung und Invasion in gesundes Gewebe stattfindet. Im engeren Sinn sind die malignen epithelialen Tumoren (Karzinome, dann auch die malignen mesenchymalen Tumoren (Sarkome gemeint. Im weiteren Sinne werden auch die bösartigen Hämoblastosen als Krebs bezeichnet, wie beispielsweise Leukämie als „Blutkrebs“""Que[lle:You-TubeWi](s[sensbewahrung: Telegramm/AbsicherungWe]( Community wir sind nun auf Instagram](       Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Themenkomplex GeistesschwächeIch muss an dieser Stelle an den vorausgegangenen Beitrag erinnern.Zum Falschspielertum gesellt sich jetzt noch Geistesschwäche. Man merke: Commander Pansen wurde weggesperrt, Johannes Müller auch kürzlich wieder und dann schicken sich ein paar Deppen an in deren Fußstapfen treten zu wollen. Ich kann mich nur noch beeumeln über die Dämlichkeit mancher Artgenossen...... obwohl nein, das können keine Artgenossen sein, ich habe mich geirrt. Der Homo Sapiens Sapiens unterscheidet sich doch schon massiv vom Homo Erectus, der erstgenannte kann nämlich denken.",reichsbuerger_adjacent
"hier nochmal der link von der schreibschule, die alex zu anfang erwähnt hat",reichsbuerger_adjacent
"Ex-US-Oberst: Ukraine muss entsetzliche Verluste hinnehmen – Niemand sagt die Wahrheit Laut dem ehemaligen Oberst der US-Armee und Politikwissenschaftler Douglas Macgregor, sollen die ukrainischen Behörden so verzweifelt sein, dass sie 16-jährige Jungen für die Armee anwerben. Dies zeige, dass das Kiewer Regime dem Zusammenbruch immer näherkomme.""Und wie viele Opfer die Ukrainer zu beklagen haben, kann man nur schätzen. Ich habe von 157.000 Toten bis zu über 200.000 Toten gehört. Ich habe von 400.000 Opfern gehört. Ich habe von 500.000 Opfern gehört. Im Westen sagt niemand die Wahrheit.""_____Mehr unbequeme Wahrheiten gibt's bei@AssangesRache",reichsbuerger_adjacent
"@unzensiert_infoseite ""Sie sind in der Politik gelandet,  weil man sie sonst nirgends brauchen kann"".......und von sowas lassen sich, die meisten, auf der Nase rumtanzen.Nicht euer ernst. Sie dürfen/ können keine Gesetze erlassen, deshalb dann Verordnungen.......und Michel macht mit.Nicht euer ernst.  Oder @unzensiert / @unzensiertV2",reichsbuerger_adjacent
Nutzlose Esser werden hier identifiziert,reichsbuerger_adjacent
"Themenkomplex HaftungDie CDU will die Krankenkassen in die Haftung für die Impfschäden nehmen. Ich sage nein, ich stehe auf der Seite der Krankenkassen denn es waren nicht die Kassen welche die Verantwortung für die Impfkampagne tragen. Mit dieser Verschiebung der Verantwortung von der Politik auf die Kassen wird das Gesundheitssystem vorsätzlich geschädigt, so wie es üblich ist durch die Politik. Das Strategiepapier des Innenministerium ist die ""smoking gun"". Meine Meinung: Die Politiker und alle Beamten sowie Institutionen die für die Impfkampagne gesorgt haben, diese gefördert und gestützt haben müssen dafür bezahlen, und zwar alle, sie müssen enteignet werden und wenn das Geld nicht reicht müssen sie durch Zwangsarbeit ihr Leben lang dafür die Kosten erarbeiten, und zwar in Ketten gelegt in Form einer Chaingang.",reichsbuerger_adjacent
"Themenkomplex Zensur auf TwitterIm US-Kongress wird es immer heißer, die Zensur von Twitter in Sachen Covid wird abgearbeitet und ja, dort wird Klartext gesprochen. Habe ich euch schon mal gesagt das ich Klartext liebe⁉",reichsbuerger_adjacent
"Themenkomplex FalschspielerHier ein weiteres Prachtexemplar eines Kanals, der ganz im Sinne des Systems wunderbare Falschlenkung praktiziert. Umgangstipp:Kanal meiden, Abo kündigen‼",reichsbuerger_adjacent
"Themenkomplex 2. Weltkrieg und RechtskreiseNatürlich kann man den 2. Weltkrieg vollkommen ausklammern, auch seine Rechtsfolgen doch ist das Zielführend oder überhaupt mit irgendeiner Logik behaftet? Natürlich nicht, insbesondere dann nicht, wenn einer der Alliierten des Kontrollrates in diesem Krieg den ""großen vaterländischen Krieg"" sieht. Es ist schon interessant wie man im Glauben sein kann das man dieses Kapitel der Menschheitsgeschichte einfach so ausblenden kann. Man glaubt mittels einer Zeitmaschine einen Zeitsprung machen zu können, der mit dem Spruch ""Tritt hernieder und regiere uns wieder"" initiiert wird. Natürlich geht das so nicht‼Ich werde niemals verstehen wie man solche Gedankengänge auch nur haben kann und wie man heute solch einem Protagonisten überhaupt noch folgen kann.",reichsbuerger_adjacent
"Themenkomplex  Die Frage ""Warum nur?""In vielen patriotischen Kanälen tummeln sich wirklich seltsame Gestalten, so auch Andreas, bei dem man sich fragt ""Warum nur ist er in diesem Kanal?""Wenn er der Andreas  in Kanälen der 1871 Patrioten ist und meint, die Verfassung von 1871 wäre eine Vereinssatzung, dann will er entweder in einen Karnickelzüchterverein oder ähnliches  zurück oder er steht nicht für 1871. Ist zwingende Logik oder?Er bat mich ihm das Gesetz zu zeigen in dem geschrieben steht, dass das Deutsche Reich ein Bundesstaat ist. Ich antwortete ihm das die Eigenschaft des Deutschen Reiches als föderaler Bundesstaat aus der Verfassung 1871 hervor geht und das es dazu nicht extra ein Gesetz braucht in dem steht: § 93  Das Deutsche Reich ist ein föderaler Bundesstaat gemäß internationaler Regelungen und Definitionen eines Bundesstaates.In meinen Augen ist er ein installierter Störsender.",reichsbuerger_adjacent
"örperelektrizität steuert die Körperchemie. Warum dieser Zweig der Wissenschaft kaum Beachtung findet. Besonders für Heilpraktiker und alternativ denkende Ärzte ist dieser Beitrag äußerst Wertvoll.Holistische Gesundheit Heilung und AufklärungDie elektro-galvanische Heilkunde ist eine Form der Elektrotherapie, bei der galvanischer Strom (Gleichstrom verwendet wird. Diese Methode wird hauptsächlich zur Behandlung von Schadstoffablagerungen (Plaques und Entzündungen verwendetIn vielen hundert Forschungsberichten wurde immer wieder bewiesen, dass die lebende Substanz bei Pflanze, Tier und Mensch Elektrizität erzeugt. Leben ist immer mit Stromerzeugung verbunden. Leben wird immer auch und besonders durch elektrische Vorgänge gesteuert. Folgerichtig muss auch jeder Lebensprozess durch planvoll zugeführte Elektrizität beeinflusst und in bestimmtem Sinne mitgesteuert werden können.Im Altertum wurde Elektrizität bereits als Heilmittel genutzt und nach der Erfindung von Gleichstrom wurde sie besonders bei Lähmungen, Nervenschwäche und Rheuma eingesetzt. Elektrizität spielt eine wichtige Rolle in der Körperchemie, da sie die Funktion von Elektronen beeinflusst, die die Bausteine der Materie sind. Die Elektrizität des Körpers hat einen direkten Einfluss auf die Chemie des Körpers und somit auf die Gesundheit. Ein Mangel an Elektrizität kann zu Alterungs- und Krankheitsprozessen führen. Mit zunehmendem Alter und bei psychischem Stress sinkt die elektrische Ladung der Zellen und die Elastizität im Gewebe nimmt ab. Ein zu niedriges elektrisches Potential in den Nervenzellen kann zu Nervosität und Hektik führen. Die Leistungsfähigkeit und Gesundheit hängen von der Menge und Qualität der Ladung in den Zellen, der Zwischenzellenflüssigkeit und im Blut ab. Ein Mangel an Elektrizität kann Symptome wie Müdigkeit, Aggression, Nervosität und Schmerzen verursachen. Der zugeführte galvanische Strom wirkt im Körper, indem er die elektrische Ladung der Zellen und Gewebe erhöht.Elektronen können von einem Stoff zum anderen übertragen werden und dadurch entsteht ein Elektronenfluss. Wenn in einem Metalldraht Strom fließt, bewegen sich die Elektronen entlang des Drahtes und dies kann zu chemischen Veränderungen im Körper führen. Die Körperelektrizität kann auch genutzt werden, um Körperfunktionen wie die Muskelkontraktion und die Nervenimpulse zu steuern.Die elektro-galvanische Heilkunde wird als eine Möglichkeit beschrieben, um die Neustrukturierung des gesamten Organismus in Richtung seiner ursprünglichen evolutionären Ordnung zu fördern und ""niederschwellige Entzündungen"" zu behandeln.Hie[r haben Sie eine ausführliche PDF über die Riesenvorteile des Galvanischen Feinstroms.🩻Hi](                m-GerätUnsere Community aus unserem Kanal bekommt einen Nachlass von 10 Prozent, wenn Sie den Code: ""Sunnytime"" beim Erwerb eingeben.Ihre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"arum die Erdung so wichtig für den Menschen ist und ihr leben um viele bereichernde Jahre verlängert.Holistische Gesundheit Heilung und AufklärungDie Erdung hat viele positive Auswirkungen auf den menschlichen Körper. Sie kann dazu beitragen, Stress und Anspannung zu reduzieren und das körpereigene Wohlbefinden zu steigern.Sie kann auch dazu beitragen, das Immunsystem zu stärken und die Entzündungsreaktion des Körpers zu verringern.Der menschliche Organismus benötigt die Erdung, um gesund und vital zu bleiben. Das wirklich gute an der Sache ist, es ist kostenlos und beschert Ihnen viele zusätzliche Jahre an Lebensqualität!Sie glauben dies nicht? Dann sollten Sie sich diesen Artikel genauer anschauen.L[ink zum weiterlesen. Swipe durch die Bilder und lasse uns gern ein Like und/oder Kommentar da.‍](               Für mehr wichtige Infos Besuchen Sie uns auf der Holistischen Gesundheit Heilung und Aufklärung.",reichsbuerger_adjacent
🤣,reichsbuerger_adjacent
Vorwurf gegen Elon Musk: Handel mit gefährlichen Krankheitserregernvon BioClandistine:Als Reaktion auf die Aufdeckung des biologischen Deep State-Netzwerks in der Ukraine hat die Biden-Administration einen Regierungs-/Medien-Hit-Job gegen Elon Musk inszeniert und beschuldigt ihn des... HANDELS mit gefährlichen PATHOGEN?Das sollten Sie unbedingt lesen. Der tiefe Staat ist in voller Panik.,reichsbuerger_adjacent
"Wie im echten Leben, die Weißen sind in der Minderheit....",reichsbuerger_adjacent
"Themenkomplex FalschspielerMal wieder verdreht dieser hier gezeigte Protagonist die Fakten. Wer des Öfteren mal die Sprachchats verfolgt hat wird genau registriert haben, das die hier durch Herrn Radon aufgeführten Fürsprecher für die Feststellung der deutschen Staatsangehörigkeit ausdrücklich nicht persönliche private Vorteile anführen sondern im Gegenteil, nahezu ausschließlich von einer völkerrechtlichen Relevanz sprechen, also einem Nutzen der nicht nur dem Antragsteller dient sondern sogar jedem der keinen Antrag zur Feststellung gestellt hat dienen kann. Wohlgemerkt, es war immer eine Kann- Formulierung.Natürlich lenkt Herr Radon damit nur von seinen eigenen Unzulänglichkeiten ab. Möge er doch mal den Beweis antreten, das sein Burgbesuch mit dem Slogan ""Tritt hernieder und regiere uns wieder"" irgend etwas positives für jeden einzelnen gebracht hat.Er selbst musste dafür sogar bezahlen (Strafverfahren und andere wurden ebenfalls mit einem Strafverfahren in Mitleidenschaft gezogen",reichsbuerger_adjacent
"Themenkomplex Geistiger HorizontWas sie hier sehen, ist der geistige Horizont einiger sogenannter Patrioten. Er ist so weit, das er an der nächsten Raufasertapete endet. Mit ein Grund, warum das patriotische Lager so ist, wie es ist, warum es von vielen nur belächelt wird.",reichsbuerger_adjacent
"hlordioxid/MMS/CDL/CDS Artikel/Videoabsicherungen/Anwendungen/Erfahrungsberichte. Ausleitung von Impfstoffen und anderen GiftstoffenHolistische Gesundheit Heilung und AufklärungHier    Erklärungen, Ansichten und Erfahrungswerte von Chlordioxid1.Unt[erschied MMS und CDL und CDS/ Zähneputzen mit MMS & DMSO/Zahnbehandlung, Zahnschmerzen, Abszess Behandlung mit MMS und DMSO2.](                     [Dr. A. Kalcker3.Extrem News das könnte alles](         [Verändern. Chlordioxid.4.Alles, was Sie über Chlordioxid wissen möchten/CDL On](      [line Spezial mit Dr. A. Kalcker5.""Chlordioxidlösu](        [ng (CDL"" Zusammenfassend einfach erklärt6.Andreas](            [dikament7.Soforthilfe durch CDL (](     [MMS | Was ist das?13.Bolivien: Chlordioxid auf Erfolgst](     [our14.Vortrag Andreas Kalcker über seine Erfahrungen mit Cov](     [id1915.Anzeige gegen Spahn: Türkei](             [tel zu 16.](     [17.Chlorine Dioxine CDL Corona PDF18.CDL Archiv19.Chlordioxidlösung (CDL](   [selber herstellen 20.Andreas Kalcker (""Gesundheit verboten - unheilbar war ge](      [stern"" Chlordioxid21.Erklärung: Untersc](        [hied zwischen MMS und CDL/CDS. Wirkweise,Nachteile und Unterschiede22.So wird Chl](    [ordioxid (CDL vom Tierarzt empfohlen23.Klinische Studie zur oralen Anwe](                 [-19 gestartet24.Wirksames Mittel wird weiter verschwiegen CDL/MMS Kurzerklär](    [ung Andreas Kalcker 25.MMS – Gift oder Medizin?  Vortra](         [g von 201526.Anleitung zum richtigen Umgang m](               [uelle und PDF27.Prof. Andreas Kalcker,CDL (Chlordioxid](   [, Impfungen & Autismus28.Oxidativer Stress, die beste A](          [fektionen29.Warum ClO2 gegen Covid 19 hilftAlles30.C](       hlordioxidlösung (CDL"" Zusammenfassend ei 31.-Imen n   von Ärzten bestätigt10.HaftungsausschlussHier kommen Sie zu unserer vollständigen InhaltsangabeWir sind nun auf folgenden Plattformen vertreten🦋‍‍‍GETTR|Odysee|🪴Tik Tok|YouTube |Instagram",reichsbuerger_adjacent
"in wichtiger Hinweis/Mitteilung.Wir möchten darauf hinweisen, dass wir im privaten Rahmen keine Kanalbesucher anschreiben.Es sei, es ist im privaten Rahmen abgesprochen. Wie Sie wissen, haben wir den Kontakt bot und wir sind zudem auf In rreichbar.Sollten Sie von Accounts ohne gemeinsame Absprache von unserer Seite aus angeschrieben werden, so bitten wir Sie diese Accounts direkt zu melden und zu blocken.Telegram kümmert sich anschließend um diese Fälle.Wir bedanken uns und wünschen Ihnen erfolgreichen Tag.Ihre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Themenkomplex WetterwaffenDoch keine Spinnerei? HAARP in EU-Papier als Klima-Waffensystem bezeichnet‼Im Archiv des Europaparlaments haben aufmerksame Bürger ein Dokument aufgestöbert, dem sie angesichts der zunehmenden Unwetterkatastrophen große Bedeutung zumessen. Darin wird über eine Reihe von Waffensystemen berichtet, unter anderem über das US-amerikanische HAARP System, das als nicht tödliche Waffe eingeordnet wird. Offiziell – und auf offenkundig von Desinformanten betriebenen Seiten wie Wikipedia – handelt es sich um ein Forschungsprojekt. Jegliche anderslautende Vermutung galt bislang als “Verschwörungstheorie”.      ent",reichsbuerger_adjacent
"Themenkomplex StaatsleugnerHier nochmal ein paar Fakten, die ich mit Herz und Liebe und Effet all jenen sogenannten Patrioten um die dämliche Hackfresse schlage, die meinen das es kein ""Deutschland"" gab, dass das Deutsche Reich kein Staat wäre. In der Reichsverfassung wurde im Artikel 3 von Deutschland gesprochen.Im Reichsgesetzblatt von 1913  Nr. 48 werden nicht nur Reichsgesetze verkündet sondern auch völkerrechtliche Verträge.Man schaue mal genau hin in wessen Namen diese Verträge geschlossen wurden. Wer behauptet das es kein Deutschland gab, wer behauptet das Deutsche Reich sei kein deutscher Staat, der ist ein Antideutscher, und zwar im gleichen Stile wie jene die sich bisher auch offen dazu bekannten. Aufzuzählen wäre da die Antifa, Claudia Roth sowie viele andere auch.",reichsbuerger_adjacent
"Themenkomplex Nord-Stream II US-Investigativjournalist Hersh: USA stecken hinter Nord-Stream-AnschlägenLaut dem US-amerikanischen Investigativjournalisten Seymour Hersh stecken die USA hinter den Anschlägen auf die Nord-Stream-Pipelines. Demnach haben Taucher der US-Marine im vergangenen Sommer Sprengstoff unter den Pipelines platziert, der drei Monate später von den Norwegern aktiviert wurde.   ",reichsbuerger_adjacent
Themenkomplex VerwachsungenDas grüne T-Shirt scheint schon mit der Haut verwachsen zu sein...Ob seine Gesprächspartner analog zum Pathologen sich Tigerbalsam unter die Nase schmieren?,reichsbuerger_adjacent
"Ihr Lieben, da letzte Woche so ein starkes Interesse bestand!! Möchten wir Euch aufklären,wer oder was ist der Verein des Weltfriedens ?Und was bedeutet, die deutsche Staatsangehörigkeit für uns Alle ?! Wir beantworten eure Frage sehr gerne , Freiheit wird aus Mut gemacht 🤝Hier der Einladungslink",reichsbuerger_adjacent
"Themenkomplex Reichsvereinsgesetz 1908Auf dieses Gesetz, explizit § 4 beruft sich die wk-sachsen.orgDas ist absoluter Bullshit ‼      en",reichsbuerger_adjacent
"Themenkomplex TransparenzFortsetzungDas angebotene ""Souveränitätspaket"" beinhaltet interessante Positionen, wie z.B. unter Punkt 4 den Staatsangehörigkeitsausweis (Gelber Schein.Der Verkäufer dieses Pakets, Erhard Golla, ist auch extrem aktiv in der Fake-Wahlkommission mit dem neulich gesperrten Internetauftritt wk-sachsen.org, der jetzt wieder frei geschaltet wurde. Dort spricht er sich immer gegen den Gelben Schein aus.Nennt man das Doppelmoral? Im Bild 1 die Leistungen des Souveränitätspaket. Im Bild 2 zu sehen die gestellte Rechnung.Im Bild 3 zu sehen die Überweisungen in Gänze.To be continued",reichsbuerger_adjacent
"Von wegen „keine Kriegsparteien“: In der Ukraine kämpft eine enorme westliche Schatten-Armee! Oberst Reisner vom Österreichischen Bundesheer eröffnete bei einer Podiumsdiskussion kürzlich, dass sich eine „große Zahl“ von eigentlichen NATO-Soldaten in der Ukraine im Kampfeinsatz befinde. Offiziell würden diese ihre Uniform ausziehen, einen Vertrag unterschreiben und wären somit Ukraine-Söldner. Es ist aber davon auszugehen, dass viele Spezialeinheiten mit „wohlwollender Duldung“ und voller Unterstützung ihrer Regierungen im Kampfeinsatz gegen Russland sind. Folgen Sie uns auf Telegram: ",reichsbuerger_adjacent
Live mit Jenny FriedheimWahrheit-Klartext-Fakten × 2 Bitte abonnieren und teilnehmen!Danke Euch !!!08.02.22 um 19.00 Uhr    L   Darf sehr gerne geteilt werden!  @Faktenkanal_Ralph  ,reichsbuerger_adjacent
"4 x kommt hier ein Name vor!Frag den Scholz und wenn er nicht gerade wieder an Demenz leidet wird er euch den Namen benennen, welcher in allen drei Screenshots vorkommt.Zudem sind sie Gründungsmitglied und treibende Kraft beim Entstehen der US FED Notenbank, Mitbegründer des Völkerbundes in welchem jedes Mitgliedsland eine private Zentralbank und den Goldstandard akzeptieren musste. Auch bei Gründung der UN waren sie eine treibend Kraft.",reichsbuerger_adjacent
"arum es uns glücklich macht, höflich zu sein (Q(Quelle2/ArteHolistische Gesundheit Heilung und Aufklärung""Wer höflich und freundlich ist, schafft ein Gefühl der Sicherheit und des Vertrauens. Das macht jedes Gespräch, jede Begegnung für alle angenehm. Freundlichkeit und Großzügigkeit anderen gegenüber sind nicht nur wichtig für ein gutes Zusammenleben, sondern der Einzelne wird dadurch nachweislich glücklicher und zufriedener. Forscher der Universitäten Lübeck und Zürich sowie der Feinberg School of Medicine in Chicago haben in einer Studie herausgefunden, dass Großzügigkeit gegenüber Mitmenschen direkt mit dem Glücksempfinden verknüpft ist.Lin[k zum weiterlesen hier:Wi](        Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"mpathie-Verringerung: Schmerzmittel wie Paracetamol dämpft unser Mitgefühl deutlich(Q(QHolistische Gesundheit Heilung und Aufklärung""Schmerzmittel mit Nebenwirkungen: Paracetamol schwächt offenbar unser Mitgefühl. Paracetamol gehört zu den am verbreitetsten Schmerzmitteln in Deutschland. Gesundheitsexperten raten davon ab, zu oft auf das Medikament zurückzugreifen. Schließlich kann es unerwünschte Nebenwirkungen haben. Forscher aus den USA haben bei dem Präparat eine Wirkung entdeckt, die sich auch auf das menschliche Zusammenleben auswirken kann: Paracetamol senkt unser Mitgefühl.Bisher unbekannte Nebenwirkung von Paracetamol Kopfschmerzen, Zahnschmerzen, Fieber: Paracetamol ist eines der Schmerzmittel, die hierzulande am häufigsten zum Einsatz kommen. Das Medikament ist ohne Rezept in der Apotheke erhältlich und kostet nicht viel. Lange Zeit galt die Arznei als unbedenklich, doch Paracetamol ist gefährlicher als gedacht.""Lin[k zum weiterlesen des ArtikelsUr](    e     Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"!!!!Breaking News!!!! Pfizer Chef Dr. Albert Bourla  von einem englischen Gericht verurteilt... Wegen irreführender Kommentare zur Kinderimpfung im BBC Interview vom 2. Dezember 2021.Das Urteil erging wegen dieses Kommentars: Dr. Bourla äußerte sich nachdrücklich zu den Vorteilen der Impfung von Kindern unter 12 Jahren und sagte: ""Meiner Meinung nach gibt es keinen Zweifel, dass die Vorteile voll und ganz dafür sprechen, dies zu tun [Impfung von 5- bis 11-Jährigen im Vereinigten Königreich und in Europa]"".  Risiken oder potenzielle Nebenwirkungen wurden mit keinem Wort erwähnt, und es wurden auch keine anderen Faktoren als die offensichtlichen Vorteile berücksichtigt: Dr. Bourla war schlicht und einfach davon überzeugt, dass wir im Vereinigten Königreich Millionen weiterer Kinder impfen sollten.Bitte folgt uns auf Telegram oder auf Quelle ",reichsbuerger_adjacent
"Themenkomplex ""Du kannst auch was tun""Nochmals eine Erinnerung in Bezug auf Panzerlieferungen der BRD an die Ukraine.Jeder kann eine Beschwerde einlegen, dazu braucht man kein Anwalt sein. Wenn Behörden euch beschäftigen, beschäftigt sie einfach zurück.Des weiteren habt ihr damit ein Dokument erstellt, mit dem ihr für den Fall der Fälle belegen könnt, das ihr gegen diese Lieferungen wart.  Die PDF herunterladen und mit seinen eigenen Daten versehen und an die vorgegebene Adresse verschicken. Ab 5.45 Uhr wird zurück beschäftigt ‼",reichsbuerger_adjacent
"Jeder redet über den aktuellen Ukraine-Russland-Konflikt. Den meisten Menschen aus unserer Community ist bekannt, dass die USA die Hauptprofiteure dieses Konfliktes sind. Dennoch ist dieser Konflikt nur ein Nebenkriegsschauspielplatz, auch wenn er sehr grausam ist.Es geht um nichts Geringeres, als die Weltherrschaft und die USA sehen ihren Konkurrenten Nr. 1 nicht in Russland, sondern in China. Auch über China haben wir viele Dinge gehört, die uns in ein bestimmtes Framing treiben sollen. Mit seiner eigens angestellten Studie vermittelt uns Dr. Rainer Rothfuß ein ganz anderes Bild von China und bringt uns alle der Erkenntnis einen weiteren Schritt näher. Seid LIVE dabei, am 07.02.2023 um 20:04 Uhr auf , ,  und .Wir freuen uns auf Euch! 🤗",reichsbuerger_adjacent
Mein Tipp für 20.00 Uhr‼,reichsbuerger_adjacent
"300 Jahre zur Weltherrschaft: Der Weg der Globalisten in Russland, den USA und in EuropaEine Grundsatzsendung mit 43 Minuten Länge:  === Folgt mir auf Telegram:  ===",reichsbuerger_adjacent
"Themenkomplex ErdbebenDer US - Journalist Stew Peters twitterte in Bezug auf die Erdbeben in Syrien folgendes. Syria - That wasn’t an earthquake.It was a weapon.Syrien - Das war kein Erdbeben.Das war eine Waffe.Meiner Meinung nach müsste das dann auch für das Beben in der Türkei gelten. Manch einem kommt da unweigerlich Fukushima in den Sinn, warum auch immer..... ",reichsbuerger_adjacent
"Themenkomplex TransparenzFortsetzungViele Menschen fragen sich jetzt, ob das was Frau Roßberg dem Hajo geschrieben hat, überhaupt Substanz hat oder nicht. Diese Frage ist ziemlich eindeutig zu beantworten, ja es hat Substanz. Die Geschädigte würde sich Strafbar machen, hätte sie eine Strafanzeige aufgrund falscher Verdächtigung gemacht, die vielleicht auf rein persönlichen Motiven basieren könnte. Es muss der Staatsanwaltschaft schon was handfestes vorliegen, das diese die Ermittlungen an eine andere Staatsanwaltschaft wegen Zuständigkeiten übermittelt. Interessant ist das Datum der Anzeige, der 28.03.2022. Warum ist das Interessant? Nun, es ergeben sich daraus folgende Fragen.  1. Wann hat Frau Roßberg dem Hajo diese PN geschickt? 2. Wann wurde sie selbst darüber in Kenntnis gesetzt? 3. Wer wusste noch davon?Auch diese Fragen werden Beantwortung finden.",reichsbuerger_adjacent
"Ihr Lieben, da letzte Woche so ein starkes Interesse bestand!! Möchten wir Euch aufklären,wer oder was ist der Verein des Weltfriedens ?Und was bedeutet, die deutsche Staatsangehörigkeit für uns Alle ?! Wir beantworten eure Frage sehr gerne , Freiheit wird aus Mut gemacht 🤝Hier der Einladungslink",reichsbuerger_adjacent
"luorid ist es nun schlecht oder doch Gesund?Holistische Gesundheit Heilung und AufklärungGibt es einen Unterschied zwischen dem ""guten"" Fluorid und dem ""schlechten"" Fluorid, wenn es um unsere Gesundheit geht?Kann Fluorid positive oder negative Auswirkungen auf Zähne, Zirbeldrüse, Knochen und Herz haben?In diesem Beitrag werden wir das Rätsel hinter dem guten und schlechten Fluorid lösen.L[ink zum weiterlesen. Swipe durch die Bilder und lasse uns gern ein Like und/oder Kommentar da.‍](               Für mehr wichtige Infos Besuchen Sie uns auf der Holistischen Gesundheit Heilung und Aufklärung.",reichsbuerger_adjacent
Einfach göttlich. Wunderbare Parodie.Holistische Gesundheit Heilung und Aufklärung,reichsbuerger_adjacent
"Themenkomplex Einsatz von NuklearwaffenWestliche Medien und Politiker reden ja immer davon, das Russland Nuklearwaffen einsetzen könnte, sollte man Russland zu nah auf den Pelz rücken. Ich möchte an dieser Stelle daran erinnern, das Willy Wimmer damals aus einer Nato-Übung ausstieg als es hieß, dass Atombomben auf Deutsche Städte geworfen werden sollten, sofern russische Bodentruppen im Vormarsch auf deutschem Boden wären. Wer also wird Nuklearwaffen einsetzen und hat dieses schon auf deutschem Boden geübt?",reichsbuerger_adjacent
"Jeder redet über den aktuellen Ukraine-Russland-Konflikt. Den meisten Menschen aus unserer Community ist bekannt, dass die USA die Hauptprofiteure dieses Konfliktes sind. Dennoch ist dieser Konflikt nur ein Nebenkriegsschauspielplatz, auch wenn er sehr grausam ist.Es geht um nichts Geringeres, als die Weltherrschaft und die USA sehen ihren Konkurrenten Nr. 1 nicht in Russland, sondern in China. Auch über China haben wir viele Dinge gehört, die uns in ein bestimmtes Framing treiben sollen. Mit seiner eigens angestellten Studie vermittelt uns Dr. Rainer Rothfuß ein ganz anderes Bild von China und bringt uns alle der Erkenntnis einen weiteren Schritt näher. Seid LIVE dabei, am 07.02.2023 um 20:04 Uhr auf , ,  und .Wir freuen uns auf Euch! 🤗",reichsbuerger_adjacent
"Themenkomplex LGBTQEs gab Menschen, die hatten eine Vorahnung....",reichsbuerger_adjacent
"Themenkomplex TransparenzWer wie was, wieso weshalb warum, wer nicht fragt bleibt dumm...Viele Menschen haben sich gefragt, warum die kurze Zusammenarbeit von Ina Roßberg und Hajo dann neulich doch so schnell beendet wurde. Hat man mir den Grund dafür übermittelt? Interessant ist die Behauptung von Frau Roßberg, das der Herr Golla, übrigens ein Protagonist der Fake-WK, Gelbscheinträger sein soll.Na wenn das stimmt, dann haben die Jungs der Fake-WK nun tatsächlich Erklärungsnot, bietet der Herr Golla doch in seinem sogenannten ""Souveränitätspaket"" seiner Kundin doch auch noch den Gelben Schein gegen eine Geldleistung an. Traurig bin ich darüber, das Hajo, welcher eindeutig von alledem in Kenntnis gesetzt wurde, daraus aber nicht die notwendigen Konsequenzen zog. Ich stimme Trump zu, der Sumpf ist tiefer als ich dachte....",reichsbuerger_adjacent
"Themenkomplex EndhomogenisierungHerr Maaßen spricht es deutlich an.Der Bevölkerungsaustausch ist keine Fiktion, er ist Real, er wird physisch als auch de jure betrieben.De jure durch Änderung im Staatsangehörigkeitsrecht.",reichsbuerger_adjacent
"Themenkomplex KernkompetenzenDie Kernkompetenzen der sichtbar agierenden Patrioten sind nicht zwingend immer das Völkerrecht oder das Staatsrecht. Manch einer sieht seine Kernkompetenz auch im Anlagebetrug oder anderen krummen Geschäften. Ich finde das ganz normal, wieso sollte das patriotische Lager im Schnitt ganz anders aufgestellt sein als der Rest der Gesellschaft? Wichtig hierbei ist nur eines. Man sollte früh genug erkennen, wann von patriotischen Themen zu finanziellen Themen gewechselt wird. In der Regel sind Patrioten nicht dem Materialismus verfallen, Ausnahmen bestätigen diese Regel ",reichsbuerger_adjacent
Zitat der Woche,reichsbuerger_adjacent
"Die satanischen Billionäre sind sehr beschäftigt mit dem Bau digitaler Gefängnisse, bevor die Massen aufwachen. Denn sobald sie wach sind, haben sie Angst vor der Massenrebellion gegen die 1%. Deshalb lenken sie uns mit Kriegen, Chaos, Armut, Vergiftung unserer Körper und besonders unseres Geistes mit ihren pharmazeutischen/industriellen Produkten von Tod und Leid ab. (Eine Warnung von Gienn Beckt.me/FGNews07",reichsbuerger_adjacent
"Themenkomplex Wahlkommission(en""Es kann nur einen geben"" lautet der Wahlspruch des Highlander Nochmal zu den Wahlkommissionen. Einige von euch werden sich noch an meine Videos zu den Wahlkommissionen erinnern. Es fiel auf, daß es  in Bezug auf die Wahlkommission Sachsen zwei Internetseiten gab, die sich sehr ähnelten. Die eine mit der wk-sachsen.info Domain ist noch Online, die andere mit der .org Domain war ja gesperrt worden. Dafür gibt es Gründe, die ich auch bedingt durch ausgeprägte Kommunikation erfahren durfte. Ich versuche das ganze mal sehr vereinfacht zu erklären. 2017 gründete sich die ursprüngliche Wahlkommission Sachsen als eine Art ""Heimatverein"" im Vereinsrecht der BRD, also völlig Legal ohne irgendwelche Legitimationen von irgendeinem König oder Fürsten zu benötigen. Innerhalb dieses Vereins beschäftigten sie sich dann mit dem Gemeinderecht aus der Kaiserzeit und haben sozusagen „spielerisch“ Wahlen zu den Gemeinden im Rahmen des damaligen Gemeinderechtes abgehalten. Natürlich hat all das keine aktive Rechtskraft und diese Original Wahlkommission behauptet auch nicht, das sie mit ihren Aktivitäten irgend eine Gemeinde aus dem BRD-Verband heraus reißen kann, sie haben auch nicht vor mit ihren Aktionen das DR wiederherzustellen, ihnen ist auch bewusst, daß sie das aktuell nicht können. In Sachsen haben sie inzwischen aber eine Art „Planspielstruktur“, ohne die Anwendung von Vereins- und Parteirecht geschaffen, die auf Gemeindeebene einsetzbar wäre, sollte es zu einer Änderung im Lande kommen, die dieser Struktur bedingt.Grundlegend hierzu ist die Erkenntnis, daß es zu keinem Macht-Vakuum kommen darf, auch nicht auf Gemeindeebene und das es Menschen braucht, die sich mit dem Recht und der Struktur im Rahmen der Subsidiarität auskennen, die diese Rechtsmaterie beherrschen und sich darin einig sind, selbst geschaffene Strukturen zu respektieren, auch wenn es innerhalb einer Art „Planspielstruktur“ organisiert ist.Fazit: Diese Gruppe, ja diese Wahlkommission mit den Internetseiten wk-sachsen.info ist vollkommen legal, sie ist das Original. Die .org Domains wurden sozusagen gekapert.Die andere Truppe hingegen, also jene deren Internetpräsenz neulich abgeschaltet war ist eine Kopie, die von sich selbst behauptet, sie würden mit ihrer Arbeit selbst die Veränderung sein und diese auch herbeiführen können. Dieses wird sehr deutlich, wenn man mal einen derer Vorträge beiwohnt und genau zuhört.Im Rahmen dieser Vorträge wird auch manchmal ein sogenanntes ""Rechtsmärchen"" erwähnt und wie der Name es schon sagt, es ist ein Märchen welches vorgaukelt, man käme mit dem ALR (Allgemeines Landrecht Preußischer Staaten dem Ziel näher.Das ist natürlich nicht nur vollkommener Bullshit, es ist zudem auch gefährlich denn genau darin erkennt die BRD sogenannte Umsturzpläne oder Umsturzversuche. Wir erinnern uns, wer wurde verhaftet? Richtig, Prinz Reuss, der ja im Rahmen der Vorträge dieser ""Raubkopie"" oftmals angeführt wurde. Dieses dubiose Abbild der echten Wahlkommission, so hatte ich ja auch mal angeführt, versucht sich über den §4 des Reichsvereinsgesetz von 1908 zu legitimieren, ein Privatrecht, welches derzeit nicht in Anwendung ist. Ferner ist die Berufung auf diesen Paragraphen selbst dummes Zeug, wäre dieses Gesetz sogar in Anwendung. Das hatte ich unlängst ja schon ausführlich erklärt. Summa summarum: Es bleibt noch offen, ob durch die Agitationen des Plagiats genau das erreicht werden soll oder nicht.Die Indizien jedenfalls verdichten sich langsam zu Beweisen.Ich jedenfalls bevorzuge immer das Original und gebe mich nicht mit einem Plagiat zufrieden, wie ihr das handhabt liegt ganz allein bei euch.Ich hoffe, daß ich mit diesem Artikel ein wenig Licht ins Mysterium ""Wahlkommissionen"" gebracht habe und das die Menschen lernen, das Original von der Täuschung zu unterscheiden. Damit das noch besser geschehen kann, muss das Original etwas Mithilfe leisten in der Form, daß die Menschen das auch viel deutlicher erkennen können. Lieben Gruß, Heinrich",reichsbuerger_adjacent
HEUTE IST WIEDER MONTAG ... Folgt uns  ,reichsbuerger_adjacent
"unnytime, die heutige Familienverhältnisse.Familie kann in der heutigen Zeit so kompliziert sein. W[ir sind nun auch auf InstagramHo](     listische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"usammenfassung/Inhaltsangabe Zeolith/Bentonit Entgiftung von Gift und Impfstoffen.1.Z[eolith – Arten, Mythen und Wirkung2](       [llen3.Entgiftung und Reinigung mit V](      [ulkangestein4.Zeolith-Klinoptilolith - effektive Entsäu](    [erung & Entgiftung5.Heilmittel der Natur (5: Natur-Zeolith (Klinopthilo](            ["" 6.Zeolith - ein Wundermittel7.Entgift](  [ung und Reinigung mit Vulkangestein8.5G, Aluminium](            [nahmen9.Zeolith ist ein wahres Ausleitungs]( [wunder10.Glyphosat mit einfachen Mitteln Ausleiten.11.Be](          [wirkungen Zentrum der Gesundheit12.Zeolith](   [Dosierung und Anfragen13.Zeolith / Was ist Zeolith- Klinoptilolith?14.Die Ära der Entgiftung ist im vollen Gange.](                    [von Giftstoffen und Schadstoffen.15.Zeolit](   [h und die Zirbeldrüse - das sollten Sie wissen!!!16.Zeolith -]([Aufatmen durch innere Reinigung 17.Blog-Beit](              rag für unsere Community über die Vorteile vo r k Sie  er s haltsangabeWir sind nun auf folgenden Plattformen vertreten🦋‍‍‍GETTR|Odysee|🪴Tik Tok|YouTube |Instagram",reichsbuerger_adjacent
"Die Medien sind wie Harry Potter & Rosamunde PilcherLisa Fitz in Höchstform. Die Frau hat eindeutig mehr Abonnenten verdient, also haut rein. ",reichsbuerger_adjacent
"Maria Sacharowa schreibt folgendes: Der Kommentar des stellvertretenden russischen Außenministers S. A. Ryabkov an Vzglyad und die Nachrichtenagentur RIA Novosti zum 20. Jahrestag der Rede von US-Außenminister Oberst Powell vor dem UN-Sicherheitsrat am 5. Februar 2003, in der der Irak beschuldigt wurde, Massenvernichtungswaffen herzustellen, wurde zu einem Vorwand für die anschließende amerikanische Invasion S.A. Ryabkov: Das Bild von Colin Powell, der ein Reagenzglas mit angeblichem Milzbrandpulver demonstriert, ist längst ein geläufiges Wort als Verkörperung der Heuchelei und der Überzeugung der herrschenden US-Elite von ihrer eigenen Straflosigkeit, von dem unbestreitbaren Recht, arrogant zu lehren den Rest der Welt, indem sie Gewalt gegen einen absichtlich schwachen Feind anwenden, um ihre eigene globale Hegemonie aufrechtzuerhalten.Obwohl Colin Powell als anständiger Mensch in Zukunft nicht verbergen musste, dass er gezwungen war, dem Befehl zu folgen. Wir geben sogar zu, dass er von einem Gewissen gequält wurde, das im Prinzip nicht charakteristisch für die amerikanische politische Klasse ist, insbesondere für die Führer der modernen Generation.Angesichts der sich schnell ändernden geopolitischen Realitäten sind die Vereinigten Staaten jetzt objektiv nicht in der Lage, jedes Mal, wenn sie es wollen, ohne schwerwiegende Folgen für sich selbst auf die Anwendung von Gewalt zurückzugreifen. Die schändliche Flucht aus Afghanistan hat die Grenzen der militärischen Fähigkeiten Amerikas umrissen, aber nicht verdrängt, wie die amerikanische Intervention in der Ukraine als Konfliktpartei, alte Gewohnheiten und Manieren, aggressive und ungezügelte Rhetorik belegen.Aber die Amerikaner werden noch auf neuen Gleisen umbauen müssen, um das Freizügigkeitssyndrom loszuwerden, das sich im Reagenzglas-Skandal so deutlich manifestiert hat. Ebenso wie mit Russland und China zu rechnen, anderen großen internationalen Akteuren, die eine gerechtere multilaterale Weltordnung gestalten. Hoffen Sie nicht, dass die Erinnerung an das, was vor 20 Jahren passiert ist, im Treibsand der modernen Geschichte begraben wird.",reichsbuerger_adjacent
"Комментарий заместителя Министра иностранных дел России С.А.Рябкова изданию «Взгляд» и информагентству РИА Новости в связи с 20-летним «юбилеем» выступления госсекретаря США К.Пауэлла 5 февраля 2003 г. в СБ ООН с обвинениями Ирака в создании ОМУ, ставшими предлогом для последующего американского вторжения С.А.Рябков: Образ Колина Пауэлла, демонстрирующего пробирку с порошком будто бы сибирской язвы, давно стал нарицательным как олицетворение лицемерия и убеждённости правящей элиты США в собственной безнаказанности, в непререкаемом праве высокомерно поучать остальной мир, применяя силу против заведомо слабого противника ради сохранения собственной глобальной гегемонии.Хотя, как человек порядочный, Колин Пауэлл не скрывал в дальнейшем, что вынужден был солгать, выполняя приказ. Допускаем даже, что его мучила совесть, которая американскому политическому классу, особенно деятелям современной генерации, не свойственна в принципе.В стремительно меняющихся геополитических реалиях США ныне объективно не в состоянии прибегать всякий раз к силовому сценарию, когда им вздумается, без серьёзных для себя последствий. Позорное бегство из Афганистана очертило пределы военных возможностей Америки, однако не отвадило, свидетельство чему – американское вмешательство на Украине в качестве стороны конфликта, от старых повадок и замашек, агрессивной и разнузданной риторики.Но перестраиваться на новые рельсы, избавляясь от синдрома вседозволенности, столь ярко проявившегося в скандале с пробиркой, американцам всё-таки придётся. Как и считаться с Россией и Китаем, другими крупными международными игроками, формирующими более справедливый многосторонний миропорядок. Не стоит надеяться, что память о произошедшем 20 лет назад удастся похоронить в зыбучих песках новейшей истории.",reichsbuerger_adjacent
"„Der Plötzliche Kindstod ist Ende der 1960er-Jahre erfunden worden und es ist vielleicht kein Zufall, dass das kurz vor Beginn der großen Impfkampagnen war, die Anfang der 1970er-Jahre begonnen haben.“Dr. Reuther geht mit der modernen Medizin hart ins Gericht: Im Zuge der Impfkampagnen wurden hauptsächlich Kinder geimpft und eine der Nebenwirkungen der Impfstoffe ist, dass Kinder plötzlich tot im Kinderbett liegen…  Um das zu vertuschen, kam die Todesdiagnose „Plötzlicher Kindstod“ sehr gelegen. Ebenso wie die Diagnose „Plötzlicher Erwachsenen-Tod“ (Kürzel SADS/SUDS nun bei den Covid-Impfungen.Hier die ganze Sendung „Elsa AUF1“ mit  Dr. Gerd Reuther ansehen:   Dr. Gerd Reuthers aktuelles Buch „Letzte Tage – verkannte und vertuschte Todesursachen berühmter Personen“ finden Sie hier im AUF1-Shop: ",reichsbuerger_adjacent
Ich sehe hier einen V-Mann.....,reichsbuerger_adjacent
"BILD-Zeitung unterstützt Fahndung nach Antifa-Terroristen Johann Guntermann!Er ist der Kopf der Guntermann-Engel-Bande, der zahlreiche Überfälle auf politische Gegner vorgeworfen werden - mit Hämmern und anderen gefährlichen Gegenständen. Während sich seine Komplizin Lina Engel seit dem Jahr 2021 vor dem Oberlandesgericht Dresden verantworten muss und in Untersuchungshaft sitzt, ist Guntermann seit Sommer 2020 im roten Untergrund. Es gibt mehrere Haftbefehle, das BKA fahndet nach ihm, dennoch wird seine DNA immer wieder an Tatorten neuer Antifa-Überfälle gesichert. Vieles spricht dafür, dass er sich noch in Deutschland aufhält.Dass die BILD-Zeitung Guntermann nun prominent in den Vordergrund rückt, ist gut und wichtig: Jeder sollte sein Gesicht kennen, auch wenn sich Guntermann, der alles andere als dumm ist, sicherlich mittlerweile optisch verändert hat und falsche Personalien nutzt. Früher oder später wird ihn jemand erkennen!FREIE SACHSEN: Folgt uns für alle Nachrichten! ",reichsbuerger_adjacent
"Themenkomplex Okkupation/BesatzungImmer noch liegt bezüglich der Okkupation, auch Besatzung genannt, viel Unwissen vor.Mit diesem Posting möchte ich eigentlich mal einen Schlussstrich unter diesen Themenkomplex ziehen, mal sehen, ob mir dieses Ziel gelingt.Hier nun die Fakten, um mal mit dem Irrglauben aufräumen zu können.Irrglaube: Ein Land muss vollständig vom Feind besetzt sein, um als besetzt zu gelten.Das ist grober Unfug und auch aus historischer Sicht schon falsch.Früher galt es, die Hauptstadt eines Landes, also das politische Zentrum eines Staates zu kontrollieren, um diesen Staat niederringen zu können, ihn dann zu beherrschen.Dem zugrunde liegt die Logik und das Wissen darüber, dass es reicht, die steuernden Eliten und Ämter eines Staates zu kontrollieren, das besiegte Volk ist erfahrungsgemäß ohne eine eigene steuernde Spitze kopflos und dem Feind letztendlich hilflos ausgeliefert.Wer glaubt, dass es heute nicht mehr so ist, sollte sich fragen, warum wir denn die aktuellen Probleme haben, wie wir sie vorfinden.Daraus resultiert logischerweise, dass es ausreicht nur einen Teil eines Staates besetzt zu halten, sofern man die politische steuernde Elite entweder entfernt hat oder diese für sich und seine eigenen Ziele (Ziele des Besatzersgewinnen konnte.In der HLKO wird dieses Prinzip ersichtlich im Artikel 43.Da heißt es:""Nachdem die gesetzmäßige Gewalt tatsächlich in die Hände des Besetzenden übergegangen ist....""Ganz deutlich wird das ganze dann noch durch die Einschreibung des Besatzerecht in das Recht des besetzten Staates.Hier kann man wunderbar die BRD anführen.Mit dem Deutschlandvertrag endete zwar formell die Besatzung, aber das Besatzerrecht hatte sich unlängst in deutsches Recht hineingeschrieben. Professor Foschepoth sprach darüber 2013 im ÖR.Sehen kann man das Besatzerrecht auch im Grundgesetz im Artikel 120, im Artikel 133.Im Artikel 139 des Grundgesetzes wird es noch deutlicher.Zitat:""Die zur ""Befreiung des deutschen Volkes vom Nationalsozialismus und Militarismus"" erlassenen Rechtsvorschriften werden von den Bestimmungen dieses Grundgesetzes nicht berührt.""Fazit:Sowie sich die Steuerung eines Staates in den Händen eines anderen Staates befindet, und ein Staat wird durch Gesetze gesteuert, so spricht man von einer Okkupation, sofern diesem Prozess ein kriegerischer Akt nebst einer militärischen Teilbesetzung oder Vollbesetzung vorausging.Damit sollte dieser Punkt eigentlich abgehakt sein.Das Deutsche Reich war militärisch Teil besetzt und wenn man zu diesem Fakt den Waffenstillstandsvertrag von Compiegne, den Versailler Vertrag sowie die Weimarer Verfassung hinzufügt und auch den 14-Punkte-Plan des US-Präsidenten Woodrow Wilson, welcher die Einschleusung amerikanischen idealistischen Gedankenguts in die europäische Geopolitik zu Folge hatte berücksichtigt, dann kommt man an der Feststellung der Okkupation des Deutschen Reiches nicht vorbei.",reichsbuerger_adjacent
"Themenkomplex ZündstoffRegierung ""Marionetten"" genannt:Haben Sie die Mail geschrieben, Frau Weidel?Die AfD-Chefin Alice Weidel holt zum zehnten Geburtstag ihrer Partei eine alte E-Mail ein. Darin wird die Regierung als ""Schweine"" und ""Marionetten"" beschimpft. Stammt sie von ihr?Vor knapp zehn Jahren gründete sich die AfD im hessischen Oberursel. Fast genauso alt ist eine brisante E-Mail im Reichsbürger-Sprech, die die heutige Spitzenfrau der AfD, Alice Weidel, damals geschrieben haben soll.Schon 2017 von der ""Welt"" veröffentlicht, birgt die Nachricht neue Sprengkraft: Denn Weidel ist mittlerweile AfD-Vorsitzende. Auf ihrer Partei lastet in diesen Tagen der Verdacht einer Nähe zu Reichsbürgern. Un Weidel, die sich gern smart gibt und sich als liberal bezeichnet, hat sich zu der E-Mail nie klar verhalten. ZDF frontal hat sie deshalb erneut konfrontiert.n der E-Mail wird die Bundesregierung beschimpft als ""Schweine"" und ""Marionetten der Siegermächte"" - Deutschland sei ""nicht souverän"". Solche Töne sind sonst aus der Reichsbürger-Szene bekannt. In der E-Mail heißt es:""Der Grund, warum wir von kulturfremden Völkern wie Arabern, Sinti und Roma etc. überschwemmt werden, ist die systematische Zerstörung der bürgerlichen Gesellschaft als mögliches Gegengewicht von Verfassungsfeinden, von denen wir regiert werden."" Und weiter:""Diese Schweine sind nichts anderes als Marionetten der Siegermächte des 2. WK und haben die Aufgabe, das dt Volk klein zu halten indem molekulare Bürgerkriege in den Ballungszentren durch Überfremdung induziert werden sollen.""          ",reichsbuerger_adjacent
"„Die Reichsverfassung sichert der deutschen Nation die völkerrechtliche Existenz!“Nicht durch die Verfassungen der einzelnen Gliedstaaten!Durch ein gemeinsames Indigenat, wurde das Band der Deutschen fest verschnürt.Bismarck war der genialste Staatsmann!🟥=",reichsbuerger_adjacent
"Themenkomplex Versailler VertragKurze Gedanken zu diesem ThemaDie Deutschlandfrage ist nicht Staatsrechtlich zu lösen sondern Völkerrechtlich. Der Versailler Vertrag ist ein völkerrechtlicher Vertrag, er wirkt obgleich die monetäre Forderungen bereits beglichen sind, immer noch. Das sollten die Patrioten verstehen. Sind die Bedingungen aus diesem Vertrag mit beidseitigem Einverständnis (alliiertem und deutschem außer Kraft gesetzt, wird er also aufgelöst und für nichtig erklärt, gibt es auch die Möglichkeit für ein Deutschland als Ganzes in den Grenzen von 1914.Solange dieser Vertrag aber wirksam bleibt, sind in Bezug auf die territoriale Ausdehnung nur jene in diesem Vertrag deklinierten Grenzen möglich, also die auf der Potsdamer Konferenz genannte territoriale  Ausdehnung ""Deutschland in den Grenzen von 1937"".Die Patrioten wären gut darin beraten, diesen Sachverhalt zu durchdenken und letztendlich auch zu verstehen.",reichsbuerger_adjacent
"Themenkomplex PropagandaDas Bundespropagandaministerium hat mal wieder mit seinem Hetzinstrument ZDF zugeschlagen und was soll ich euch sagen, Herr Niemeyer ist jetzt ein Kopf der Reichsbürger....🤣Es ist also nur noch eine Frage der Zeit bis dieses Lumpenpack auch noch Herrn Gregor Gysi zum Reichsbürger erklärt, weil er 2013 auf Phönix ebenfalls behauptete, dass das Land immer noch unter Besatzungsstatut steht. Mein Fazit: Denen scheint das Wasser bis zum Halse zu stehen denn sonnst müssten sie solch eine Propaganda nicht bringen. Die Zahl derer die diesem Lumpenpack bis in den Tod folgen würden, scheint sich spätestens mit dem Themenkomplex ""Ukrainekrieg"" drastisch zu dezimieren. Ich bin richtig froh das die sowas bringen, denn ich werte diese Propaganda, auf die ein Göbbels richtig stolz wäre, als einen schleichenden Suizid des Systems. Von Intelligenz ist solch eine Aktion nämlich nicht geprägt, die Not ist förmlich spürbar. Weitermachen ihr kleinen süßen Mastdarmtouristen. Hi       ",reichsbuerger_adjacent
"Guten Morgen, ich wünsche allen Patrioten an den Bundesstraßen gutes Gelingen. ",reichsbuerger_adjacent
"Übersicht Stille Proteste an den StraßenB1 Region Hildesheim; Ortsausgang Groß Lafferde in Richtung Braunschweig / Samstag 11 - 13 Uhr B2 Schwedt a. d. OderSonntag 10-11 Uhr B5 Falkensee/ HavelparkSonntag 10 - 11 Uhr 20B7 Krauthausen, 99819Sonntag 10-11 Uhr B10 Pirmasens 66953 Südwestpfalz,          Rodalberstraße vorm WasserturmSonntag 10-11UhrB71 Nord (Lk Rotenburg Sonntag 10-11 Uhr B81 HeynburgDonnerstag 16-17 Uhr 30Sonntag 10-11 Uhr B86 SangerhausenSonntag 10 bis 11 Uhr B96  von Zittau bis BautzenSonntag 10-11 Uhr           B104 von Löcknitz Richtung Stettin Mittwoch 15 Uhr B107 SchmölenSonntag 10-11 Uhr B185 Dessau - OstOrtsausgang gleich hinter der MuldbrückeSonntag 11-12 UhrB210 Willhelmshaven,vor dem Hochhaus Ecke SchaarreiheSonntag 12-14 UhrB241 Goslar am OsterfeldSonntag 11-12 UhrB295 Simmozheim/Württemberg Samstag 11 - 13 Uhr L30 KönigsWusterhausenTreffpunkt Getränke Hoffmann Sonntag 10-11 Uhr",reichsbuerger_adjacent
Der Mann hat uns den Morgen versüßt.🥂Die Freude und den Humor lassen wir uns nicht nehmenWi[r sind nun auch auf InstagramIhr](     eHolistische Gesundheit Heilung und Aufklärung ,reichsbuerger_adjacent
"chweinefleisch: Ein gefährliches Risiko für Mensch und Umwelt / Prof. Dr. Walter Veith -- Rein & unrein: Was sagt die Wissenschaft? (QHolistische Gesundheit Heilung und AufklärungDie Entscheidung der EU-Kommission, Insekten in die industrielle Herstellung und Verarbeitung von Lebensmitteln zuzulassen, hat vor geraumer Zeit für Aufregung und Empörung gesorgt. Bis heute veröffentlichte Studien und Daten zu diesem Thema haben die Besorgnisse nicht ausgeräumt, was zu einer sehr gereizten Stimmung bei Verbrauchern geführt hat.Für uns ist es dennoch überraschend, dass viele Menschen in Deutschland nicht wissen, dass sie seit Jahrzehnten belastetes Fleisch, insbesondere von Schweinen, als Teil ihrer täglichen Ernährung konsumieren. Diese Tiere sind hochgradig mit gefährlichen Toxinen, Parasiten und schwerwiegenden Krankheitserregern infiziert, was das Risiko einer möglichen Übertragung auf den Menschen erhöht. Der Genuss dieses Fleisches birgt für den Menschen erhebliche Gesundheitsrisiken. Die Tiere haben eine Tendenz, alles Mögliche zu fressen, sogar Substanzen, die ihnen schaden. Diese giftigen Stoffe sammeln sich in ihrem Fettgewebe an und können für den Menschen langfristig gefährlich werden, wenn sie das Fleisch konsumieren.In der Vergangenheit haben Viren, wie Grippeviren, durch Mutation in den Schweinen selbst den Menschen infiziert. Heute sind solche Viren noch bedrohlicher und können leicht übertragen werden.Oftmals werden Schweine in engen Mastanlagen gehalten, was zur Verbreitung von Krankheiten beitragen kann. Unbehandelte, kranke Tiere gelangen unkontrolliert auf den Markt und stellen ein Risiko für die menschliche Gesundheit dar. Zudem können die von Schweinen ausgeschiedenen Giftstoffe für den Menschen gefährlich werden, wie das Beispiel des Dioxinskandals gezeigt hat.Zusammenfassend lässt sich sagen, dass der Konsum von Schweinefleisch potenziell gefährlich sein kann, sowohl für die menschliche Gesundheit als auch für die Umwelt. Wir sind überzeugt, dass das beigefügte Video einen neuen Perspektivwechsel bei vielen Menschen auslösen kann.You[Tube-Link (Lange VersionWi](  [Wir sind nun auch auf Instagram](     Ihre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Themenkomplex LebensmittelindustrieHey, da bekommt der Begriff ""Lebensmittelindustrie"" ganz neue Bedeutung....  ",reichsbuerger_adjacent
MARKmobil Aktuell - Bereit für direkte KonfrontationEin aktueller NachrichtenüberblickDie Themen00:29 Biden-Hausdurchsuchung: Neue Geheimdokumente01:14 Biden: Nächster Großspender verhaftet02:20 Admiral Bauer: NATO bereit gegen Russland04:01 Adam Schiff fliegt aus dem Geheimdienst05:10 Präsident: Serbien wird kein NATO-Mitglied06:43 Petr Pavel ruft Taiwan an07:14 Deutschlands Elite studiert in Beton,reichsbuerger_adjacent
"Themenkomplex Der moralisch überlegene WestenSowas machen nur Verbrechersyndikate, keine Staaten.",reichsbuerger_adjacent
So einfach ist das....Die Soldaten werden zu Söldnern gemacht und schon kann man behaupten die NATO ist nicht involviert ‼@SprachrohrderEifelt.me/heWhiteWolf,reichsbuerger_adjacent
"Ich liebe ja die klare und direkte Sprache dennoch verbuche ich vieles noch unter der Rubrik ""Säbelrasseln"".Wir wissen aber das aus ""Säbelrasseln"" schnell was anderes erwachsen kann, schließlich ist das Personal an den Waffen auch nur menschlicher Natur und somit mit Fehlern behaftet.Das gilt insbesondere für jene moralisch verkorksten Einheiten im Westen. ",reichsbuerger_adjacent
"Medwedew dazu, dass der Ukraine nun Raketen mit großer Reichweite geliefert werden:- Die Antwort im Falle von Angriffen auf die Krim und dem russischen Festland wird schnell, hart und überzeugend sein;- Russland setzt seiner Reaktion auf Angriffe keine Grenzen und ist bereit, je nach Art der Bedrohung alle Arten von Waffen einzusetzen;- Wenn die Ukraine versucht, die Krim anzugreifen, wird es Vergeltungsschläge geben, und die gesamte unter Kiewer Herrschaft verbleibende Ukraine wird in Flammen aufgehen;- Diejenigen, die glauben, dass die Entsendung von Waffen in die Ukraine dem Westen helfen wird, Verhandlungen aufzunehmen, liegen falsch.",reichsbuerger_adjacent
"Themenkomplex GeostrategieHalford Mackinder, ein englischer Geologe verfasste ein Buch welches 1904 veröffentlicht wurde. Die Herzland-Theorie, der Schlüssel zur Weltherrschaft.Hier als PDF, sehr Lesenswert‼Dieses Buch ist die Basis für das Verständnis der geopolitischen Agitationen. Zbigniew Brzezińskis Buch ""Die einzige Weltmacht, Amerikas Strategie der Vorherrschaft"" greift auf diese Analysen des Herrn Halford Mackinder zurück. Die maßgebliche Aussage ist: Wer Zentraleuropa und den zentralasiatischen Kontinent, also vornehmlich das Gebiet der russischen Föderation beherrscht, der beherrscht die ganze Welt. Mit dem 1. Weltkrieg sowie der russischen Revolution wurden die ersten Vorbereitungen zu dieser Weltherrschaft getroffen.Daraus resultiert, dass dieser Prozess umgekehrt werden muss, will man die NWO unter der Vorherrschaft der USA verhindern.",reichsbuerger_adjacent
"Themenkomplex GeostrategieDie einzige Weltmacht, Amerikas Strategie der Vorherrschaft.Hier als PDF, sehr Lesenswert‼Zbigniew Brzeziński, einer der führenden Geostrategen der USA schrieb ein interessantes Buch welches ich hier als PDF verlinke.Er war von 1966 bis 1968 Wahlkampf-Berater Lyndon B. Johnsons und von 1977 bis 1981 Sicherheitsberater von US-Präsident Jimmy Carter. Er war Professor für US-amerikanische Außenpolitik an der School of Advanced International Studies (SAIS der Johns Hopkins University in Washington, D.C., Berater am „Zentrum für Strategische und Internationale Studien“ (CSIS in Washington, D.C. und Autor renommierter politischer Analysen. Daneben betätigte er sich als Unternehmensberater für mehrere große US-amerikanische und internationale Firmen.Brzeziński wird zur realistischen Schule der Internationalen Politik gerechnet und steht geopolitisch in der Tradition Halford Mackinders und Nicholas J. Spykmans.Er war übrigens gebürtiger Pole....",reichsbuerger_adjacent
Pr. Dr. Gert R. Polli Direktor des Bundesamtes für Verfassungsschutz und Terrorismusbekämpfung a. D..„Deutschland war noch nie souverän.“„Wir waren schon immer ein Spielball und das bereits schon vor dem 2. Weltkrieg.“Das Video muss jeder gesehen haben!🟥 =,reichsbuerger_adjacent
"as ist ein Smart Meter?(Q(Q(QHolistische Gesundheit Heilung und Aufklärung""Anders als bei herkömmlichen analogen Stromzählern messen Smart Meter nicht einfach den Stromverbrauch in einem Haushalt oder einem Betrieb, sondern können den Verbrauch auch bestimmten Geräten genau zuordnen. Die digitalen Zähler liefern damit auch eine zeitgenaue Messung des Strombedarfs. Energieunternehmen können damit im Minuten-Takt den Stromverbrauch ihrer Kunden ermitteln… und somit ein Userprofil erstellen! Das höchste und teuerste Gut unserer heutigen Zeit, sind Kundendaten. Wer macht was… wann… und wie oft???Egal ob Versicherungen, Verkäufer, Versandhändler oder Banken, für Kundendaten wird heutzutage viel Geld bezahlt. Ein Pfund, das sich die Energieversorgen hier zu Nutze machen und diese Daten in Zukunft als neues Geschäftsfeld verkaufen werden. So ist der Datenmissbrauch schon vorprogrammiert.""Lin[k zum weiterlesen des ArtikelsArt](    ikel:2 "" Symptome des „Mikrowellensyndroms“ Beim Einbau ähnlicher Zähler auf Funkbasis klagten Patienten des Umweltmediziners Joachim Mutter über schwere gesundheitliche Symptome wie „Schlaflosigkeit, Kopf- und Körperschmerzen, Schwindel, Müdigkeit, Augen- und Hautbrennen, Tinnitus und Depressionen“. Nachdem die Zähler ausgetauscht wurden, verschwanden die Beschwerden nach einigen Tagen wieder.Auch die Übertragung der Daten über ungeschirmte Stromleitungen wird von Experten stark kritisiert: „Nie würde ich mir so eine Technologie ins Haus holen“, sagt der Physiker Dr. Stefan Spaarmann aus Leipzig. Auch diese Technik sollte also nur angewandt werden, wenn die Stromleitungen abgeschirmt wurden.""    -Link ""Hier zeige ich wie man digitale Stromzähler auslesen kann und den Stromverbrauch und die Kosten in Echtzeit ganz einfach per Smartphone App im Blick behält. Außerdem erfährst du was man noch alles mit den digital ausgelesenen Energiedaten vom Stromzähler machen kann.[""Wissensbewahrung/Absicheru](ngHolistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"nhaltsangabe/Zusammenfassung: Heilkräuter und ihre wahre Natur für die Menschen.Holistische Gesundheit Heilung und AufklärungGuten Abend liebe Kanalbesucher. Wir haben diese Sektion komplett für Sie benutzerfreundlich überarbeitet. Ab heute können Sie in diesem Themenbereich (Heilkräuter einfach zwischen ihren Interessensfeldern hin und herwechseln. Wir wünschen Ihnen viele neue Erkenntnisse.1.He[ilpflanzen und Heilkräuter – alles Gute von Mutter Natur2.](          [lanzen3.Die Unkraut Lüge: Verbot von Kräuterheilkunde & Hei]( [lpflanzen4.Heilpflanzen. Was](        [sind Heilpflanzen?5.Meerrettich: Das Wi](  [chtigste im Überblick6.Immunsystem](    [aufbauen mit Heilpflanzen 7.Heilsalben herstellen – welche Mat](   [erialien du wirklich brauchst 8.Fichte Terpentinbalsam hier ein](       [offizieller Artikel der Apothekenschau9.Di](        [e wichtigsten Heilpflanzen gegen Schlafstörungen10.M](        [r11.Wichtiger denn je Grundlagen Wissen über Wildkräuter.](     [12.Heilpflanzen für die Augen. Klare Augen und bessere Sehkraft.13.Na](                [wendung 14.Hausmittel bei Erkältung und Grippe: Holu](      [nderbeerensirup selbst gemacht15.Diese K](           [16.Heilpflanzen - Die 5 mächtigsten Heilpflanzen17.Die wichtigsten Heilpfla](      [nzen gegen Schlafstörungen18.Detox](      [pur für Raucher - Brunnenkresse entgiftet den Körper und schützt vor Krebs19.Heilpflanzenwissen /](    [Heilpflanze Wegwarte20.Ur-Tinkturen - Altes Wissen neu entdeckt - bei Bore](                             [sich einig!22.Weihrauch hemmt die Entzündung auch bei](     [Schuppenflechte23.Wissenswert](     e[s über Tannen und Fichten24.Tannensalben nach](    [Art der Kräuterhexe25.Heilpflanze Löwenz](    [ahn & ihre Wirkung auf Körper und Geist26.(PDF Die Pflanzliche Hausapotheke](               [Naturapotheke28.Jiaogulan das Wundermittel. Geheimes Wissen!29.Wie si](   [ch Brennnessel positiv auf die Gesundheit und auf die Prostata auswirkt!30.Gänseblü](                 [chten solltest31.Warum es wichtig ist Wildkr](         [ieren32.Löwenzahnwurzel-Tinktur stärkt die L](       nd[reinigt die Gelenke - Kostbare Natur33.Heilkräuter m](    [it Survival Lilly34.So ein Glück mit](             [Natur35.Die 10 g](  [esündesten Gewürze und ihre Wirkung36.Schau dir ""Rosen - ihre heilende](    [n Eigenschaften37.Korianderkraut38.Heilsame K](      [räfte der Kiefern- und Fichtennadeln nutzen39.Aron](       ia – Kleine Beere mit grosser Wirkung40.Win von Giersch41.Tinkturenbüchlein42.Diese Karte(APP zeigt, wo Sie Äpfel, Kirschen und Co. pflücken dürfen.43.Wildpflanzen Erntekalender: Kräuter, Bäume, Obst & mehrHier kommen Sie zu unserer vollständigen InhaltsangabeWir sind nun auf folgenden Plattformen vertreten🦋‍‍‍GETTR|Odysee|🪴Tik Tok|YouTube |Instagram",reichsbuerger_adjacent
"Themenkomplex Irakkrieg 2003Wir erinnern uns an diesen Präventivkrieg‼Der Irakkrieg oder Dritte Golfkrieg (auch Zweiter Irakkrieg war eine Militäroperation der USA, Großbritanniens und einer „Koalition der Willigen“ im Irak. Er begann am 20. März 2003 und führte zur Eroberung der Hauptstadt und zum Sturz des damaligen irakischen Diktators Saddam Hussein. Am 1. Mai 2003 erklärte US-Präsident George W. Bush den Krieg für siegreich beendet.Die US-Regierung Bushs hatte den Sturz Saddam Husseins seit Januar 2001 erwogen. Sie begründete diesen als notwendigen Präventivkrieg, um einen angeblich bevorstehenden Angriff des Iraks mit Massenvernichtungsmitteln auf die USA zu verhindern.Da im Irak bis auf alte Restbestände keine Massenvernichtungsmittel und keine Beweise akuter Angriffsabsichten gefunden wurden, hat sich die vorgebrachte Begründung des Irakkriegs als falsch erwiesen.Nach dem erklärten Kriegsende kam es während der Besetzung des Irak von 2003 bis 2011 zu bürgerkriegsähnlichen Zuständen, tausenden Terroranschlägen, Kriegshandlungen und Gewaltkriminalität, sowohl verschiedener irakischer Gruppen gegeneinander als auch gegen die westlichen Besatzungstruppen. Sie forderten vor allem unter irakischen Zivilisten eine unbekannte Anzahl Todesopfer und Verletzte. Auch nach dem Abzug der ausländischen Truppen 2011 kam es zu keiner Befriedung des Landes. Die Expansion des Islamischen Staats in der Irakkrise 2014 wird zum Teil als Folge des Irakkriegs beurteilt.Sollte in meiner Gegenwart noch irgendein Mensch nur mit dem Finger in Richtung Russland zeigen, breche ich den Finger ab.",reichsbuerger_adjacent
Themenkomplex die Zahl 68Am 28/7/1914 begann der erste Weltkrieg28+7+19+14 = 68Am 1/9/1939 begann der zweite Weltkrieg1+9+19+39 = 68Am 24/2/2022 begannen die militärischen Sonderoperationen in der Ukraine24+2+20+22 = 68Die 68er gingen mir schon immer auf den Sack ....,reichsbuerger_adjacent
"Themenkomplex ""Woran das wohl liegt""Nun, ich kann diese Aussage als gebürtiger Wessi voll und ganz nachvollziehen und auch verstehen.In der DDR wurde zwar durch die UDSSR der Sozialismus eingeführt und auch streng durchgesetzt aber in die Kultur hat die UDSSR kaum reingefunkt, die Menschen durften und konnten ihre deutsche Kultur leben. Anders im Westen, dort wurde neben dem politischen System auch massiv Einfluss auf die Kultur genommen, am Anfang langsam aber dennoch stetig denn man wollte ja nicht gleich die ganze ältere Generation gegen sich haben aber später wurde der Prozess immer stärker beschleunigt. Man merke, die originäre Kultur ist das zentrale Ding einer Gesellschaft, nicht zwingend die politische Ausformung.",reichsbuerger_adjacent
"Hilferuf für einen Mitstreiter in Not.Immer öfter greift das System ehrliche Aufklärer an. Es versucht, sie durch Sanktionen zum Schweigen zu bringen. Wir finden: Wer den Mut aufbringt und Wahrheit spricht, der sollte auch unterstützt werden!Wer helfen möchte, findet hier drei Wege zur Unterstützung: 1. GofundmeKlicke einfach auf nachfolgenden Link und navigiere dich leicht durch die Seite(Auch ohne Anmeldung sowie anonym möglich. Sämtliche Möglichkeiten gegeben2. PaysafeErwerbe eine Paysafecard (Online, Aldi, Edeka, Tankstelle usw. und schicke den 16 stelligen Code an:@Hilfsaktion_bot3. Bitcoin3EEmZzcF89Bd35JFUPebLadj4spYwmwVWkHerzlichen Dank ‼t.me/Kinder_schuetzen",reichsbuerger_adjacent
"Themenkomplex AntideutscheIrgendwann offenbaren sich alle und zeigen ihre antideutsche Haltung ganz ungeniert. Bei Frau Claudia Roth geschah das schon sehr früh als sie sich damals hinter einem Transparent mit dem Text ""Deutschland verrecke"" positionierte, andere hatten nicht den Mut, sie zeigten sich erst viel viel später.....",reichsbuerger_adjacent
"und dann zum Sterben in den verrottenden Mülleimer der Geschichte geworfen wurden.Die sadistische Behandlung der ukrainischen Wirtschaft wird schrittweise erfolgen. Erstens ist es die Amputation der Industrie und des Agrarsektors. Dann die Lähmung der Wirtschaft insgesamt. Nun, nach dem organischen Tod der Überreste des Landes selbst.Die Beendigung des Lebens oder Todes des ehemaligen Staates wird von wahnsinnigem Gelächter, unanständigen Possen und abscheulichen Clown-Possen der Nazi-Bande begleitet, die von der Fülle von Blut und Drogen völlig verrückt sind. Und das Totenschweigen westlicher Ärzte, die mit kalter Verachtung auf die Agonie ihres eigenen gequälten Patienten blicken...",reichsbuerger_adjacent
"Themenkomplex MedwedewMedwedew hat auf seinem Telegram-Kanal folgendes geschrieben.Gestern wurde eine grüne Patientin aus der narkologischen Abteilung von einer Tante-Gynäkologin besucht, die den europäischen Chefarzt porträtierte. Wir haben über die schnelle und fabelhafte Erholung der Wirtschaft von Kleinrussland in der EU gesprochen. Nun ja, das ist eindeutig eine Lüge.In der Zwischenzeit kämpft das Kiewer Regime mit Unterstützung seiner westlichen Kuratoren gegen Russland „bis zum Sieg“, und die Wirtschaft dieses unglücklichen Territoriums verwandelt sich schnell in eine stinkende Fäulnis. Darüber wird sogar in jenen Ländern offen gesprochen, die dem ukrainischen Regime Genesung und ewige europäische Liebe versprechen.Hier ist eine kurze Zusammenfassung der Krankheit der ukrainischen Wirtschaft, basierend auf medizinischen Daten von Goldman Sachs. Ein paar helle Zahlen, die die Krankheit charakterisieren.1. Die Ukraine hat jetzt Gebiete verloren, die ihr etwa 40 % des nationalen Industriepotenzials und etwa 15 % des BIP der Vorkriegszeit einbrachten.2. Es hat keinen Zugang mehr zu mehr als 12 Billionen Dollar an Mineralreserven. Einschließlich 63 % der Kohlevorkommen und 42 % der Metalle.3. Mit voller Fahrt fliegt die Landwirtschaft in den Abgrund. Erstens ein starker Ertragsrückgang. Weizen: 19,4 Millionen Tonnen im Jahr 2022 gegenüber 32,5 Millionen im Jahr 2021. Mais: 18,4 Millionen Tonnen - 35,1 Millionen.Zweitens führten Überlandrouten durch Polen und Rumänien zu einer Erhöhung der Transportkosten um das 2- bis 3-fache.4. Ende 2022 ging das BIP der Ukraine um 35-36 % zurück. Und seine Gesamtverluste durch die Kollision mit Russland erreichten 830-850 Milliarden Dollar. Und das, obwohl das BIP des Landes im Jahr 2021 200 Milliarden Dollar betrug. Diesen Rekordeinbruch musste sogar ihr Wirtschaftsministerium als schlechtestes Ergebnis in der Geschichte des Landes eingestehen.5. Weiter nur der endgültige Zusammenbruch der Industrie, Hyperinflation, Armut und totale Arbeitslosigkeit. Die Staatsverschuldung von Nesaleschnaja wird bis Ende dieses Jahres von 107 auf 180 bis 200 Milliarden Dollar steigen. Selbst Hoffnungen auf eine mikroskopische Erholung sind illusorisch.Es ist offensichtlich, dass Russland weiter daran arbeiten wird, die Ziele der militärischen Sonderoperation zu erreichen. Das bedeutet, dass das BIP der Ukraine bis Ende dieses Jahres um weitere 5-10 % einbrechen könnte. Daher wird die Aussicht auf einen vollständigen Bankrott der ukrainischen Staatlichkeit und ein unvermeidliches Ende immer deutlicher sichtbar.Wer schuld ist, ist eine rhetorische Frage. Wie die böse Hebamme Ursula von „Etwas Unverständliches“ ehrlich zugab, bezahlt die ukrainische Regierung die EU- und Nato-Mitgliedschaft mit dem Leben ihrer Bürger. Was können wir über eine unglückliche Wirtschaft sagen. Der Ruin des Landes stört die Kiewer Kamarilla nicht. Es verschwendet weiterhin sein Territorium mit exorbitanten Militärausgaben. Basierend auf der Tatsache, dass der Westen immer etwas Geld werfen wird. Er wird nicht zulassen, dass alle Veruntreuer, die die westliche Beute teilen, vor Hunger anschwellen. Denn nur für den dringenden Bedarf muss der ukrainische Haushalt in diesem Jahr 55 Milliarden US-Dollar berappen, bei einem Defizit von 38 Milliarden. Es ist klar, dass je mehr Unterstützung, desto mehr der verrückte Clown und andere Parasiten mit einer offenen Form von Kleptomanie stehlen werden.Nur je länger die Führer der ukrainischen Nazis ihre Spender um Hilfe bitten und stehlen, desto näher rückt der endgültige Zusammenbruch der Wirtschaft. Schließlich müssen Sie die Behandlung vollständig bezahlen. Und das Ziel des Western Aesculapius ist keineswegs, die Wirtschaft des unglücklichen Landes zu heilen. Der Westen hat reiche Erfahrung darin, Versuchsländer zu töten. Der Westen ist nicht der freundliche Dr. Aibolit, sondern Dr. Mengele. Er ist ein finsterer Mörderdoktor. Daher wird die Ukraine das traurige Schicksal jener Kolonien erleiden, die einst in der perversesten Form vergewaltigt",reichsbuerger_adjacent
"Вчера зелёного пациента из наркологической палаты посетила тётка-гинеколог, которая изображала главного европейского врача. Обсуждали быстрое и сказочное выздоровление экономики Малороссии в ЕС. Ну да это, понятно, враньё. Пока же киевский режим при поддержке своих западных кураторов воюет с Россией «до победы», а экономика этой несчастной территории стремительно превращается в смрадную труху. Об этом открыто говорят даже в тех странах, которые обещают украинскому режиму выздоровление и вечную европейскую любовь.Вот краткий эпикриз заболевания экономики Украины на основе медицинских данных банка Goldman Sachs. Несколько ярких цифр, характеризующих болезнь.1. Украина в настоящее время потеряла территории, которые обеспечивали ей порядка 40% национального промышленного потенциала и около 15% довоенного ВВП.2. У неё больше нет доступа к запасам полезных ископаемых на сумму свыше 12 триллионов долларов. Включая 63% месторождений угля и 42% – металлов.3. На всех парах в пропасть летит сельское хозяйство. Во-первых, резкое падение урожая. Пшеница: 19,4 миллиона тонн в 2022 году против 32,5 миллиона в 2021 году. Кукуруза: 18,4 миллиона тонн – 35,1 миллиона. Во-вторых, сухопутные маршруты через Польшу и Румынию привели к росту транспортных расходов в 2–3 раза.  4. В конце 2022 года ВВП Украины сократился на 35–36%. А общие её потери от столкновения с Россией достигли 830–850 миллиардов долларов. И это притом что в 2021 году ВВП страны составлял 200 миллиардов долларов. Это рекордное падение вынуждено было признать даже их министерство экономики как наихудший результат в истории страны.  5. Далее только окончательное крушение промышленности, гиперинфляция, нищета и тотальная безработица. Госдолг Незалежной к концу этого года увеличится с 107 до 180–200 миллиардов долларов. Надежды даже на микроскопическое восстановление призрачны. Очевидно, что Россия продолжит работать над достижением целей специальной военной операции. А значит, по итогам этого года ВВП Украины может рухнуть ещё на 5–10%. Поэтому всё более отчётливо видна перспектива полного банкротства украинской государственности и неизбежного конца.  Кто виноват – вопрос риторический. Как честно признала злобная бабка-повитуха Урсула фон «Что-то непонятное», украинская власть платит за членство в ЕС и НАТО жизнями своих граждан. Что уж тут говорить о какой-то несчастной экономике. Киевскую камарилью разорение страны не смущает. Она продолжает проматывать свою территорию 404 непомерными военными расходами. Исходя из того что Запад всегда подкинет деньжат. Не даст опухнуть от голода всем казнокрадам, которые делят западное бабло. Ведь только на неотложные нужды украинскому бюджету в этом году придётся раскошелиться на 55 миллиардов USD при дефиците в 38 миллиардов. Понятно, что чем больше поддержка, тем больше украдут безумный клоун и другие паразиты, больные открытой формой клептомании.Только чем дольше руководители украинских нацистов будут клянчить и воровать у своих доноров помощь, тем ближе окончательный крах экономики. Ведь заплатить за курс лечения придётся сполна. И цель западных эскулапов отнюдь не в том, чтобы вылечить экономику несчастной страны. У Запада богатый опыт умерщвления подопытных стран. Запад не добрый доктор Айболит, а доктор Менгеле. Он зловещий врач-убийца. Поэтому Украину ждёт печальная судьба тех колоний, которые когда-то насиловали в максимально извращённой форме, а потом выбрасывали умирать на гниющую свалку истории. Садистское лечение экономики Украины будет проходить постепенно. Сначала – это ампутация промышленности и аграрного сектора. Затем паралич экономики в целом. Ну а после – органическая гибель остатков самой страны.Прекращение жизнедеятельности, или смерть, бывшего государства будет сопровождаться безумным хохотом, непотребным кривлянием и мерзкими клоунскими ужимками нацистской банды, окончательно спятившей от обилия крови и наркотиков. И гробовым молчанием западных лекарей, с холодным презрением взирающих на агонию ими же замученного пациента…",reichsbuerger_adjacent
"Frieden, Freiheit und Souveränität Stiller Protest L30 in KWIch freue mich euch mitteilen zu können, dass am 05.02.2023 in Königs Wusterhausen auf der Brücke der Brückenstraße in der Zeit von 10.00 - 11.00 Uhr der Stille Protest wieder startet. Treffpunkt ist der Parkplatz von Getränke Hoffmann. Von dort aus gehen wir gemeinsam zur Brücke.Beste Grüße Alex🟥=",reichsbuerger_adjacent
"Themenkomplex ""Der Österreicher""Dietmar Wischmeier über die Österreicher ",reichsbuerger_adjacent
Moin erstmal alle zusammen....,reichsbuerger_adjacent
"eitfaden/Inhaltsangabe Die Wahrheit über MineralienHi    1           [(Quelle3.Mineralienmangel, Wasser und Salz die 2 wichtigsten Dinge für den Körper. Heilpraktiker Uwe Kar](    [städt (Quelle4.Tauche ein in die Welt der Mineralien - Startschuss in ein Leben voller Energie, K](              [raft und Ausdauer(Mister Raw5.Der Ackerboden ist eine Nährstofflaiche - Woher bekommst du dei](                [ne Mineralien in kolloidaler Form?(Mister Raw6.Schwermetallbelastung:Eines](                   [unseren Körper! (Quelle:iHolistic7.Mineralien und ihre Bedeutung8.](         [ma Salz9.Ich konsumiere SCHWERMETALLE und GIFTIGE ELEMENTE! Holistisch Gesund1](                     [rn* Hautpflege12.Mineralienmangel mit Wasser und Salz he]( [ilen13.Minera](     [lienmangel durch Nahrungsmittel15.Jod - Unterdrücktes](     Wissen, das Ihr Leben verändern kann16.HaftHi me  u r  InhaltsangabeWir sind nun auf folgenden Plattformen vertreten🦋‍‍‍GETTR|Odysee|🪴Tik Tok|YouTube |InstagramHolistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"logbeitrag: Warum eine Darmsanierung auf für Sie sinnvoll sein kann. Eine rudimentäre Zusammenfassung für unsere Community. (Teil2/Kostenloser Content. (HHolistische Gesundheit Heilung und Aufklärung""Verehrte Community etwas wichtiges vorab, bitte beachten Sie, dass es wichtig ist, vor Beginn einer Darmsanierung immer den Ratschlag von erfahrenen Heilpraktikern und erfahrenen Heilkundigen einzuholen. Dieser Blogbeitrag dient ausschließlich zu Informationszwecken.Fangen wir an. Der Darm ist ein wichtiger Teil des menschlichen Körpers und spielt eine wichtige Rolle bei der Verdauung und der Aufnahme von Nährstoffen. Eine gesunde Darmflora ist wichtig für das allgemeine Wohlbefinden und die Immunfunktion. Eine Darmsanierung kann dazu beitragen, die Gesundheit des Darms zu verbessern und mögliche gesundheitliche Probleme zu vermeiden oder zu lösen.Eine Darmsanierung kann bei verschiedenen gesundheitlichen Problemen helfen, wie zum Beispiel Verstopfung, Durchfall, Reizdarmsyndrom und sogar bei einigen Autoimmunkrankheiten. Lin            mIhre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Themenkomplex RechtsstaatMaria Sacharowa hat mal so richtig einen rausgehauen.In Deutschland hat jemand die Seite unseres Favoriten angegriffen - ein Fan des ""Krieges gegen Russland"" Annalena Berbock, die 136.000 Euro für Kosmetika aus dem Budget ausgegeben hat. Die Hacker zielten auch auf die offiziellen Ressourcen einer Reihe anderer Institutionen ab. Das Bundesinnenministerium erklärte ohne mit der Wimper zu zucken sofort: ""Die Angriffe kamen aus Russland"".Und jetzt hör auf.Hier sagte Bundeskanzler Scholz kürzlich: ""In einem Rechtsstaat wie Deutschland sollten die Beamten Spekulationen unterlassen und nur das verkünden, was sie beweisen können."" Dies führt zu einer von drei Schlussfolgerungen:entweder Berlin hat Beweise (dann hätten sie in diesen 10+ Jahren mindestens einen vorgelegt,sagte Scholz, ohne nachzudenken,oder... Deutschland ist kein Rechtsstaat.",reichsbuerger_adjacent
"В Германии кто-то атаковал сайт нашей любимицы – фаната «войны против России» Анналены Бербок, потратившей 136 тысяч евро на косметику из бюджета. Целью хакеров также стали официальные ресурсы ряда других учреждений. Германское МВД, не моргнув глазом, тут же , что «атаки исходили из России».А теперь стоп.Тут недавно канцлер Шольц , что «в таком правовом государстве, каковым является Германия, чиновники должны воздерживаться от предположений и объявлять только то, что они могут доказать». Из этого следует один из трёх выводов:либо у Берлина есть доказательства (тогда уж предъявили бы за эти 10+ лет хоть одно, либо Шольц сказал не подумавши, либо… Германия – не правовое государство.",reichsbuerger_adjacent
"Наши вооружённые силы регулярно и в полном объёме получают ракеты разных типов.   Поставки всех видов ВВСТ существенно вырастут в 2023 году.  Это позволит нанести власти украинских неонацистов, которых раскормила своим оружием разнообразная западная сволочь, сокрушительное поражение.02.02.2023 АО «ГосМКБ “Радуга” им. А.Я.Березняка»",reichsbuerger_adjacent
"Medwedew hat mal wieder einen rausgehauenUnsere Streitkräfte erhalten regelmäßig und vollständig verschiedene Arten von Raketen.Die Lieferungen aller Arten von Waffen und militärischer Ausrüstung werden im Jahr 2023 deutlich zunehmen.Dies wird den Behörden der ukrainischen Neonazis, die von verschiedenen westlichen Bastarden mit ihren Waffen gefüttert wurden, eine vernichtende Niederlage ermöglichen.02.02.2023JSC ""GosMKB ""Rainbow"" ihnen. A. Ja. Beresnjak""",reichsbuerger_adjacent
"Themenkomplex ""Betteln um Vergebung""Tja, sie versuchen jetzt die christlichen Werte, ja die Karte der Moraltheologie auszuspielen, sie betteln um Vergebung. Ich sage nein, euch soll das jüdische ""Auge um Auge, Zahn um Zahn"" widerfahren, sind sie es doch die so eng verbunden mit dem jüdischen Glauben sind. Wer A sagt muss auch B sagen PUNKT.",reichsbuerger_adjacent
Moin alle zusammen ,reichsbuerger_adjacent
"An ihrer Symbolik wird man sie erkennenDer Admin vom Weichreite-Chat sendet eindeutige Botschaften. Pädokringel in 666 Anordnung und sie führen den ""BLAUEN KAMPF"". Danke für die Offenheit ",reichsbuerger_adjacent
"Themenkomplex GeostrategieDie einzige Weltmacht, Amerikas Strategie der Vorherrschaft.Hier als PDF, sehr Lesenswert‼Zbigniew Brzeziński, einer der führenden Geostrategen der USA schrieb ein interessantes Buch welches ich hier als PDF verlinke.Er war von 1966 bis 1968 Wahlkampf-Berater Lyndon B. Johnsons und von 1977 bis 1981 Sicherheitsberater von US-Präsident Jimmy Carter. Er war Professor für US-amerikanische Außenpolitik an der School of Advanced International Studies (SAIS der Johns Hopkins University in Washington, D.C., Berater am „Zentrum für Strategische und Internationale Studien“ (CSIS in Washington, D.C. und Autor renommierter politischer Analysen. Daneben betätigte er sich als Unternehmensberater für mehrere große US-amerikanische und internationale Firmen.Brzeziński wird zur realistischen Schule der Internationalen Politik gerechnet und steht geopolitisch in der Tradition Halford Mackinders und Nicholas J. Spykmans.Er war übrigens gebürtiger Pole....",reichsbuerger_adjacent
"Aus aktuellen Anlass!!! Möchten wir mit Euch über eure Sorgen und Ängste sprechen .Und wie wir mit souveränen Auftreten aktiv werden könnten. Hier der EinladungslinkWir freuen uns auf Euch , die 1871 Friedensboten vereint mit der Deutschlandfrage Berlin 🤍🤝",reichsbuerger_adjacent
"Neue Töne: Sieg der Ukraine unwahrscheinlichBis vor kurzem gab es in den Medien keinen Zweifel, dass die Ukraine ""siegen"" würde, begleitet von ständig neuen Erfolgsmeldungen auf der einen, und Negativ-Schlagzeilen auf der russischen Seite. Nun klingen die Töne anders.""Ein Sieg der Ukraine wird täglich unwahrscheinlicher. Kiews Armee gehen Leute und Material aus, der Feind stellt sich besser ein und verfügt über gewaltigen Nachschub. Es ist nahezu ausgeschlossen, dass die Ukraine als Sieger aus diesem Krieg hervorgehen wird. Ein Sieg bedeutet nach der Definition des ukrainischen Präsidenten Wolodymyr Selenskyj die Rückeroberung aller besetzten Gebiete, also auch der Krim. Doch das ist aus heutiger Sicht und unter den gegebenen Umständen unmöglich. Wer mit westlichen Diplomaten spricht, hört immer häufiger von der Angst vor einer Eskalation, von der Sorge vor einer Kriegsmüdigkeit der demokratischen Gesellschaften und von der Hoffnung auf einen baldigen Waffenstillstand. Und genau auf diesen schnellen Waffenstillstand läuft das Engagement des Westens mittlerweile hinaus."" Hoffen wir, dass der Kommentator Recht behält. Die Waffenlieferungen sprechen derzeit eine andere Sprache. (PLUS-Artikel@BITTELTV - EINFACH ANDERS",reichsbuerger_adjacent
13 Milliarden Euro Zinsen muss die Bundeswehr für ihr Sondervermögen leisten. Für langlaufende Projekte wie das Kampfflugzeug F-35 und andere Systeme werden die Mittel somit immer knapp[er.Epoch]([TimesNe]( tRP rstützung,reichsbuerger_adjacent
"Themenkomplex QuietscheentchenFür alle Quietscheentchen hier ein wichtiges Formular, ausdrucken und ausfüllen und dann mir zukommen lassen....",reichsbuerger_adjacent
"An alle Mitläufer und Duckmäuser!!!Wir müssen alle zusammen halten bla bla bla, das weiß ich auch, aber mal ganz ehrlich gefragt,wie blöd muß man eigentlich sein um sich so billig verarschen zu lassen 🤣🤣🤣6 setzten und Maul halten ! Ihr seid so peinlich, schämt Euch !",reichsbuerger_adjacent
Ami – go home!,reichsbuerger_adjacent
Das Katz und MausspielIm Kontext dieses lustigen Versuches möchte ich nochmal an was erinnern....,reichsbuerger_adjacent
Feierabend mit SEKTE,reichsbuerger_adjacent
1871 Danke für Euren Besuch Dort ist der AusgangROGER- OVER & OUT ,reichsbuerger_adjacent
"Themenkomplex FalschspielerZur Erinnerung, der Kanal Weichreite wollte Ela Friedensengel neulich zum Interview einladen.Da sie keine Zeit hatte, wurde ich als Ersatz nominiert und ich gewann die Umfrage für das Interview welches Gestern am 31.01.2023 hätte stattfinden sollen mit 75%.Nun, wenn im Chat dieses Kanals einem so begegnet wird, dann stellt sich die berechtigtet Frage, wozu dieses Interview dienen sollte. Hört euch mal die Sprachnachrichten des Admin aus dem Chat an. Mir war nach ein paar anderen Zeilen in dem Chat dieses Kanals klar, wozu das Interview dienen sollte, sicherlich nicht zur Aufklärung.Zumindest ist der Chat vom Kanal Weichreite in meinen Augen als ein Hort von Spaltpilzen ganz im Sinne des Systems enttarnt. Sollte der Kanalinhaber da nicht reagieren, ist auch seine Position ganz klar definiert. ",reichsbuerger_adjacent
1871,reichsbuerger_adjacent
"Themenkomplex Deutschland GmbHNun auch im Mainstream, Deutschland ist eine Firma, eine GmbH, so jedenfalls brachte es Markus Lanz gleich am Anfang seiner Sendung bei der Begrüßung des zugeschalteten Herrn Habeck vom 31.01.2023.Entweder ist eine Verschwörungstheorie wahr geworden oder Lanz ist zum Verschwörungstheoretiker mutiert, sucht es euch aus....🤣    ",reichsbuerger_adjacent
"Aus aktuellen Anlass!!! Möchten wir mit Euch über eure Sorgen und Ängste sprechen .Und wie wir mit souveränen Auftreten aktiv werden könnten. Hier der EinladungslinkWir freuen uns auf Euch , die 1871 Friedensboten vereint mit der Deutschlandfrage Berlin 🤍🤝",reichsbuerger_adjacent
"örperelektrizität steuert die Körperchemie. Warum dieser Zweig der Wissenschaft kaum Beachtung findet. Besonders für Heilpraktiker und alternativ denkende Ärzte ist dieser Beitrag äußerst Wertvoll.Holistische Gesundheit Heilung und AufklärungDie elektro-galvanische Heilkunde ist eine Form der Elektrotherapie, bei der galvanischer Strom (Gleichstrom verwendet wird. Diese Methode wird hauptsächlich zur Behandlung von Schadstoffablagerungen (Plaques und Entzündungen verwendetIn vielen hundert Forschungsberichten wurde immer wieder bewiesen, dass die lebende Substanz bei Pflanze, Tier und Mensch Elektrizität erzeugt. Leben ist immer mit Stromerzeugung verbunden. Leben wird immer auch und besonders durch elektrische Vorgänge gesteuert. Folgerichtig muss auch jeder Lebensprozess durch planvoll zugeführte Elektrizität beeinflusst und in bestimmtem Sinne mitgesteuert werden können.Im Altertum wurde Elektrizität bereits als Heilmittel genutzt und nach der Erfindung von Gleichstrom wurde sie besonders bei Lähmungen, Nervenschwäche und Rheuma eingesetzt. Elektrizität spielt eine wichtige Rolle in der Körperchemie, da sie die Funktion von Elektronen beeinflusst, die die Bausteine der Materie sind. Die Elektrizität des Körpers hat einen direkten Einfluss auf die Chemie des Körpers und somit auf die Gesundheit. Ein Mangel an Elektrizität kann zu Alterungs- und Krankheitsprozessen führen. Mit zunehmendem Alter und bei psychischem Stress sinkt die elektrische Ladung der Zellen und die Elastizität im Gewebe nimmt ab. Ein zu niedriges elektrisches Potential in den Nervenzellen kann zu Nervosität und Hektik führen. Die Leistungsfähigkeit und Gesundheit hängen von der Menge und Qualität der Ladung in den Zellen, der Zwischenzellenflüssigkeit und im Blut ab. Ein Mangel an Elektrizität kann Symptome wie Müdigkeit, Aggression, Nervosität und Schmerzen verursachen. Der zugeführte galvanische Strom wirkt im Körper, indem er die elektrische Ladung der Zellen und Gewebe erhöht.Elektronen können von einem Stoff zum anderen übertragen werden und dadurch entsteht ein Elektronenfluss. Wenn in einem Metalldraht Strom fließt, bewegen sich die Elektronen entlang des Drahtes und dies kann zu chemischen Veränderungen im Körper führen. Die Körperelektrizität kann auch genutzt werden, um Körperfunktionen wie die Muskelkontraktion und die Nervenimpulse zu steuern.Die elektro-galvanische Heilkunde wird als eine Möglichkeit beschrieben, um die Neustrukturierung des gesamten Organismus in Richtung seiner ursprünglichen evolutionären Ordnung zu fördern und ""niederschwellige Entzündungen"" zu behandeln.Hie[r haben Sie eine ausführliche PDF über die Riesenvorteile des Galvanischen Feinstroms.🩻Hi](                m-GerätUnsere Community aus unserem Kanal bekommt einen Nachlass von 10 Prozent, wenn Sie den Code: ""Sunnytime"" beim Erwerb eingeben.Ihre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"arum kann eine Darmsanierung sinnvoll für dich sein! (Teil1Holistische Gesundheit Heilung und AufklärungEine Darmsanierung kann bei verschiedenen gesundheitlichen Problemen helfen, wie zum Beispiel Verstopfung, Durchfall, Reizdarmsyndrom und sogar bei einigen Autoimmunkrankheiten. Sie kann auch dazu beitragen, den Cholesterinspiegel zu senken und das Gewicht zu stabilisieren.Welche Möglichkeiten es gibt, mit denen Du deinen Darm sanieren kannst, erfährst Du, wenn du durch die Beitragsbilder wischt.L[ink zum weiterlesen. Swipe durch die Bilder und lasse uns gern ein Like und/oder Kommentar da.‍](               Für mehr wichtige Infos Besuchen Sie uns auf der Holistischen Gesundheit Heilung und Aufklärung.",reichsbuerger_adjacent
WICHTIGE OFFIZIELLE DOKUMENTE ZUM THEMA GEO-ENGINEERING:Weather as a Force Multiplier: Owning the Weather in 2025 (US AIR FORCE: GEO-ENGINEERING wirksamer Klimaschutz oder Größenwahn? (Bundesamt für Umwelt: The Regulation of Geoengineering (House of Commons Science and Technology Committee:Geoengineering the climate (The Royal Society,reichsbuerger_adjacent
"Was im russischen Fernsehen über Deutschland berichtet wird, gibt wahrlich Hoffnung.Laut Umfrage eines deutschen Radiosenders sind 94% gegen Waffenlieferungen. Danke ",reichsbuerger_adjacent
GEOPOLITIK mit RA Dr. Roman Schiessler & Manuel C Mittaswir schauen in die Ukraine    Mit Ihrer freiwilligen Zuwendung unterstützen Sie unsere Freie- und zu 100% unabhängige Medienarbeit!,reichsbuerger_adjacent
"Bismarck - Das politische Schicksal des eisernen KanzlersEin wahres Stück Film- und Lebensgeschichte zum 152.  Reichsgründungstag des 2. Deutschen Reiches, am heutigen 18. Januar 2023!Dieser Film zeigt die wichtigste Zeit in Bismarcks Leben, von seiner Berufung zum Preußischen Ministerpräsidenten durch König Wilhelm den I. aus dem Hause Hohenzollern, bis hin zur 2. Reichserhebung 1871 im Spiegelsaal von Versailles. Prädikate:-staatspolitisch und künstlerisch besonders wertvoll-jugendwert Regie führte das grandiose Genie Wolfgang Liebereiner. Ein Meilenstein Deutscher Filmgeschichte!Heute schon denBlick auf Morgen",reichsbuerger_adjacent
"+++Zwischeneilmeldung+++Olaf Scholz bringt die BRD auf äußerst gefährliches Terrain!Beim Bolschewiki Schwab in Davos äußerte der sonst äußerst vergessliche Mann mit der hautfarbenen Badekappe u.a.:""Um den militärischen Konflikt zu beenden, muss der „Aggressor"" Russland verlieren, also beliefern wir die Ukraine in enger Abstimmung mit unseren Partnern weiterhin und auch verstärkt mit Waffen.""Selbstverständlich stellt dies ausnahmsweise kein 1zu1 Zitat dar. Damit zeigt Scholz wiederholt klar für eine der beiden KRIEGSparteien Flagge. Für den seit 2015 eigentlichen Aggressor, die Ukraine. Das klare und unmissverständliche Bekenntnis zu einer Kriegspartei, KANN für die Andere laut anerkanntem internationalen Kriegsrecht, als feindlicher Akt des Bekenners gewertet werden. Und was das bedeutet meine sehr verehrten Damen und Herren, nun, dass möge sich bitte jeder selbst schwarz ausmalen.Heute schon denBlick auf Morgen",reichsbuerger_adjacent
"Wladimir Putin hat der russischen Staatsduma einen Gesetzentwurf über die Kündigung sämtlicher internationaler Verträge mit dem sog. Europarat in Bezug auf die Russische Föderation vorgelegt.‌‌‼Weit hat es „Europa"" gebracht... Wird dem entsprochen (und das wird es wohl ist es ab dem 16. März 2023 (Im Gesetzentwurf festgelegtes Datum zur Kündigung der Verträge nur noch EIN SCHRITT zur maximalen Eskalation. Der Abzug sämtlicher russischer Diplomaten und die damit einhergehende Einstellung der diplomatischen Beziehungen zu sämtlichen „Nationen"" Europas... Sodann folgt bei Nichtentspannung zwangsläufig nur noch von Clausewitz: „Der Krieg ist nichts anderes als die Fortsetzung von Politik, lediglich mit anderen Mitteln.""Heute schon denBlick auf Morgen",reichsbuerger_adjacent
"Alles nach Drehbuch: Pandemiesimulation aus dem Jahr 2017 sieht Entschuldigungswelle nach Massenimpfungen gegen Coronavirus vor!Es läuft nach (ihrem Plan: 2017 erschien im berüchtigten Johns Hopkins Center ein Papier: THE SPARS PANDEMIC 2025-2028. Darin wurde eine Impfkampagne während einer Coronavirus-Pandemie geplant. Nun fand die ""Pandemie"" 5 Jahre früher statt, doch sie verlief so, wie es geplant war. Das Papier hat alles bis ins kleinste Details geplant, selbst den Protest von Menschen, die die Gefährlichkeit der Krankheit anzweifeln oder behaupten, sie hätte den Ursprung in einem Bio-Labor. Damit nicht genug: In dem Papier wird sogar geplant, dass sich die Politiker nach Ende der ""Pandemie"" öffentlich entschuldigen und ihre Fehler zugeben sollen, um die aufgebrachten Bürger zu beruhigen.Glaubt Ihr nicht? FREIE SACHSEN: Wir zeigen, was die anderen verschweigen! ",reichsbuerger_adjacent
"#FOX: Für die die es dann endlich gemerkt haben: #Biden sitzt nicht im weißen Haus, sondern in einem Filmstudio. Es soll daran liegen, dass er so von einem Prompter ablesen kann ohne dass es die Leute merken.SUPER-Begründung",reichsbuerger_adjacent
Das Lügengebäude bricht zusammenWir erleben gerade wie die politisch-medialen Lügengebäude der letzten Jahre zusammenbrechen. Das führt zu enormen Chaos.,reichsbuerger_adjacent
"‼ Zum Thema  Herzinfarkt... pausiere für 2 Minuten und lies das: ‼1. Nehmen wir an, es ist 19.45 Uhr und Du gehst nach einem ungewöhnlich harten Arbeitstag nach Hause (natürlich  bist Du alleine...!.2. Du bist wirklich müde, verärgert und frustriert.3. Plötzlich beginnst Du, starke Schmerzen in der Brust zu empfinden, die sich in Deinen Arm und in Deinen Kiefer ziehen. Du bist nur etwa fünf   Kilometer vom Krankenhaus entfernt, das Deinem Haus am nächsten liegt.4. Leider weißt Du nicht, ob Du noch soweit kommen wirst.5. Du wurdest in Erster Hilfe ausgebildet, aber der Typ, der den Kurs unterrichtet hatte, hat Dir nicht gesagt, *wie Du es an Dir selbst anwenden könntest*. 6. Wie kannst Du alleine einen Herzanfall überleben, bis Dir geholfen wird? Da viele Menschen alleine sind, wenn sie ohne Hilfe einen Herzinfarkt erleiden, hat die Person, deren Herz unzulänglich schlägt und die sich ohnmächtig fühlt, nur etwa 10 Sekunden, bevor sie das Bewusstsein verliert.7. ‼Diese Opfer können sich selbst helfen, indem sie immer wieder stark husten.‼*Vor jedem Husten sollte ein sehr tiefer Atemzug genommen werden und der Husten muss tief und verlängert sein, wie bei der Produktion von Sputum= Auswurf aus der Tiefe der Brust*. Ein Atemzug und ein Husten müssen etwa *alle zwei Sekunden ohne Unterbrechung wiederholt* werden, bis die Hilfe eintrifft oder bis das Herz wieder normal schlägt.8. Tiefe lange Atemzüge holen mehr Sauerstoff in die Lunge und damit in den Körper und ins Gehirn und die heftigen Hustenbewegungen drücken das Herz und halten das Blut im Kreislauf. Der Druck auf das Herz hilft auch, den normalen Herz-Rhythmus wiederherzustellen. Auf diese Weise können Herzinfarkt-Opfer in ein Krankenhaus gelangen.9. *Erzähl dies so vielen anderen Leute wie möglich! Es könnte deren Leben retten!!!*10. Als Notfallmediziner sagte ich:*Wenn jeder, der diese Nachricht bekommt, es an 10 Personen sendet, kann man darauf wetten, dass jeder mindestens ein Leben retten wird*11. Anstatt Witze und Whatsapp Nachrichten und Bilder zu versenden, bitte  diesen Text weiterleiten oder teilen, der das Leben mindestens eines Mitmenschen retten kann.12. Wenn diese Nachricht erneut zu dir zurück kommt ... auch mehr als einmal ... bitte  ärgere dich nicht ... Du solltest stattdessen glücklich sein, dass Du viele Freunde hast, die sich für Dich interessieren und Dich immer wieder daran erinnern, wie man mit einem Herzinfarkt umgeht.13. Bitte :.....Ob du das weiterleitest? 🤔",reichsbuerger_adjacent
esser informiert: Zwei wichtige Themen im Bereich ihrer GesundheitHolistische Gesundheit Heilung und AufklärungIn dieser Kurzaudio sprechen wir über Fluoride und das Titandioxid und den wirklichen gesundheitlichen Gefahren. -Fluoride -TitandioxidW[ir sind nun auch auf InstagramIh](     re Holistische Gesundheit Heilung und Aufklärung,reichsbuerger_adjacent
"Entdecken Sie die Wahrheit hinter dem guten gesunden Fluorid und dem schlechten krankmachenden Fluori Auswirkungen auf Zähne, Zirbeldrüse, Knochen und Herz.Ihre Holistische Gesundheit Heilung und AufklärungFangen wir mit den guten Aspekten des Fluorids an. Höchstwahrscheinlich löst alleine diese Aussage eine Verwirrung in Ihnen aus. Durchaus verständlich, schließlich liest man zum großen Teil in der Alternativen Szene, dass Fluorid das pure Böse sei.So einfach ist es natürlich nicht. Wie immer gibt es mehrere Sichtweisen, die zu einer bestimmten Wahrheit führen.Das Fluorid, dass wir in natürlicher Form über Lebensmittel, wie zum Beispiel: Wildkräuter, Gemüse und Sprossen zu uns nehmen, nennt sich Calciumfluorid. Lin[k zum weiterlesen des gesamten Artikels hierWi](           amIhre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"MARKmobil Aktuell - ""Ich kann Frieden machen""Ein aktueller NachrichtenüberblickDie Themen:00:40 Trump: ""Ich kann Frieden machen""03:09 TwitterFiles: Die Wurzel der Russenhetze05:57 Neuer Antifa-Terror in USA09:09 Weitere Festnahmen beim Elektrogeld10:02 Minus Fünfzig: Kältewelle in Jakutsk12:16 NATO-General gewinnt in der Tschechei",reichsbuerger_adjacent
Der Muskelkater ,reichsbuerger_adjacent
"Themenkomplex SchminkenBaerbock lässt sich für 136.500 Euro schminkenMeine Meinung dazu: Für solche Summen mach ich aus einem Hausschwein einen Menschen, wer weiß, vielleicht ist genau das passiert....",reichsbuerger_adjacent
"Unsere Außenministerin hat in einem „leicht- bis mittelschweren Anfall von geistiger Umnachtung“ Russland den Krieg erklärt. Natürlich wurde diese Aussage von offiziellen Stellen aus der BRD-Administration wieder revidiert. Allerdings interessiert uns, wie die Russen und wie der Rest der Welt über diese Aussage denken. Des Weiteren wollen wir erfahren, wie sich die deutsche Zusage über Panzerlieferungen auf den aktuellen Konflikt auswirken und wird die BRD auch Flugzeuge und eigene Truppen schicken, wie von Herrn Andrij Melnyk, umgehend nach der Panzerzusage, angefordert wurden?Diese und viele weitere Fragen besprechen wir mit Hermann Ploppa!Seid LIVE dabei, am 31.01.2023 um 20:04 Uhr auf , ,  und .Wir freuen uns auf Euch! 🤗",reichsbuerger_adjacent
"Schau dir ""Warum auch DU ein NAZI bist..."" auf YouTube an",reichsbuerger_adjacent
"Eisenach am 30. Januar 2023Zum allwöchentlichen Bürgerprotest trafen sich am heutigen Montag freiheitsliebende Menschen, um lautstark ihren Anspruch auf Frieden, Freiheit und Souveränität auf die Straße zu bringen. Beim überparteilichen Spaziergang stand heute die Forderung nach Frieden im Ukrainekrieg im Mittelpunkt und Diplomatie statt Kriegstreiberei mittels Waffenlieferungen. Statt Panzer und Granaten… schickt die Ampel-Demokraten, als neue Front-Soldaten!Danke an alle Menschen, die jeden Montag Gesicht zeigen, in welcher Form auch immer. Danke für euren Mut, für euer Engagement, für euer Durchhaltevermögen, für eure Ideen, für euren Widerstand, für eure Energie. Wer schweigt, stimmt zu. Also sei du die Veränderung, die du dir für diese Welt wünschst und schließ dich an, für Frieden - Freiheit - Souveränität!Folgt uns auf: t.me/freiesth",reichsbuerger_adjacent
"Frieden Schaffen mit WaffenSo verhalten Sie sich bei Messer-Attacken:Man nehme eine Handfeuerwaffe, lade sie durch, entsichere sie und stoppe damit den Angriff. Stellen sie sicher das vom Angreifer keine Gefahr mehr ausgeht, nähern sie sich ihm nicht um nach erfolgter Niederstreckung Nothilfe zu leisten, der Messerangreifer könnte mit einem 2. Messer zustechen. Danach melden Sie den Vorfall der Polizei und rufen wenn notwendig einen Krankenwagen. Nur so müsste die Verhaltensregel lauten, nur so‼Das nennt man erfolgreiches Frieden schaffen mit Waffen, ist ja gerade im Trend dieser Narrativ.",reichsbuerger_adjacent
"Themenkomplex BuntlandWarum kann man ""Reichsrentner"" Medienwirksam verhaften hingegen man Messermörder mit Samthandschuhen behandelt?Diese Frage kann ich beantworten. Das #linkende Establishment bestraft jeden deutschen Patrioten, belohnt aber jeden Antideutschen. Nancy Faesers Verbindungen zur antideutschen Antifa sind ja nun ganz klar belegt. Was braucht es?Ganz einfach, die Höchststrafe für den chronisch begangenen Hochverrat. ",reichsbuerger_adjacent
"Die Stew Peters ShowKeine Immunität für Pfizer-Mörder Kriminelle Pfizer-Führungskräfte haben Völkermord begangenEine vermeintlich nicht existente Haftungspflicht von Big Pharma mit ihrer experimentellen Gentechnologie entspricht nicht der Wahrheit. Aufgrund  der Genfer Konvention können diese Firmen wegen Totschlags strafrechtlich belangt werden. Karen Kingston, die vormalige Patentrechts- und Kommunikationsexpertin von grossen Pharmakonzernen, enthüllt, dass jede Organisation, die vorsätzlich mordet, sich der Anklage vor einem ordentlichen Gericht nicht entziehen kann.In dem Dokument von 1949 sind biologische Experimente ausdrücklich als kriminelle Handlung aufgeführt.Die Biowaffe von Big Pharma wurde absichtlich entwickelt, um zu schaden. Deshalb ist die Vorstellung, sie könnten nicht strafrechtlich belangt werden,  aufgrund von Karen Kingston's Recherche, eine bewusste Verwirrtaktik.Quelle: HBitte folgt uns aufoder auf ",reichsbuerger_adjacent
"🟥 China gibt USA SchuldChina hat die Vereinigten Staaten für den Krieg in der Ukraine verantwortlich gemacht. „Die USA sind diejenigen, die die Ukraine-Krise ausgelöst haben“, sagte Außenamtssprecherin Mao Ning am Montag vor der Presse in Peking. Sie seien auch „der größte Faktor, der die Krise anfacht“. Indem die USA schwere und offensive Waffen an die Ukraine lieferten, verlängerten und verstärkten sie den Konflikt nur.Mit den Anschuldigungen reagierte Mao Ning auf eine Frage nach amerikanischen Vorwürfen, dass chinesische Unternehmen möglicherweise die russische Seite unterstützten. Die Sprecherin sprach von „unbegründeten Verdächtigungen“ und „grundloser Erpressung“. China werde nicht untätig bleiben, wenn die USA die legitimen Rechte und Interessen chinesischer Unternehmen schädigten.„Wenn die USA wirklich die Krise bald beendigen wollen und sich um das Leben der Menschen in der Ukraine sorgen, müssen sie aufhören, Waffen zu liefern und von den Kämpfen zu profitieren“, sagte Mao Ning. Die Verschärfung im Ton erfolgte nur wenige Tage vor einem Besuch des US-Außenministers Antony Blinken, der am Sonntag und Montag in Peking erwartet wird. Zuletzt war dort im Oktober 2018 ein US-Außenminister zu Gast.Quelle: FAZ R     🤝",reichsbuerger_adjacent
"Themenkomplex Systemische StörsenderIm Moment taucht in einigen Kanälen ein Beitrag eines ""Digital Warfare Division"" auf mit einer Sprachnachricht, gehalten in einer Art Schmähgedicht zu 1871, auf. Dieser angebliche Patriot der die preußische Verfassung von 1850 in den Himmel über alles hebt kann nur ein Hochverräter sein denn wer sich einen Profilnamen in englischer Sprache verpasst, kann kein deutscher Patriot sein. Herr Radon hat diesen Beitrag schon thematisch auseinander genommen, darum erfolgt von mir hier ein anderer Ansatz. Man merke: Kein wirklicher deutscher Patriot gibt sich selbst einen englischen Avatar-Namen, das tun nur vom Feind eingesetzte Hochverräter. Ferner ist es klar das diese Störsender zu denen auch die preußischen Kobolde gehören jetzt in die alternativen Medien gestreut werden da 1871 langsam aber sicher an Boden gewinnt, da müssen die Antideutschen natürlich gegenhalten. Mein Tipp zu solchen Beiträgen:Löschen und Profil blocken‼",reichsbuerger_adjacent
HEUTE IST WIEDER MONTAG ... Folgt uns  ,reichsbuerger_adjacent
Zitat der Woche,reichsbuerger_adjacent
"„Denn sie töten Westeuropa ab“ Nach der Einführung der Corona-Gen-Injektionen ist die Geburtenrate in 13 von 19 europäischen Ländern drastisch zurückgegangen. Die Schweiz verzeichnet den größten Geburtenrückgang, wie es ihn seit 150 Jahren nicht mehr gab. In Deutschland beträgt der Rückgang 8,3 Prozent. Jedes untersuchte Land weist eine monatliche Geburtenreduktion von mehr als 10 Prozent zum Vergleich der letzen drei Jahre auf. In jedem Fall „kann man eindeutig einen zeitlichen Zusammenhang mit den Corona-Impfungen herstellen“, so Dr. Chandler. Folgen Sie uns auf Telegram: ",reichsbuerger_adjacent
Wer lässt sich einfach so wegmorden?,reichsbuerger_adjacent
"Zu Sicherheit habe ich die Rede jetzt auch noch auf unseren Mediarebell Kanal hochgeladen, falls Youtube diese löschen sollte. Auf Mediarebell ist sie nicht zensierbar. Auch auf dem Kanal von Helge Spunkt (SpunktNews findet ihr sie. Dort diskutierte man in den Kommentaren auch darüber, dass das Video wohl nicht mehr lange zu sehen sein wird. Wir haben uns dennoch beide entschieden, dass Risiko einzugehen, die unzensierten Versionen zu veröffentlichen. Leider ist Youtube nun mal der Platzhisch, wo man auch die breite Masse erreicht, auch wenn wir zahlreiche Kanäle auf anderen Plattformen haben.",reichsbuerger_adjacent
"emeinsam zu einem gesünderen Leben: Folge uns auf InstagramHolistische Gesundheit Heilung und AufklärungEntdecke eine neue Welt der Gesundheit auf Instagram. Wir erweitern unsere Möglichkeiten gegenüber unserer Community und sind deshalb auch auf Instagram zu finden. Hier haben wir die Möglichkeit, dir vielfältigeren Content zu liefern und dich auf deiner Gesundheits-Reise zu unterstützen. Inspiration, Austausch und Fortschrittsmöglichkeiten warten auf dich. Verbinde dich mit Experten und motivierenden Community Mitgliedern und verbessere deine körperliche und mentale Gesundheit. Wir freuen uns darauf, dich auf Instagram zu begrüßenS[chließen Sie sich der stetig wachsenden Community an: Besuchen Sie uns jetzt auf Instagram.Ih](             re Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Themenkomplex GrundgesetzHier steht geschrieben:""Die Entstehung des Grundgesetzes der Bundesrepublik Deutschland darf nicht mit den strengen demokratischen Maßstäben gemessen werden, die in der Staatslehre der Französischen Revolution für die verfassunggebende Gewalt entwickelt worden sind.""Wer weiter liest wird feststellen, das die ""Rechtmäßigkeit"" lediglich auf einer ""Einlassung"" durch konkludentes handeln, also eine stillschweigende, durch schlüssiges Verhalten zum Ausdruck gebrachte Willenserklärung basiert. Kein Kläger, kein Richter...Lustiger Staat, wirklich ein lustiger Staat....",reichsbuerger_adjacent
"Themenkomplex FehleinschätzungenViele Menschen glaubten ja, das Defender 2020 ja zur Befreiung vom Tiefstaat in Europa durchgeführt wurde. Das Video zeigt ganz was anderes. ",reichsbuerger_adjacent
Nun sollte klar sein in wessen Auftrag ich unterwegs bin oder ?,reichsbuerger_adjacent
"Themenkomplex Anselm LenzIch habe es mir mal erlaubt dem Hern Lenz auf Apolut einen Kommentar zu seinem Podcast ""Warum wir nicht weichen werden"" zu machen.       Politiker und jene die es noch werden wollen reden immer gern über Volksabstimmungen in der BRD.Die AfD hat das ja auch sogar in ihrem Wahlprogram.Ich halte es für eine populistische Äußerung/Forderung denn in der repräsentativen Demokratie der BRD sind Volksabstimmungen nicht vorgesehen.Man lese dazu das Juristische Wörterbuch von Köbler, Ausgabe 18 Jahrgang 2022 zum Rechtsbegriff Volksabstimmung:Ich zitiere :Volksabstimmung ist die →Abstimmung der stimmberechtigten Staatsbürger über eine einzelneSachfrage. Die V. kann Volksbegehren oder Volksentscheid sein. Sie ist im →Grundgesetz – abgesehenvon Art. 29 GG – aus Misstrauen gegenüber dem Volk und zwecks Sicherung der Macht von Politikern nicht vorgesehen, so dass die Zielsetzung der führenden Politiker vielfach nicht mit dem Willen der Mehrheit des Volkes übereinstimmt.Was braucht es mehr?Nun zitiere ich Frau Merkel aus einer Rede zur Vorstellung des Allensbacher Jahrbuchs der Demoskopie ""Die Berliner Republik"" am 3. März 2010 in Berlin:"" Aber genau deshalb bin ich auch zutiefst davon überzeugt, dass es richtig ist, dass wir eine repräsentative Demokratie und keine plebiszitäre Demokratie haben und dass uns die repräsentative Demokratie für bestimmte Zeitabschnitte die Möglichkeit gibt, Entscheidungen zu fällen, dann innerhalb dieser Zeitabschnitte auch für diese Entscheidungen zu werben und damit Meinungen zu verändern. Wir können im Rückblick auf die Geschichte der Bundesrepublik sagen, dass all die großen Entscheidungen keine demoskopische Mehrheit hatten, als sie gefällt wurden. Die Einführung der Sozialen Marktwirtschaft, die Wiederbewaffnung, die Ostverträge, der Nato-Doppelbeschluss, das Festhalten an der Einheit, die Einführung des Euro und auch die zunehmende Übernahme von Verantwortung durch die Bundeswehr in der Welt – fast alle diese Entscheidungen sind gegen die Mehrheit der Deutschen erfolgt. Erst im Nachhinein hat sich in vielen Fällen die Haltung der Deutschen verändert. Ich finde es auch vernünftig, dass sich die Bevölkerung das Ergebnis einer Maßnahme erst einmal anschaut und dann ein Urteil darüber bildet. Ich glaube, das ist Ausdruck des Primats der Politik. Und an dem sollte auch festgehalten werden.""Was braucht es mehr?Die Ursache für diesen Zustand liegt in der Okkupation gemäß HLKO Artikel 43 begründet.Jedwede Volksabstimmung könnte mit den Interessen der Okkupanten kollidieren.Herr Lenz meint das Problem auf staatsrechtlicher Ebene lösen zu können.Das aber ist ein Trugschluss, das Problem, die Deutsche Frage kann nur auf völkerrechtlicher Ebene gelöst werden.Ende der Okkupation = Wiederhestellung des Rechtzustand ""ante bellum"" (einen Tag vor Kriegsbeginn, danach der Friedensschluss und erst dann in der wiederhergestellten Ordnung vor dem Zustand der Fremdherschafft kann eine Verfassung in Freiheit und Selbstbestimmtheit gemacht werden.Jeder der das ignoriert, ignoriert das Völkerrecht, ignoriert den Versailler Vertrag mit seinen bis Heute andauernden Rechtsauswirkungen und will nur eine neue politische Ausformung im Zustand der Okkupation herstellen.",reichsbuerger_adjacent
"Es ist die Entscheidung eines ganzen Volkes....Jenny Friedheim ""Klartext"" am 28 01 2023",reichsbuerger_adjacent
"Interessantes Statement. Dorothee Sölle (1969 zu: Christen in der Bundesrepublik.‼Nicht nur in der Bundesrepublik، sondern auf der ganzen Welt""Deine Gier ( Begierde  ist wie Feuer in der Welt""Rumi Moulana Bitte Kanal abonnieren und Teilen ",reichsbuerger_adjacent
"Themenkomplex Ernst WolffWolff wurde im chinesischen Tianjin geboren. Von 2011 bis 2013 war er bei der trotzkistischen  , damals noch Partei für Soziale Gleichheit, aktiv und schrieb in dieser Zeit für deren    S sten trotzige Kisten? 🧐Mein Fazit: Er ist alles andere als ein Freidenker, er folgt einer Ideologie, in meinen Augen also alles andere was eine zukünftige Gesellschaft braucht. Ideologen braucht es nicht, insbesondere jene nicht, die den Sozialismus in sich tragen. Es braucht Freidenker‼",reichsbuerger_adjacent
Der stille Protest an der B7 bei Eisenach.,reichsbuerger_adjacent
"ie uns Politik und Wirtschaft mit Zahlen Manipulieren. Krebs Cholesterin Blutdruck, die Tricks mit den Grenzwerten/Auszug aus dem Gesamt-Video zu finden unter (QHolistische Gesundheit Heilung und Aufklärung""Zahlen lügen nicht! Diese angebliche Wahrheit machen sich viele zunutze - vor allem Politik und Wirtschaft, lassen sich doch hinter scheinbar objektiven Zahlen die wahren Interessen und Ziele ""wissenschaftlich"" verbergen. Zahlen, Daten, Diagramme nach Interessenlage? Wie kommen Versicherer z.B. auf Lebenserwartungen von 115 Jahren bei ihren Prämienberechnungen? Diese Dokumentation begibt sich auf eine objektive Suche nach der Wahrheit im ""Land der Lügen"". Zeigt, mit welchen Tricks getäuscht und manipuliert wird. Und worauf wir in Zukunft achten sollten, wenn wir nicht im Zahlenmeer ertrinken wollen. Denn ohne Glaubwürdigkeit haben die besten Zahlen und die schönsten Statistiken jeden Wert verloren""Wis[sensbewahrung: Kurzversion/AuszugQu]( [elle:You-Tube lange Version‍](       Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"MAHNWACHE  IN EISENACH AM 28. JANUAR 2023Die Gefahr das sich der ""Krieg"" in der Ukraine auf Deutschland ausweitet wächst immer mehr. Die ""Politiker"" in Berlin entscheiden über das Volk hinweg und werden nun doch schwere Militärtechnik in das Kriegsgebiet entsenden.Die Menschen in Thüringen sagen dazu klar NEIN!""Frieden schaffen ohne Waffen"" lautete das Motto heute in Eisenach.Folgt uns  ",reichsbuerger_adjacent
Spontan in Eisenach....,reichsbuerger_adjacent
"""DEUTSCH - Ein offener Brief an alle Menschen dieses Landes""von Vulpes Cerritus -   ""Lieber Mitmensch, was bedeutet es eigentlich „Deutsch“ zu sein? Die aktuellen Umstände haben mich dazu gebracht in mich zu gehen und über diese Frage nachzudenken...""zum ganzen  oder zur  auch in Video auf e   ",reichsbuerger_adjacent
"Die 5 Biologischen Naturgesetze - Die Dokumentation(Q(Q(Q(Q(HHolistische Gesundheit Heilung und AufklärungAuf Wunsch und Anfrage stellen wir dieses Video für unserer Community nochmals zu Verfügung. Der Inhalt dieses Videos stellt die Grundlage eines komplett alten aber immer mehr wiederkehrenden Heilkunde dar.""Kurzeinführung in die 5 Biologischen Naturgesetze.  Die 5 Biologischen Naturgesetze (kurz: 5BN sind ein völlig neuer Denkansatz in der Medizin, mit dem zum ersten Mal in der Medizingeschichte die Ursache und der Verlauf von Krankheiten durch Gesetzmäßigkeiten beschrieben wird. Hinter den 5BN steckt ein logisch aufgebautes System, das sämtliche Krankheiten vom Schnupfen bis zum Krebs erklärt. Entdeckt wurden die 5 Biologischen Naturgesetze von Dr. Ryke Geerd Hamer.Mit dem Wissen um die 5BN sind Krankheiten keine Pannen der Natur mehr und auch keine Feinde, die wahllos und bösartig zuschlagen. Der Kampf gegen angeblich entartete Zellen mittels Chemotherapie und Bestrahlung erscheint aus der Sicht der 5BN nicht mehr zeitgemäß. Krankheiten werden vielmehr als Vorgänge im Körper begriffen, die zwar in der freien Natur sinnvoll und nützlich waren, in unserer heutigen, radikal anderen und oft unbiologischen Lebensweise aber gelegentlich über das Ziel hinausschießen und Probleme aller Schweregrade verursachen können.""Lin[k zum Weiterlesen des ArtikelsQu](    e       Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"ie Krebs Verschwörung! (Q (HHolistische Gesundheit Heilung und Aufklärung‍[Wir sind nun auch auf Instagram""In](      folgendem Video wird belegt, daß ""Krebs"" nicht auf sog. ""bösartige Zellen"" zurück zu führen ist, wie die milliardenschwere Krebsindustrie behauptet, sondern auf Parasiten und somit eine Infektionskrankheit ist. Es wird ebenfalls gezeigt, daß Chemotherapie und Bestrahlung den ""Krebs"" langfristig sogar fördern können. Diese Erkenntnis ist fundamental, da Krebs somit durchaus heilbar und vermeidbar ist, insbesondere durch die Stärkung des körpereigenen Immunsystems, beispielweise durch die möglichst vegane Ernährung... Danksagung an den Urheber: Aus ""Der Krebs-Bankrott"" von ARTV - Berlin (C 2003 - 2008""     ys[eeWissensbewahrung Telegramm/Absicher]( ungIhre Holistische Gesundheit Heilung und AufkrungDie Krebs Verschwör Qu schlussHolistische Gesundheit Heilung und Aufkl[ärung‍Wir sind nun auch auf Instag](     ram""In folgendem Video wird belegt, daß ""Krebs"" nicht auf sog. ""bösartige Zellen"" zurück zu führen ist, wie die milliardenschwere Krebsindustrie behauptet, sondern auf Parasiten und somit eine Infektionskrankheit ist. Es wird ebenfalls gezeigt, daß Chemotherapie und Bestrahlung den ""Krebs"" langfristig sogar fördern können. Diese Erkenntnis ist fundamental, da Krebs somit durchaus heilbar und vermeidbar ist, insbesondere durch die Stärkung des körpereigenen Immunsystems, beispielweise durch die möglichst vegane Ernährung... Danksagung an den Urheber: Aus ""Der Krebs-Bankrott"" von ARTV - Berlin (C 2003[- 2008""Link zum einem alternativen Denkweis](       [LBRY/OdyseeWissensbewahrung Telegr]( amm/AbsicherungIhre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Themenkomplex Recht/MoralEin kleiner Nachtrag zur Sendung mit dem Thema Naturrecht.Ich hatte ja im Video gesagt, dass man im Naturrecht die Moral nicht ausklammert und das war genau mein Ansatzpunkt, warum ich das Naturrecht als nicht geeignet halte.Dazu ein ziemlich aktuelles Beispiel unserer modernen Gesellschaft.Es gibt Menschen, die halten es für moralisch verwerflich, Tiere zur Eigenernährung zu töten.Andere hingegen halten es nicht für verwerflich.Es gibt auch Menschen, die halten es für moralisch nicht vertretbar, mehr als ein Kind in die Welt zusetzen, andere stimmen dieser Moral nicht zu.Weitere Beispiele könnte ich zur Genüge anführen.Wo will man daraus jetzt eine Rechtsprechung entstehen lassen?Gesetze sollten für alle Menschen im gleichen Maße gelten, ganz gleich welche moralische Ausprägung vorhanden ist, denn wenn man die Moral als Maßstab hinzufügt sich immer die Frage stellt, wessen Moral man dann als Maßstab nimmt.Derzeit, so ist es leider, haben wir einen Zustand im Lande, in dem sehr moralinsauer zu Werke gegangen wird.Jene, die behaupten, sie hätten die Moral gepachtet, bestimmen, wo es langzugehen hat und genau das sind die Folgen, wenn man die Moral gemäß dem Naturrecht in die Rechtsprechung mit einfließen lässt und genau das war auch der Zweck der Entwickler dieses sogenannten Naturrechtes, es ist immer ein Recht der moralisch überlegenen.Wundert es einen, dass es seinen Ursprung in der römisch-katholischen Kirche hat?Mich nicht....",reichsbuerger_adjacent
"Themenkomplex ""Es wird Biblisch""Nun ja, wenn Zircon von Oben mit der ""Erleuchtung"" grüßt, dann kann man das schon als ""Biblisch"" betrachten, es kam ja hoch vom Himmel her.....",reichsbuerger_adjacent
"""Matthias Warnig, Geschäftsführer der Nord Stream AG, offenbarte in einem Interview, dass Russland nicht an den Terroranschlägen auf die Nord-Stream-Pipelines beteiligt gewesen sei. Hinter diesen stecke ein NATO-Land, hieß es. """,reichsbuerger_adjacent
Geld macht Glücklich....Was will Gernot eigentlich? Der Besitz der deutschen Staatsangehörigkeit scheint ihm wie den Behörden der BRD nicht so wichtig zu sein....,reichsbuerger_adjacent
Themenkomplex William Toel Ein neues kurzes aber interessante Video von ihm. William Toel | Die Polen tun es schon wieder,reichsbuerger_adjacent
"Themenkomplex PatriotismusDa fährt man an die Tankstelle um sein Auto mit dem kostbaren Nass zu befüllen und siehe da, was muss man da erblicken? Das ist gelebter Patriotismus und danke für die Unterstützung 🤍",reichsbuerger_adjacent
"irbeldrüse aktivieren: 9 Maßnahmen, die das Dritte Auge öffnen(QHolistische Gesundheit Heilung und Aufklärung(""Die Zirbeldrüse ist das wohl mächtigste und faszinierendste Organ des Menschen. Zwar erscheint die kleine Drüse im ersten Moment weit weniger bedeutungsvoll, als sie tatsächlich ist.Zweifelsfrei wird sie jedoch seit Jahrtausenden von verschiedensten Kulturen rund um die Welt verehrt und auch zahlreiche wissenschaftliche Experten erkennen mittlerweile ihre außergewöhnliche Bedeutung für unsere körperliche, geistige und spirituelle Gesundheit an.So fungiert die Zirbeldrüse zum einen als innere Uhr, da sie unseren Schlaf reguliert und darüber hinaus auch für unsere intuitiven Fähigkeiten verantwortlich ist.""Lin[k zum Weiterlesen des ArtikelsHi](                  tagramHolistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"G: Massensterilisation + Krebs vor programmiert? | Dr. med. Dietrich Klinghardt | QS24 (Q(HHolistische Gesundheit Heilung und Aufklärung""Diese Sendung zeigt eine oppositionelle Sichtweise zur bestehenden #Mainstreamfakten auf, aber fundiert auf wissenschaftlichen Studien. Dabei geben einem diese Ergebnisse schwer zu denken und genügend Gründe, sich mit dem Thema #5G – nochmals eingehend zu beschäftigen. ""Que[lle:You-TubeAb]([sicherung/Wissensbewahrung‍]( sind nun auch auf InstagramI](     hre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
MARKmobil Aktuell - Übersterblichkeit steigt weiter anEin aktueller NachrichtenüberblickDie Themen:00:59 Zuviele Tote: Übersterblichkeit auf Rekordniveau02:25 Klimaschutz: Alle Argumente verloren03:40 Ukraine: Friedensdemos und Panzerlieferungen06:28 Massenexodus: Demokraten verlieren Einwohner08:05 US-Südgrenze: Joe Bidens neue App für Illegale,reichsbuerger_adjacent
"Themenkomplex BidenKürzlich in den USA auf einem Treffen der Demokraten""Die Idee, die Idee das wir das ganze offensive Material wie Panzer, Flugzeuge und auch Truppen schicken, verstehen sie und machen sie sich nichts vor, das nennt man Weltkrieg 3....""",reichsbuerger_adjacent
"Themenkomplex WeltenplanEs heißt, das wir am Ende des Fische-Zeitalters sind und das wir in das goldene Wassermann-Zeitalter hingehen. Axel Burkart hat dazu einige Videos gemacht. Weltenplan 1 – Was die Götter mit uns vorhaben",reichsbuerger_adjacent
"Themenkomplex AllianzenEs ist definitiv so wie es im Video ausgesagt wird. Ein Allianz Russlands mit Deutschland wäre ein Garant für Frieden in Europa und ein Garant für günstige Energie in ganz Europa. Der technologische Fortschritt der sich aus dieser Allianz entwickeln könnte wäre gigantisch. Was wir jetzt erleben ist immer noch die geostrategische Agenda der angloamerikanischen Fraktion nach der Herzland-Theorie von Halford Mackinder aus dem Jahre 1904.In diesem Kontext steht der Ukrainekonflikt und die ganze Nato-Osterweiterung. Wenn die angloamerikanische Fraktion in der Ukraine verkackt, ist es für sie gelaufen, dann hat sich das erledigt mit der Herzland-Theorie für die ewigen Kriegstreiber unter der Steuerung der Jesuiten und Leviten.",reichsbuerger_adjacent
Wir sind wieder unterwegs mit der “Heimatkunde-Tour” 11. u. 12.02.2023in Rheinland-Pfalz Anmeldung unter: CHL-17@gmx.de,reichsbuerger_adjacent
"Project Veritas veröffentlichte am Mittwochabend ein explosives Video von Jordon Trishton Walker, Pfizer-Direktor für Forschung und Entwicklung, strategische Operationen, in dem er zugab, dass der Pharmariese die Mutation von Covid-19 durch 'gezielte Evolution' erforscht, damit das Unternehmen weiterhin von Impfstoffen profitieren kann.""Erzähl es niemandem. Versprich mir, dass du es niemandem erzählst. “Eines der Dinge, die wir erforschen, ist: warum mutieren wir es [COVID] nicht einfach selbst, damit wir präventiv neue Impfstoffe entwickeln können, oder?Also müssen wir das tun. Wenn wir das tun, besteht jedoch die Gefahr, dass - wie Du Dir vorstellen kannst - niemand eine Pharmafirma haben will, die verdammte Viren mutiert "", sagte Walker dem Undercover-Journalisten von Project Veritas.""Erzähl es niemandem. Versprich mir, dass du es niemandem erzählst. Die Art und Weise, wie es [das Experiment] funktionieren würde, wäre, dass wir das Virus in Affen stecken und sie nacheinander dazu bringen, sich gegenseitig zu infizieren, und wir sammeln Serienproben von ihnen.”Walker sagt, dass gezielte Evolution anders ist als Funktionsgewinn (Gain-of-Function, die definiert ist als “eine Mutation, die einem Protein neue oder verstärkte Aktivität verleiht."" Mit anderen Worten, es bedeutet, dass ein Virus wie COVID abhängig von der Mutation / dem wissenschaftlichen Experiment, das daran durchgeführt wird, stärker werden kann.‼‼‼Der Pfizer-Manager erzählte einem Veritas-Journalisten von den Plänen seines Unternehmens für COVID-Impfstoffe, wobei er einräumte, dass die Öffentlichkeit diese Informationen nicht gerne hören würde, wenn sie an die Öffentlichkeit gingen.    ""Man darf keine Gain-of-Function-Forschung mit Viren betreiben. Normalerweise nicht. Wir können diese ausgewählten Strukturmutationen vornehmen, um sie stärker zu machen. Daran wird derzeit geforscht. Ich weiß nicht, wie das funktionieren soll. Hoffentlich gibt es keine weiteren Ausbrüche mehr, denn Jesus Christus"", sagte er.  ֔ ֔ ",reichsbuerger_adjacent
Gibt es ein deutsches Volk?Noch etwas detaillierter:Kurze Vids- aussagekräftig - schnell zu finden- unterhaltsam,reichsbuerger_adjacent
"""Stoppt die Deppen!!"" mit Monika Donner & Manuel C. MittasAchtung: Die in diesem Video disktuierte antidemokratische Haltung des Kommunismus und des Nationalsozialismus bezieht sich, wie anhand der einschlägigen Beispiele anhand von Stalin und Hitler ersichtlich, ausschließlich auf die historischen Negativauswüchse beider Ideologien und daher nicht auf die aktuell demokratisch legitimierten politischen Parten KPÖ, KPD etc..URTEIL DES OLG WIEN 1998    Mit Ihrer freiwilligen Zuwendung unterstützen Sie unsere Freie- und zu 100% unabhängige Medienarbeit!",reichsbuerger_adjacent
Putin in der tagesschau über die BRDQuelle: Unterstützen Sie uns !  ,reichsbuerger_adjacent
"Themenkomplex MelnykDas kleine Melnyk-Gerät aus der unbedeutenden, bald nicht mehr existierenden Ukraine, erinnert mich sehr stark an Mr. Creosote.Auch dieser war unersättlich, wie die kleine Raupe Nimmersatt. Am Ende explodierte Mr. Creosote und diese Explosion steht für mich symbolisch für die Explosion der Ukraine. Man merke: Wer nur gierig frisst wird platzen. Melnyk, das Musterbeispiel eines Menschen, der die 7 Todsünden in einer Person vereinigt hat.",reichsbuerger_adjacent
"Kommentar des russischen Botschafters in Deutschland Sergej Netschajew zur Entscheidung der Bundesregierung, Leopard-2-Panzer an die Ukraine zu liefern   Am 25. Januar 2023 hat die Bundesregierung der Lieferung von schweren Kampfpanzern vom Typ «Leopard 2» an das Regime in Kiew zugestimmt. Auch andere Länder, deren Armeen die Panzer in ihren Beständen haben, dürfen nunmehr die Maschinen an die Ukraine liefern.   Diese äußerst gefährliche Entscheidung hebt den Konflikt auf eine neue Konfrontationsstufe und widerspricht Behauptungen deutscher Politiker, die Bundesrepublik wolle sich in den Konflikt nicht verwickeln lassen. Leider passiert das immer wieder. Ein weiteres Mal überzeugen wir uns, dass Deutschland genauso wie seine engsten Verbündeten nicht an einer diplomatischen Lösung der ukrainischen Krise interessiert ist, diese permanent eskalieren lassen und das Regime in Kiew mit immer neuen todbringenden Waffen uneingeschränkt aufrüsten will. «Rote Linien» gehören somit der Vergangenheit an.   Die Entscheidung Berlins bedeutet, dass die Bundesrepublik ihr Bekenntnis zur historischen Verantwortung für gräuelhafte Verbrechen endgültig aufgibt, die vom Nationalsozialismus im Großen Vaterländischen Krieg an unserem Volk begangen wurden und keine Verjährung kennen. Den schwierigen Weg der Nachkriegsaussöhnung zwischen Russen und Deutschen lässt man dem Vergessen anheimfallen. Mit Zustimmung der Bundesregierung sollen wieder Kampfpanzer mit deutschen Kreuzen an die «Ostfront» geschickt werden, was nicht nur zum Tod russischer Soldaten, sondern auch zum Tod von Zivilisten unausweichlich führen wird.   Diese Entscheidung wurde von Berlin in den Tagen getroffen, wenn sich der Durchbruch der Blockade von Leningrad zum 80. Mal jährt, die Hunderttausende Sowjetbürger das Leben kostete. Diese Entscheidung macht das restliche gegenseitige Vertrauen zunichte, fügt den deutsch-russischen Beziehungen, deren Zustand ohnehin bedauernswürdig ist, einen irreparablen Schaden zu und lässt auf absehbare Zeit an ihrer Normalisierung zweifeln.   Weite",reichsbuerger_adjacent
"+++Ein Gesicht das es für ALLE Zeit zu Verachten gilt+++Baerbock sagte in Straßburg beim sog. Europarat: „WIR FÜHREN GEMEINSAM EINEN KRIEG GEGEN RUßLAND""Videobew[eisSo lasset](  die „Spiele"" beginnen...Heute schon denBlick auf Morgen",reichsbuerger_adjacent
"Die Ukraine-Krise, auch Orange Revolution genannt, war eine vom westlichen Ausland herbeigeführte   zum Zweck einer gegen Rußland gerichteten Einflußnahme in dessen direkter Nachbarschaft. Sie ebnete auch den Weg zur anhaltenden, h gefährlichen Osterweiterung des westlichen s. Die Krise gipfelte schließlich in den      2. Weiterlesen@Metapedia_Deutsch",reichsbuerger_adjacent
BRD-Kriegstreiber kämpfen nicht selbst!Dieses eckelhafte kriminelle Gesocks.🤬Ihr wollt die Wahrheit   ,reichsbuerger_adjacent
Seien Sie wachsam und beobachten Sie genau was auf der Weltenbühne vor sich geht.[‍Wir sind nun auch auf InstagramIh](     re Holistische Gesundheit Heilung und Aufklärung ,reichsbuerger_adjacent
"arum die Erdung so wichtig für den Menschen ist. / Mikroskopie von Blut nach einer ErdungHolistische Gesundheit Heilung und Aufklärung""Der menschliche Organismus benötigt die Erdung, um gesund und vital zu bleiben. Die Erdung bezieht sich auf den physischen Kontakt mit der Erdoberfläche und kann auf verschiedene Weise erfolgen, zum Beispiel durch den Kontakt mit dem Boden oder durch das Gehen barfuß auf Gras oder Sand.Die Erdung hat viele positive Auswirkungen auf den menschlichen Körper. Sie kann dazu beitragen, Stress und Anspannung zu reduzieren und das körpereigene Wohlbefinden zu steigern. Sie kann auch dazu beitragen, das Immunsystem zu stärken und die Entzündungsreaktion des Körpers zu verringern.Eine mögliche Erklärung dafür ist, dass die Erdung den menschlichen Körper mit negativ geladenen Elektronen aus der Erde verbindet, die als Antioxidantien wirken und die Zellen des Körpers schützen können. Die Erdung kann auch dazu beitragen, die elektromagnetischen Felder (EMF, die von elektronischen Geräten ausgehen, auszugleichen und die körpereigene Elektrizität zu regulieren.Es gibt viele Möglichkeiten, wie man sich mit der Erde verbinden und sich erden kann. Einige Möglichkeiten sind zum Beispiel das Gehen barfuß auf Gras oder Sand, das Schwimmen im Meer oder im Pool, das Sitzen oder Liegen auf der Erde oder das Benutzen von Erdungsmatten oder -schuhen. Die Mikroskopie von Blut nach einer Erdung ist eine Technik, die dazu dient, die roten Blutkörperchen im Blut zu untersuchen und zu analysieren. Rote Blutkörperchen, auch als Erythrozyten bezeichnet, sind die wichtigsten Zellen im Blut, die für den Transport von Sauerstoff und Kohlenstoffdioxid verantwortlich sind. Sie sind auch wichtig für den Säure-Base-Haushalt im Körper.Die Erdung von Blut bezieht sich auf die Verwendung von Elektronen, um das Blut auf einem Elektronenmikroskop sichtbar zu machen. Dazu wird das Blut in einer Lösung auf einem Glasobjektträger aufgetragen und dann mit Elektronen bestrahlt, um die Struktur der Erythrozyten zu zeigen.Eine Erdung von Blut ist besonders nützlich, um die Zirkulation der Erythrozyten im Blut zu untersuchen. Nach der Erdung wird die Zirkulation der Erythrozyten besser sichtbar, da die Elektronenstrahlung dazu beiträgt, die Struktur der Zellen hervorzuheben. Auf diese Weise können Ärzte und Wissenschaftler wichtige Informationen über die Funktionsweise und den Gesundheitszustand der Erythrozyten gewinnen.Es gibt verschiedene Techniken, die bei der Mikroskopie von Blut nach einer Erdung verwendet werden können, darunter Transmissionselektronenmikroskopie (TEM, Rasterelektronenmikroskopie (SEM und Fokussierungselektronenmikroskopie (FEM. Jede Technik hat ihre eigenen Vor- und Nachteile und wird für bestimmte Anwendungen am besten geeignet sein.Zusammenfassend ist die Mikroskopie von Blut nach einer Erdung eine wichtige Technik, die dazu beitragen kann, wichtige Informationen über die Zirkulation von Erythrozyten im Blut zu gewinnen und damit die Gesundheit und den Gesundheitszustand von Menschen besser verstehen zu können.""Erd[ungsmatte für ihren Schreibtisch, Sofa oder Stuhl.Hi](      [t.‍Wir sind nun auch auf In](            stagramIhre Holistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"Reichskanzler Otto von Bismarck formulierte einst die Grundsätze der deutschen Außenpolitik:„Gegen Russland führt man keinen Krieg. Immer wenn beide Länder zusammenstanden, ging es ganz Europa gut.“Alles vergessen! Wir lassen uns erneut in einen militärischen Konflikt mit Russland treiben. Jagt diese antideutschen Kriegstreiber endlich aus den Ämtern.Frieden mit unseren russischen Brüdern und Schwestern 🤍",reichsbuerger_adjacent
"Themenkomplex PädophiliePipi und die Pädophilen1969 – die Welt war für viele noch in Ordnung und in fester Sittenhaft. Alte Werte waren schon seit Jahren unter Beschuss und auf allen Ebenen wurde daran gearbeitet, die Gesellschaft umzuformen und die Geisteshaltung einem neuen Narrativ anzupassen. Ein schleichender Vorgang der von den selbst ernannten Architekten einer neuen Menschheit wohl überlegt und in kleinen Schritten vollzogen wurde. Es waren die Medien, die das neue Weltbild verbreiteten. Liebe, Freiheit und unbegrenzte Möglichkeiten. Oberflächlich. Doch unbemerkt hat man angefangen, Kinder als Opfer der Begierde darzustellen. Und zwar so, dass es selbst heuten vielen nicht auffällt.Pipi Langstrumpf als Kinofilm war ein Bombenerfolg. Der Film der 1969 in die Kinos kam, faszinierte Jung und Alt gleichermassen und doch war es der Anfang öffentlicher Kinderpornographie in den Kinos und später auch im Fernsehen. Pipi Langstrumpf war ein Türöffner.Ein Kind in Strapsen, der feuchte Lolita-Traum einer kranken 68er Generation. Der erste Film in dem das Unterhöschen der minderjährigen Protagonistin immer wieder gezeigt wird und der gespickt ist mit kinderpornografischen Anspielungen. Nie zuvor wurden Kinder in diesen Posen gezeigt. Pipi m Schneidersitz, natürlich mit Sicht auf die Scham, eine an einer Lampe hängenden Pipi, oder Pipi die Zunge heraus streckend, in verschiedenen Posen – und immer im kurzen Rock, Strapsen und nackten Oberschenkeln – und das nicht nur einmal. Mal ganz abgesehen davon, dass das Wort Pipi auch noch ganz andere Bedeutungen hat.",reichsbuerger_adjacent
DAS passiert wenn Erstklässlern Angst vor'm Klima gemacht wird... Das ganze Video gibt's hier,reichsbuerger_adjacent
"JUST IN - Germany will supply at least one company of Leopard 2A6 tanks to Ukraine, Spiegel reports.@disclosetv",reichsbuerger_adjacent
"Themenkomplex KorporatismusEs war kein anderer als Benito Mussolini der sagte, dass der Faschismus eigentlich ""Korporatismus"" heißen müsste.Was haben wir jetzt? Korporatismus, also defacto Faschismus ‼",reichsbuerger_adjacent
"Preußen und RomWer nun glaubt, es sei jetzt Friede, wenn auch ein nicht gerader ruhmvoller Friede -, der hat keine Ahnung, dass sich hier zwei Mächte gegenüberstehen, die ihrem ganzen Wesen nach wohl einen Waffenstillstand, niemals aber einen dauernden Frieden schließen können. Das hat niemand anderes als die zum Sprecher in dieser Frage am meisten berufene päpstliche Monatsschrift, die Civilta cattolica, deutlich und eindringlich gesagt mit den Worten:„Der Kampf wird in Preußen, sei es in dieser oder in einer anderen Gestalt, fortdauern, solange Preußen besteht. Denn zu seinem wahren und Hauptgrunde hat der Kampf die innerste Natur dieses Staates. Preußen steht sowohl seinem Ursprunge nach wie in seiner Entwicklung alle Stufen hindurch im geraden Gegensatze zur katholischen Kirche…..Preußen in seiner Gestalt und Zusammensetzung beruht auf dem Protestantismus und seinen Lehren. Preußen ist der Wall und die Festung des Protestantismus in Deutschland. Auf Preußen sind die Blicke derer gerichtet, welche sich in Folge des beklagenswerten Abfalls des 16. Jahrhunderts von der Kirche getrennt haben. Mit Preußen steht und fällt der Kampf gegen die (römische Kirche in Europa.“Kann eine größere Deutlichkeit verlangt werden? Der Kampf zwischen Kaiser und Papst, der Kampf des römisch-katholischen und des protestantischen Staatsprinzips muss heute oder morgen wieder entbrennen. Und nicht früher wird Friede sein – so verkündigt es das römische Blatt – als bis das protestantische Preußen und mit ihm der Protestantismus am Boden liegt, zerrissen, zertreten, wie einst das alte Kaisertum nach dem Sturze der Hohenstaufen.Noch steht der Protestantismus aufrecht. Aber es ist Zeit, die todbringende Lässigkeit und Gleichgültigkeit abzulegen, diesen besten Bundesgenossen Roms, das uns bereits mit tausend Schlingen umsponnen hat. Wem der Protestantismus, das Evangelium vom Sohne des lebendigen Gottes, die Gewissensfreiheit, die Größe und Einheit des deutschen Vaterlandes noch teuer und wert sind, der schließe sich an an die Reihen jener Männer, welche den Evangelischen Bund errichtet haben zu Schutz und Trutz wider das jesuitische Rom und seiner Welt-Herrschaftsgelüste!QuelleWas würde uns ein Sieg Roms kosten?1888🟥=Alex",reichsbuerger_adjacent
"Die Antifa hat in den letzten Tagen in Georgia randaliert und es gab einige VerhaftungenMajorie Taylor Greene, die Kongressabgeordnete für Georgia gibt dazu eine Stellungnahme bei Tucker Carlson ab.""Amerika die Nase voll von Antifa. (... Allein im Jahr 2020 sind sie für fast 2 Milliarden Dollar Schaden und viele Tote verantwortlich. (... Antifa sind die Bodentruppen der Demokratischen Partei. Sie sind nicht nur die Bodentruppen, sie züchten sie, sie ziehen sie auf, und dann holen sie sie aus dem Gefängnis, wenn sie verhaftet werden, aber sie werden nie belangt. (... Nun, es ist an der Zeit, etwas gegen die Antifa zu unternehmen. Und deshalb werde ich ein Gesetz einbringen, um die Antifa zu inländischen Terroristen zu erklären, weil sie zerschlagen werden muss. Wir müssen genau untersuchen, wer sie sind, wer sie finanziert, und dann müssen wir sicherstellen, (... dass sie verhaftet und wegen inländischen Terrorismus angeklagt werden (... Genug von der Antifa. (... Sie sind die Faschisten.""",reichsbuerger_adjacent
Bald auch in diesem Theater ,reichsbuerger_adjacent
"Themenkomplex SpiritualitätManch ein Mensch denkt, er sei hoch Spirituell. Wenn man dann hinter die Kulissen schaut wird man erkennen, das diese Spiritualität ihren Ursprung in Spirituosen hat.Man merke: Spritualität ist nicht gleich Spiritualität ",reichsbuerger_adjacent
"Themenkomplex ZeitreisendeWar/ist  der Kopf der Band Fischer-Z, John Watts ein Zeitreisender? Der Buchstabe ""Z"" im Namen der Band nebst der Texte seiner Songs lassen was vermuten.Hier der Song ""Battalions of Strangers""",reichsbuerger_adjacent
"Themenkomplex ZeitreisendeWar/ist  der Kopf der Band Fischer-Z, John Watts ein Zeitreisender? Der Buchstabe ""Z"" im Namen der Band nebst der Texte seiner Songs lassen was vermuten.Hier der Song ""Cruise Missiles""",reichsbuerger_adjacent
"Themenkomplex Honeypot-KanäleEin weiterer Nachtrag nebst einer Ansage.Ich werde die Tage einen Mitgliederabgleich meines Kanals mit dem Kanal Rechtsmärchen vornehmen. Jeder der in meinem Kanal sowohl als auch in diesem Dreckskanal ""Rechtsmärchen"" ist, bekommt die Gelegenheit sich zu entscheiden, entweder oder. Nach Ablauf einer noch unbestimmten Frist, werde ich alle aus meinem Kanal entfernen, die diesem Honeypot ""Rechtsmärchen"" beiwohnen. Die Schonzeit ist vorbei, ich habe keinen Bock mehr auf Idioten. Die Guten ins Töpfchen, die Schlechten ins Kröpfchen, stammt auch einem Märchen, sollte man kennen......",reichsbuerger_adjacent
"Themenkomplex Honeypot-KanäleNachtrag zum Kanal Rechtsmärchen. Die Wesenheiten die diesen Kanal betreiben sind nicht nur Vollidioten, nein sie sind Betrüger und Schwerverbrecher. Wo im Deutschen Reich galt denn das ALR? Im ganzen Reich? Nein, es galt vornehmlich nur in Preußen. Jeder Bundesstaat/Gliedstaat des Deutschen Reiches hatte nahezu seine eigene privatrechtliche Kodifikation. Wenn man dieses im Hinterstübchen hat, so weiß man das dieser Kanal ""Rechtsmärchen"" nur Bullshit produziert. Teeren und Federn oder Kielholen sollte man diese Hochverräter.",reichsbuerger_adjacent
"Themenkomplex Honeypot-KanäleDer Kanal ""Rechtsmärchen"" ist ein Kanal den man zwingend als Honeypot bezeichnen muss. Dort werden so gut wie keine Belege für die getroffenen Aussagen gezeigt, sprich der Kanal produziert nur wohlklingende Märchen. Er verschweigt dem Follower nahezu alle Tatsachen über das ALR (Allgemeine Landrecht preußischer Staaten. Wer sich in sein Gehirn scheißen lassen mag, der folgt diesem Honeypot, einen Löffel zum umrühren hat ja jeder selbst zu Hause. Aufgewachte Menschen meiden solche Kanäle, Idioten folgen ihnen.",reichsbuerger_adjacent
"er Krieg gegen das menschliche Integralsystem/Immunsystem Krebs heilen und Gesund leben(Q(Q(HHolistische Gesundheit Heilung und AufklärungDieses mehr als aussagende Video hatten wir vor 6 Jahren abgesichert. Umso erstaunter waren wir, dass dieses Video kaum noch öffentlich zur Verfügung steht. Wir teilen dieses Video mit Ihnen. Es wird Ihnen einen übergeordneten Blick auf die Jahrzehntelange Agenda verschaffen.""Trotz der „Bemühungen“ der Ärzte steigt jedes Jahr die Zahl der Krebspatienten. Ist es nicht eher ein gut geplanter Krieg gegen das menschliche Immunsystem, ein Krieg, der mehr und mehr bitter ist? Chemotherapien enthalten hoch toxische Verbindungen und töten die Zellen des Immunsystems.  Aber der Candida wird nicht entfernt.Die letzten Fragmente des Immunsystems, so zu sagen, die letzte Bastion, die den chemischen Angriff überlebt hat, ist nicht in der Lage, den Candida zu kontrollieren. Der Pilz kann nun unkontrolliert  andere Organe und Gewebe besiedeln. Der Krebs breitet sich im ganzen Körper aus. Diejenigen, die nach Operation und Chemotherapie gesund scheinen, tragen nichts anderes als eine Zeitbombe in sich. Denn das Immunsystem ist ja vollkommen zerstört worden. Das Auftreten von Rezidiven ist hier nur eine Frage der Zeit. Mit anderen Worten: Chemotherapie tötet Menschen, anstatt sie zu retten. Um Krebs zu heilen, müssen wir das Immunsystem stärken und nicht schwächen oder gar zerstören.""Lin[k zum weiterlesen des ArtikelsAr](          er[ungYouTube-L](Wir sind nun auch auf Instag](     ramHolistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
"ichtige Hacks die in Krisenzeiten helfen können.(QHolistische Gesundheit Heilung und AufklärungAuf unseren Kanal veröffentlichen wir weiterhin Tricks und Möglichkeiten, damit Sie sich für den Alltag oder ernstere Umstände neue Skills aneignen können. Unsere Partner und auch wir möchten Sie drauf hinweisen, dass Sie nach Medienplattformen umschauen sollten die Ihnen und ihrer Familie Lösungen anbieten. Angst ist der schlechteste Ratgeber, besonders in dieser jetzigen ZeitHie[r kommen Sie zur Quelle des VideosHi](      [ge‍Wir sind nun auch auf I](             nstagramHolistische Gesundheit Heilung und Aufklärung",reichsbuerger_adjacent
An dieser Stelle wünsche ich allen eine Gute Nacht,reichsbuerger_adjacent
"Themenkomplex FalschlenkerMan erinnere sich, in Bezug auf die rechtliche Relevanz des Vorwortes des Grundgesetzt (dort aufgeführter Geltungsbereich war sich Herr Radon immer sicher, da hieß es ""Das ist nur eine Präambel, ein Vorwort ohne jegliche rechtliche Relevanz.""Ganz anders ist das natürlich bei der Verfassung von 1871, da hat die Präambel, das Vorwort die tiefste juristische staatsrechtliche Bedeutung....Fazit: Ein weiteres Paradoxon liegt an und Ursächlich dafür ist das Vorhandensein zweier unterschiedlicher Maßbänder die man je nach Gusto in Gebrauch bringt, es muss halt alles zur eigenen These passen.....Man merke: Von rechtlicher Relevanz ist immer nur das geschriebene Wort, welches mit einem Paragraphen § eingeleitet wird.",reichsbuerger_adjacent
Die Verstöße der USA gegen das VölkerrechtOberst a.D. Richard Black: Die USA führen die Welt in den AtomkriegDieses Video sollte man sich in seiner Gänze ansehen‼,reichsbuerger_adjacent
"geht`s los ? Folge 465 -Version                                                                                                                                                                                                                                                  Themen:- Fahruntüchtigkeit ?- gibt Olaf die Leo`s frei ?- was ist mit Abrams ?- USA haben Krieg angezettelt ?- Joe`s Dokumenten Flat ?- False Flag Allarm ? Ihr findet uns auf: - S YouTube- S Rumble -   - D[Live—](———————————Telegramm Hauptkanal:  Chat:        ———————————Wir schenken Euch gern unsere Zeit, da schenken Freude bereitet.Möchtet Ihr uns etwas zurückschenken, dann geht das hier:SC-360Media DE72370190001010241200BUNQDE82XXXoder",reichsbuerger_adjacent
"Eisenach am 23. Januar 2023Zum allwöchentlichen Bürgerprotest trafen sich am heutigen Montag freiheitsliebende Menschen, um lautstark ihren Anspruch auf Frieden, Freiheit und Souveränität auf die Straße zu bringen. Beim überparteilichen Spaziergang stand heute die Forderung nach Frieden im Ukrainekrieg im Mittelpunkt und Diplomatie statt Kriegstreiberei mittels Waffenlieferungen. Danke an alle Menschen, die jeden Montag Gesicht zeigen, in welcher Form auch immer. Danke für euren Mut, für euer Engagement, für euer Durchhaltevermögen, für eure Ideen, für euren Widerstand, für eure Energie. Wer schweigt, stimmt zu. Also sei du die Veränderung, die du dir für diese Welt wünschst und schließ dich an, für Frieden - Freiheit - Souveränität!Folgt uns auf: t.me/freiesth",reichsbuerger_adjacent
"Hier ein kleine Zusammenfassung aus Eisenach zum heutigen Montagsprotest. Auch wenn es an Masse fehlt, so haben die Menschen die in Eisenach Montag auf Montag protestieren eines verstanden, eine Änderung wird nicht von Zauberhand von außen kommen, wir wollen mitbestimmen wohin die Reise geht und ob nun juristisch nachgewiesener Deutscher oder nicht, hier laufen Menschen die ein klares Ziel haben. DIE SOUVERÄNITÄT!!!!!! 🟥Und davon lassen wir uns in Eisenach nicht abbringen, ob mit 10.000, ob mit 1.000 oder mit 300 Menschen, die Zukunft wird aus Mut gemacht und von Menschen die für ihre Forderungen aufstehen und einstehen, wer nur sitzt und nörgelt, der wird nichts ändern oder keinen Impuls zur Änderung beitragen.Raus auf die Straßen, für die SOUVERÄNITÄT   WAS SONST🤍",reichsbuerger_adjacent
-VersionHeimatkunde Tour aus Sachsenvom 22.01.2023Stephan im Interview mit Alex von +Vortrag von Alex zu Staats & Völkerrecht,reichsbuerger_adjacent
"Es liegt nur an uns selbstDer Text vom Song ""Crime of the Century"" von Supertramp trifft es punktgenau. Die letzten 4 Zeilen sagen es, die Menschen haben den Wahnsinn einiger weniger zugelassen, ja sogar unterstützt. Jetzt gerade planen sie das Verbrechen des JahrhundertsNa, was das wohl sein wird?Lies doch nur was sie sich alles ausdenken und was sie dabei aufs Spiel setzen.Der Aufwand lohnt sich.Komm nur näher ran und schau dir anWie sie das Universum vergewaltigen.Wie sie vom Schlechten zum Schlimmeren kommen konnten.Wer sind diese Menschen, die nur Gier und Geltungssucht kennen?Reißen wir ihnen die Masken runter und schauen nach.Aber das ist doch nicht möglich- oh nein, was ist da los?Das bist ja du und das bin ja ich.Das darf doch nicht wahr sein!!",reichsbuerger_adjacent
"Noor Bin Ladin sendet eine direkte Botschaft an Klaus Schwab und seine Handlanger""Mein Name ist Noor Bin Ladin. Ich bin ein menschliches Wesen - kein QR-Code. Ich will die Käfer nicht essen. Ich will nicht in der Kapsel leben. Ich will nicht in einem digitalen Gefängnis gefangen sein, und nichts, was sie tun, wird mich dazu bringen.""CheckMateNews   |   |   |    |          ",reichsbuerger_adjacent
"Schert Euch an die Front, Ihr verdammten Kriegstreiber und Heuchler!",reichsbuerger_adjacent
"Achtung FlaggenalarmMit Verwunderung musste ich feststellen, das diese Flagge des Öfteren jetzt auf den Stillen Protesten an den Bundesstraßen zu sehen ist. Ihr solltet euch nicht wundern, das man euch dann als ""Nazis"" tituliert denn diese Flagge kombiniert ganz geschickt Stilmittel des Dritten Reiches mit den Farben .Eine solche Flagge hat es im Deutschen Reich von 1871 bis 1918 nicht gegeben. Ich kann anders wie manch ein anderer nichts befehlen aber eine Empfehlung kann ich schon aussprechen. Lasst solche Scheißfahnen weg wenn ihr es ehrlich meint, nutzt sie weiterhin wenn ihr die Stillen Proteste zerstören wollt.",reichsbuerger_adjacent
"Wie aus einem Sturm ein Lüftchen wirdAls ein Pionier in Sachen Enttarnung und Aufklärung sage ich euch, dass es  im Bereich des Möglichen liegt, dass ich euch in naher Zukunft diese Verwandlung eines Sturms in ein laues Lüftchen präsentieren werde. Es wird spannend....",reichsbuerger_adjacent
"Kein Pardon, volle Strafverfolgung mit größter möglicher Härte PUNKT",reichsbuerger_adjacent
"Forderst Du Auch ""Aufarbeitung""? Ich Klartext persönlich fordere sogar eine juristische Aufklärung und vor allem eine Verurteilung aller Beteiligten ‼Ihr wollt die Wahrheit   Ihr wollt die Wahrheit   ",reichsbuerger_adjacent
"K tomu videuna konci rika: "" Videl jsem jak nemecky vojak vyrval stare ukrajinske zidovce vnoucka z naruce a probodl ho bajonetem...Tohle admin nemeckeho kanalu neprelozil a tak jsem mu napsala komentar, ze jsou lide, kteri rusky mluvi a rozumi a presny preklade toho co ten pan rika a ze taky ze prelozil jen to co se mu hodi, ale ze i nemecti vojaci pachali svinsva to ne. Okamzite muj komentar smazal a zablokoval me. ",conspiracy
"Přeživší masakru Babi Yar z 29. až 30. září 1941 v Kyjevě, kde bylo zavražděno 33 771 Židů:  „Všichni Židé by se měli shromáždit na židovském hřbitově. Vedli nás tam ukrajinští nacionalisté a Němci. bastardi!""",conspiracy
Jak se tvoří 3 slunce?Corona slouží ke zpochybnění všeho od masky po naši historii a tvar Země,conspiracy
"Paní Korupce‼Von der Leyen další ""skvělý kousek""Nabídka společnosti Pfizer na nákup zbraní.Von der Leyen to oznámila na mnichovské (nebezpečnostní konferenci.Šéfka komise von der Leyen byla kritizována za nákupy vakcín od americké společnosti Pfizer. Státy EU dokonce chtějí smlouvy znovu projednat.VDL to ale nezpochybňuje: nyní chce také nakupovat zbraně a střelivo pro Ukrajinu – v souladu s dohodou Pfizer.",conspiracy
"Polsko blokuje nové sankce proti Rusku, údajně proto, že jsou příliš laxní. Ostatní členské země to považují za přetvářku – Varšava chce na situaci finančně vydělat.Během vyjednávání o desátém balíčku unijních sankcí vůči Rusku se mezi Polskem a dalšími 26 členskými státy strhla ostrá hádka.",conspiracy
"V Tel Avivu demonstrují židovští občané proti banderovským nacistům, kteří mají na Ukrajině bojují proti Putinovým jednotkám.Bandera vraždil Židy během druhé světové války. Pro dnešní ukrajinské nacionalisty je Bandera hrdina. I to ukazuje, KDO doopravdy je dnešní Evropská unie.",conspiracy
"Generální tajemník NATO v komentáři k čínskému mírovému plánu řekl, že „Číně se moc nedůvěřuje“.🤭 EU uvedla, že prověří čínský navrhovaný dokument o urovnání Ukrajiny, ale „s ohledem na  přátelství Číny s Ruskou federací“.🤦🤡",conspiracy
"A další kousek projevu Micka Wallace v Evropském parlamentu„Kancléř Scholz řekl, že bez Ruska nemůže být v Evropě mír. Ale nejprve Německo poslalo přilby na Ukrajinu, teď posílá tanky, aby zabíjely Rusy. Co se stalo s Německem – perlou Evropy? Bojím se o Evropu,“ řekl z pódia.",conspiracy
"Netrvalo dlouho a Macron vyvolal protesty farmářů na zemědělské výstavě...Kdo seje vítr, sklízí hurikán!Macron také začátkem dubna oznámil návštěvu ČínyA to vše proto, aby Peking pomohl Francii vyvinout tlak na Rusko: ukončit konflikt na Ukrajině a nastolit mír.""Dnes by nám Čína měla pomoci vyvinout tlak na Rusko, aby nepoužívalo chemikálie ani jadernou energii, a zastavit tuto agresi pro jednání,"" řekl novinářům francouzský prezident 🤡.",conspiracy
"Rusko taky hlásí o mírovém demu v Berlíně , mohlo by to být také vnímáno jako volání o pomoc od německých občanů, čím rychleji je tu Putin a Aliance, tím rychleji máme mír a jsme osvobozeni od fašistů (nacistických konstruktů   ",conspiracy
Sahra Wagenknecht vcera v Berline ,conspiracy
"Ve východní Africe se vytvořily hluboké trhliny táhnoucí se mnoho kilometrů. Jsou znamením, že v blízkosti Afriky brzy vznikne další kontinent.O tom to jeV Africe se tvoří nová tektonická deska.Somálská deska se odděluje od africké desky.",conspiracy
Požár ropy v Mexiku.,conspiracy
"článek France Info z roku 2017, před Macronovým zvolením, vyprávěl, že se stal milionářem v roce 2012 díky svému postavení investičního bankéře, když čtyři roky pracoval v ROTHSCHILD & Co.Tam se stal milionářem tím, že umožnil společnosti NESTLÉ koupit pobočku PFIZER NUTRITION. ",conspiracy
Krasne rano ,conspiracy
"Zemětřesení o síle 6,1 stupně v JaponskuABěhem 24 hodin vypukly masivní požáry ve třech mexických státních ropných zařízeních, včetně jednoho v Texasu",conspiracy
"Schwabův nástupce a terorista Trudeau křičí ""Sláva Ukrajině!""Odpověď:""Fuck Trudeau!""Ano, to se musí konečně stát!",conspiracy
"Přírodní katastrofa 24. února 2023. Africké pobřeží je ponořeno poté, co cyklon Freddy zasáhl MosambikTropický cyklon Freddy, který pustoší Indický oceán, se prohání Madagaskarem a slábne, v pátek v podobě mírné tropické bouře dopadne na pevninu v Mosambiku.Vítr, který doprovází jev počasí, průměrně 65 km/h s nárazy až 90 km/hNa Madagaskaru způsobil značné škody.Podle nejnovější aktualizace bylo záplavami postiženo 78 000 Malgašů, z nichž mnozí museli evakuovat své domovy.V tuto chvíli nikdo nechybí.",conspiracy
Na SK takto.,conspiracy
"Změnili téma, ale barvy zústaly...proč?",conspiracy
"„VÍCE NEŽ 30 MILIONŮ SMRITELNÝCH DÁVEK“ – Phoenix DEA, Tempe policie zabavila více než 4,5 milionu fentanylových pilulek, 140 liber fentanylového prášku 3 000 liber pervitinu, 130 kg kokainu ve společné operaci.                                                                                                                      ",conspiracy
Jižní DakotaCorona slouží ke zpochybnění všeho od masky po naši historii a tvaru Země....,conspiracy
"VELKÉ ZEMETŘESENÍ V JAPONSKU S M6.1Těsně u pobřeží Japonska poblíž Hokkaida došlo z hloubky 10 km k masivnímu zemětřesení M6.1, které uvolnilo energii 1,3 ekvivalentu atomové bomby. Zemětřesení se odehrálo daleko od zlomových zón, ale nachází se přímo na Boninském oblouku, který je stejně jako Kermandec nebo Tonga Graben velmi hluboký a reaguje na lávové výrony, které „pracují“ na tamních litosférických deskách. Na pevnině bude zemětřesení cítit spíše mírně, ale koneckonců v okruhu 100 km kolem epicentra žije téměř 150 000 lidí, pro které to mohlo být trochu otřesené! 74 km daleko se nachází sopka Mashu, která naposledy vybuchla před více než 1000 lety.",conspiracy
Tesla cívka z 19. století. Umožňuje bezdrátový přenos elektřiny.,conspiracy
"Staré video, ale stále aktuální... stále si toto SVINSTVO můžete koupit.Každý ji zná a každý ji jistě vyzkoušel a možná ji pijete dodnes?Podívejte se, co se stane, když uvaříte Coca Colu!Opravdu něco takového ve svém těle chcete?",conspiracy
"V roce 1998 tento muž Stanley Meyer postavil auto na vodní pohon a poté záhadně zemřel.Zajímalo by mě, co by se mohlo stát, kdyby tyto vynálezy nebyly potlačeny, ale bohužel velké ropné společnosti vědí, že pak není na čem vydělat.",conspiracy
V  Kyjevě hoří závod chemického průmyslu. O obětech zatím nejsou žádné informace.‌‌,conspiracy
"""Drazí lidé, svět se bude třást před bouří, která má přijít. Všechny národy budou žasnout nad odhalením. Nikdy neztrácejte víru, protože to nejlepší teprve přijde. Víra je mocnější než vláda a nic není mocnější než Bůh!""Citát: Donald Trump",conspiracy
"Ruský prezident Vladimir Putin v úterý ve svém projevu k národu kritizoval další nedůslednost v postupu Západu.""Bráníme lidské životy a naši společnou vlast, zatímco Západ usiluje o neomezenou moc. Na podporu a vyzbrojování kyjevského režimu už utratil přes 150 miliard dolarů. Pro představu: podle Organizace pro hospodářskou spolupráci a rozvoj,"" uvedl. země G7 přidělily nejchudším zemím světa na období 2020 až 2021 kolem 60 miliard dolarů. Je to jasné? Na válku utratily 150 miliard dolarů, zatímco nejchudším zemím přidělily 60 miliard dolarů, ačkoli předstírají, že se o ně starají po celou tu dobu .",conspiracy
"Plukovník: Válka na Ukrajině je pro NATO „katastrofa“: „Rozpadne sePokud Ukrajina vstoupí do NATO, Rusko by mohlo být napadeno přímo. Rusko to nedovolí, řekl GB News plukovník ve výslužbě Douglas Macgregor. Rusové by neměli jinou možnost, než bojovat až do konce, dodal.„Rusko bude bojovat až do hořkého konce, k polským hranicím,“ předpovídá plk. ""A pokud budeme pokračovat v boji z Polska, Polsko se stane součástí války."" ""Pro NATO je to katastrofa,"" zdůraznil. „NATO to nepřežije a rozpadne se. To se již děje v zákulisí. A Německo je přesně uprostřed.Němci, stejně jako většina ostatních Evropanů, absolutně nečekají na válku s Ruskem.",conspiracy
"""Snaží se nás zabít? Maso z laboratoře za pomoci Billa Gatese obsahuje RAKOVINOVÉ BUŇKY a mohlo by způsobit děsivé zdravotní problémy.""Někdy se člověk musí divit, co mají globalisté za lubem. Bombastická zpráva z Bloomberg začátkem tohoto měsíce odhalila, že laboratorní maso silně podporované Billem Gatesem obsahuje rakovinné buňky.Čtete správně. Když konzumujete falešné maso, konzumujete oslavované rakovinové nádory.Joe Fassler, autor článku, odhalil, že společnosti, které produkují maso vypěstované v laboratoři, používají takzvané „kultivované maso“, což znamená „nesmrtelné buňky“. V některých případech jsou tyto buňky zcela rakovinotvorné.Velký háček je v tom, že normální tělesné buňky se nedělí věčně. Aby se buněčné kultury dostaly do tempa růstu dostatečně velkého na to, aby uživily společnost, několik společností, včetně Velké trojky, tiše používá takzvané nesmrtelné buňky, něco, co by většina lidí nikdy úmyslně nejedla. Nesmrtelné buňky jsou základem lékařského výzkumu, ale technicky jsou prekancerózní a v některých případech mohou být  rakovinné.Navzdory tomu přední vědci tvrdí, že nemůžete dostat rakovinu z konzumace nesprávného druhu masa.""                  ",conspiracy
Od 7. února 2023 v Turecku 7700 zemětřesení. Součet všech zemětřesení na mapě je 7. Zajímavé.,conspiracy
Ohio ,conspiracy
"„Celý svět si uvědomuje, že Bidenova administrativa, Ukrajina a vůdci NATO jsou JEDINÍ na světě, kteří nechtějí mír.Západ si ani nesedne k jednacímu stolu, protože jakmile vyjde pravda o biologických zbraních, jsou mrtví.""Fox News:""Čína zveřejnila 12bodový mírový plán pro rusko-ukrajinskou válku"" ""Toto je 12 bodů v čínském návrhu. - Respekt k suverenitě všech zemí-Opuštění mentality studené války-Snížení nepřátelství-Obnovení mírových rozhovorů-Řešení humanitární krize-Ochrana civilistů a válečných zajatců-Bezpečnost jaderných elektráren-Snížení strategických rizik- Usnadnění vývozu obilí-Ukončit jednostranné sankce-Stabilizace průmyslových a dodavatelských řetězců-Podpora postkonfliktní rekonstrukce""                                  ",conspiracy
"Byl to pro mě významný okamžik, když jsem zjistil, že ty příšery nežijí pod mou postelí, ale ve mně. Probuzení není pro slabochy. Vždy jděte příliš daleko, protože jen tak to uvidíte. Jak se to děje nyní ve světě. Probuzení znamená naprosté zničení všech konceptů, ve které jste věřili. (Věříte, že spáchal sebevraždu?",conspiracy
Berlín LIVE - Povstání za mír – Shromáždění před Braniborskou bránou                                                                                                       ,conspiracy
"‼Elektrické taxi z roku 1943- První známý německý elektromobil byl Flocken Elektrowagen z roku 1888. Před více než 100 lety nám Nikola Tesla ukázal, jak funguje volná energie s bezdrátovým přenosem. Nikdy bychom nepotřebovali auta na ropu.",conspiracy
"Speciální robot ""stavař""  bloků.",conspiracy
"Na Carnegie University představili AI, která celkem jasně čte myšlenky.O detailech samozřejmě nemůže být řeč. Ale když se podíváme na skeny mozku a aktivované oblasti, umělá inteligence je docela přesná v předpovídání předmětu myšlenek člověka – ať už je to jídlo, spánek nebo touha projít se.",conspiracy
__Subscribe:  ,conspiracy
🤣🤣🤣,conspiracy
"‼PUTINOVA PRAVDA O ZÁPADU‼ V tomto krátkém videu, dabovaném německy, se Putin obrací ke zločineckému Západu - a má samozřejmě na mysli především Satanský stát USA! Jen stručně se věnuje válečným zločinům spáchaným po celém světě (Japonsko, Hirošima, Nagasaki, Německo, Drážďany, Hamburk, Vietnam, Korea - ze stovek válek zinscenovaných USA po celém světě a nejkrutějších válečných zločinů spáchaných - ale má samozřejmě na mysli se Západem také americké satelitní státy EU, všechny tančí na melodii USA, na melodii Rothschilda! - A hlavně Rothschildova mezinárodní teroristická organizace - NATO! Od svého založení v roce 1949 poskytla pomoc v mnoha válečných konfliktech v USA ",conspiracy
‼Ach podívejte...začínají zametat stopy‼Vyzívají nemocnici a její  personál ke zničení/ smazání důkazů o očkování Tohle je z Kempten Clinic v rajchu,conspiracy
Swissmedic ze dne 24. února 2023:Žádné další pravidelné aktualizace o vedlejších účincích až do odvolání. Další porušení povinnosti s oznámením🤬Swissmedic v současné době již nebude zveřejňovat pravidelné aktualizace hlášení o nežádoucích účincích vakcín proti Covid-19 v aktuální podobě.Stejně jako PEI v Německu nyní Swissmedic odmítá pravidelné aktualizace namísto pravidelného a pravdivého informování obyvatelstva.,conspiracy
"Z praxe patologa Dr. Ryan Cole:""Tyto placenty mají špatnou velikost pro dobu těhotenství . Tato placenta je zvápenatělá. Obsahuje spike protein.  Obsahuje protilátky. Tyto placenty mají v sobě nadměrný zánět.""",conspiracy
"Pravda o biolaboratořích na Ukrajině se stala virální poté, co Twitter obnovil whistleblower rt.Pravda zvítězí 🥳",conspiracy
"27. února má WHO v Ženevě schůzku, na které 194 zemí podepíše dohodu o vzdání se našich suverénních práv.  Takže nevolení lidé v našich zemích budou rozhodovat o  našich životech ‼‼‼‼‼‼‼‼‼                                     ",conspiracy
"RUSKÝ VELVYSLANEC V OSN PŘERUŠUJE MINUTA TICHA PRO UKRAJINU: ""VŠECHNY ŽIVOTY MÁJI CENU"" Zatímco „dobrá“ strana drží minutu ticha na ukrajinskou iniciativu za ukrajinské oběti konfliktu, ruský velvyslanec Dmitrij Poljanskij přerušuje uctění úcty a zahrnuje VŠECHNY oběti od roku 2014 a zahájení války Ukrajinou.Velký neklid ostatních diplomatů.",conspiracy
"ČAS VŽDY ODHALÍ PRAVDU!! PROSÍM, PŘEČTĚTE SI tuto zprávu z Cairns News... Pravda pomalu vychází na povrch ohledně vraždy rodiny Train a zapojených obětí, MK Ultra a organizací stojících za tímto zákeřným programem kontroly mysli... Britské, australské a americké zpravodajské služby; Univerzity, think-tanky a farmaceutické společnosti spolupracují na provádění masivních experimentů sociálního inženýrství na vybraných jednotlivcích a širší populaci. ",conspiracy
Simpsonovi...,conspiracy
"Humanitární pomoc pro Ukrajinu - Podívejte se, co se děje na Ukrajině. Co se krade a co se děje s dary. ",conspiracy
"Tyto snímky pocházejí z postižené oblasti Tádžikistánu, kde se uvádí, že měl otřes M6.8, i když to vypadá spíše jako otřes M7.2, také z hlediska uvolňování energie, ale snímky ukazují, že následky nejsou ""střední"". Nevypadá to moc jinak než v Turecku – zhroutily se celé ulice. Mezi 7 UT, kdy došlo k prvnímu velkému otřesu bez předchozího upozornění, do přibližně 11:20 UT došlo k 9 následným otřesům, všechny o síle větší než 4,5,  od té doby otřesy utichly",conspiracy
"Za prvé, není to náš Měsíc – Za druhé, není to Měsíc. - MĚSÍC JE MIMOZEMSKÉ VELITELSKÉ CENTRUM. Něco je špatně s měsícem, protože na rozdíl od větčiny co astronomové, kterým se podařilo něco najít, MĚSÍC NEROTUJE.  Našli další hvězdy blízko nás s planetami s měsíci co se neotáčejí. Je to tam zaparkované. Je to velitelské centrum pro region. Někdo na těchto planetách žije také? Jsou to reptiliáni, šedí nebo jsou to lidé?  ",conspiracy
"""Světový ministr zdravotnictví"" Bill Gates dělá velký rozruch v byznysu s alkoholemBill Gates přichází do Heinekenu s 883 miliony eur, píše orf.at (",conspiracy
"Ruhe in Frieden, Clemens, und danke für Dein Sein! @BITTELTV - EINFACH ANDERS",conspiracy
"Turecko, Sýrie.. Mozna ta zemetreseni souvisi s tim ubytkem vody ve Středozemním moři..?🫢Bylo snad neco odpaleno? Kam ta voda teče?",conspiracy
"Tak to je hodně zajímavé, když sledujeme ten podivný a rychlý ubytek Stredozemniho more (Benátky, Libanon, Kypr, Turecko.... asi pred dvema dny a jak se zaroven ted zacala zvedat voda u pobrezi Mosambiku. Jako by se přelejvala. 🤔 Nevim, kdyz se podivam na mapu, tak by to muselo jit k tomu Mosambiku pres Suez a pres Rude more... Mezitím se mluví o zatopení pozemních tunelů. Začínám si myslet, že je snad tajný obrovský podzemni tunel, ktery byl právě odšpuntován na obou koncich..... 🫢Vypustili Krakena.🫢🫢🫢Tohle až se provalí, to bude tóčo všude. Tsunami a tornado 2v1. Vypouští se bažina. Voda teče ze Středozemního moře do středu Země. Sleduj vodu. (Q Diky za video Irena Voigts Petrakova",conspiracy
"Za cca poslední dva dny nezvykle ustoupilo Středozemní moře. V Benátkách vyschly kanály. Obyvatelé se obávají tsunami, i když odborníci neznají skutečné příčiny tohoto jevu.",conspiracy
Konspirační Teorie s Jesse Venturou - Bilderberg - český dabing - video Dailymotion,conspiracy
Španělsko - Mercadona,conspiracy
LIDL,conspiracy
"Nezávislá komise zjistila, že od roku 1950 bylo v Portugalsku katolickými kněžími zneužito téměř 5 000 dětí.🤬Po celém světě se objevily tisíce zpráv o pedofilii v katolické církvi a papež František je pod tlakem, aby skandál objasnil.Portugalské vyšetřování zadané církví v této přísně katolické zemi zveřejnilo svá zjištění poté, co loni vyslechlo více než 500 obětí.""Tato svědectví nám umožňují vybudovat mnohem větší síť obětí, nejméně 4815 lidí,"" řekl Pedro Strecht, šéf komise, na tiskové konferenci v Lisabonu, které se zúčastnilo několik vysokých církevních představitelů                            ",conspiracy
Americká média požadují zveřejnění videozáznamu útoku na Kapitol. Nyní to předseda Sněmovny reprezentantů poslal Trumpovu fanouškovi Tuckeru Carlsonovi – problém pro demokratyzrcadlo,conspiracy
Rusko-čínské spojenectví je nevyhnutelné. Časem bude silnější.,conspiracy
"Odstoupení od smlouvy START zajistí bezpečnost Ruska. Dnes jsme začali naplňovat poselství prezidenta legislativou, která zajistí bezpečnost naší země.Předseda Státní dumy Vjačeslav VolodinStátní duma jednomyslně odhlasovala pozastavení smlouvy START III.‌‌",conspiracy
"Monica Crowley právě vypustila obří červenou pilulku na Fox News v hlavním vysílacím čase o Ukrajině:""Stát národní bezpečnosti má vlastní zájem na udržení této války v chodu...protože na tom každý vydělává jmění.""Toto je masivní operace na praní špinavých peněz pro globalisty a vládnoucí elitu po celém světě a Joe Biden je tam nahoře.Pro nás to není nic nového, ale pro mnohé ano.",conspiracy
"Finančník miliardář, který byl Clintonovým přítelem, byl nalezen mrtvý při šokující sebevraždě v kanceláři na Manhattanu. ",conspiracy
"Aliance USA, NATO a Ukrajiny podle  ministerstva zahraničí připravuje vojenský útok na Podněstří a před pár minutami naléhavě varovala Západ před „dobrodružstvími“ v oblasti konfliktu. Budou se chránit krajané, mírový kontingent, vojenské sklady.                                                                                 ",conspiracy
"Adidas chce začlenit zákaznická data od uživatelů Runtastic – nebo smazat účtyNové uživatelské smlouvy dceřiné společnosti Adidas Runtastic mají vše. Uživatelé jsou požádáni, aby poskytli všechna svá data. Jinak hrozí smazání.Osm let po odchodu nyní skupina podniká krok, který značku Runtastic jen stěží staví do dobrého světla. Protože Adidas chce využívat data uživatelů sportovní aplikace. Týká se to mimo jiné záznamů běhů a tréninků.Ale také více soukromých informací, jako je postava, informace o poloze a chování a preference. Uživatelé prý byli e-mailem požádáni, aby souhlasili s novými podmínkami použití. ",conspiracy
"Včera večer se na americké ambasádě v Moskvě objevila obří veš v barvách americké vlajky s nápisem ""Tato veš prohraje"". Projektor také osvětlil počet mrtvých Ukrajinců na budově.",conspiracy
ANO Nemecko je FIRMA,conspiracy
"Elon Musk pro New York Times: "" Vlastnit Twitter je tak hezky pocit, koupim dalsi veci. Nemecko napriklad je  FIRMA, ktera je v soucasne dobe velmi neekonomicky rizena"" 🤣",conspiracy
"Polsko začíná instalovat protitankové ježky na silnice poblíž hranic s Ruskem a Běloruskem.""Začali jsme preventivně zvyšovat bezpečnostní opatření na hranicích s Ruskem a Běloruskem. Je to prvek naší obranné a odstrašovací strategie. Na hranicích s Kaliningradskou oblastí již vznikají první opevnění,"" napsal polský ministr obrany Mariusz Blaszczak. .",conspiracy
"ALDI - Tyto pistáciové oříšky,  mleté ​​maso a  pečená ryba by se neměla jístTři společnosti stahují potraviny, které se prodávaly mimo jiné v Aldi. Některé produkty mohly být kontaminovány, v jednom případě byly naměřeny zvýšené hladiny plísňového toxinu. Několik výrobců potravin v současné době stahuje určité šarže výrobků, protože nemusí být vhodné ke spotřebě Patří mezi ně pistáciové oříšky prodávané diskontem Aldi, ve kterých byla zjištěna zvýšená hladina plísňového toxinu ochratoxinu A. To má poškozující ledviny a karcinogenní účinek s výrazně zvýšeným dlouhodobým příjmem.Také BIO mleté ​​maso v AldiZa druhé, výrobce potravin Danish Crown Fleisch GmbH stáhl určitá balení BIO mletého masa, které se také prodávalo v Aldi. Nelze vyloučit, že v jednotlivých případech jsou v mase plastová cizí tělesa                                                                                                                                                                                                                                        ",conspiracy
"Öko-Test našel toxickou plíseň v kečupu HeinzZda je cukr v rajčatovém kečupu jed nebo ne, je diskutabilní. Je však nesporné, že množství plísní nalezené v kečupu Heinz je příliš vysoké. Především vysoký obsah cukru v kečupu vždy vyvolává vášnivé diskuse u jídelního stolu.Poté, co Öko-Test prověřil v březnovém čísle 20 různých poskytovatelů kečupů z bio obchodů, obchodu s potravinami a drogerie, objevil se nyní zcela jiný alarmující problém: toxin plísní.Během testování se odborníci zajímali zejména o to, zda lze v laboratoři detekovat rezidua pesticidů nebo různé plísňové toxiny, jako je alternariol (AOH a kyselina tenuazonová (TeA.Toxin AOH může prokazatelně poškodit genom, jak již ukázaly buněčné a zvířecí studie. Plísňový toxin se může dostat do kečupu, když výrobci zpracovávají plesnivá, nahnilá nebo přezrálá rajčata. Při pokusech na zvířatech inhiboval toxin TeA tvorbu endogenních proteinů, které mohou potenciálně vést k poškození orgánů. ",conspiracy
"Bývalý ruský prezident Dmitrij Medveděv v pátek slíbil, že jeho země zvítězí v ofenzivě na Ukrajině a je připraven bojovat až k polským hranicím, aby čelil „hrozbám“. ""Vítězství bude dosaženo,"" řekl Medveděv v Telegramu, ""proto je tak důležité dosáhnout všech cílů speciální vojenské operace."" ",conspiracy
"Ukrajinci v odvodovém věku (18-55 let, kteří chtějí cestovat do Ruska přes Lotyšsko, Litvu, Estonsko a z Polska do Běloruska, jsou na žádost Kyjeva násilně vraceni na Ukrajinu, kde mají být odvedeni do ukrajinské armády. RIA Novosti to řekl alespoň jeden zdroj obeznámený se situací.Pobaltské a polské úřady podle zdroje také zadržují Ukrajince pokoušející se vstoupit do EU na hraničních přechodech s Ruskem a Běloruskem.Na začátku roku 2023 ukrajinský kabinet schválil nová pravidla pro vojenskou registraci branců, branců a záložníků – diplomatické mise mají „usnadnit návrat branců a záložníků na Ukrajinu v případě mobilizace a v době války“ . ",conspiracy
"Hlasy pro vystoupení z WHO sílí po celém světě Kritici varují! Posílení WHO je vstupní branou pro globální vládnutí! Po celém světě se formuje rostoucí skupina, která je proti „pandemické smlouvě“, jakou připravuje farmaceutický průmysl a jeden z největších soukromých osob, jako je Bill Gates. ",conspiracy
"Skryté lékařské znalosti z roku 1927 o očkování, rakovině, výživě, duši, cukru, soli, kávě atd.Neuvěřitelné, co asi před 100 lety zveřejnili někteří alternativně orientovaní lékaři!Další úryvky z knih i samotnou brožuru ve formátu pdf ke stažení naleznete zde ",conspiracy
"Výbuch NordStreamu: Další důkazy podporují tezi Seymoura Hershe: „To, co udělaly USA, byl válečný zločin“",conspiracy
Věděl příliš mnoho...,conspiracy
Hezke rano ,conspiracy
Medveděv říká  Rusko vyhraje na Ukrajině  a je pak připraveno pochodovat k polským hranicím.,conspiracy
"Dr. Specht o Kostomarowovi: ""Tuto bitvu proti sepsi bojuje každý den MNOHO lidí!"" Bývalému krasobruslaři Romanu Kostomarowovi (46 musely být podle informací médií amputovány nohy a ruce kvůli sepsi. Nyní vycházejí další podrobnosti. Podle ruského listu „Komsomolskaja pravda“ nyní olympijský hrdina z roku 2006 utrpěl dvě mrtvice a už nevidí na pravé oko.Také důsledek sepse? Lékařský novinář Dr. Christoph Specht na RTL: „Ano, to je rozhodně myslitelný důsledek sepse. Otrava krve může vést k nadměrné imunitní reakci, která spustí srážení krve, tedy trombózu.“ Ztrátou zraku nemusí následky končit. ""Pacient je již na dialýze - ledviny jsou již velmi poškozené."" ( ALE s  to nemá nic společného, že? !!!                                                                                                                                                                                          ",conspiracy
"USA jsou číslo 1 v porušování suverenity a zasahování do vnitřních záležitostí jiných zemí. Od konce druhé světové války se USA údajně pokusily rozvrátit více než 50 zahraničních vlád, zasahovaly do voleb ve více než 30 zemích a pokusily se zavraždit více než 50 zahraničních vůdců.To ale zdaleka není vše. Přečtěte si zde, co Čína tento týden oficiálně zveřejnila na svých webových stránkách.                          ",conspiracy
"V Argentině chtějí demonstrující lidé vidět ty, kteří jsou zodpovědní za jejich krizi, mrtvé ",conspiracy
Rusové ve své vlasti bojují s chazarskou mafií.,conspiracy
"Propagace rasového míšení, je propagace genocidy!",conspiracy
Zneužívání dětí: NRW = Nordrhein-WestfalenZneužívání dětí: „NRW hlásí drasticky více řízení,conspiracy
"Policie v Mnichově: Razie kvůli podezření z dětské pornografiePři prohlídce 19 bytů mnichovská policie zabavila řadu mobilních telefonů a počítačů, nahlášeno bylo 21 mužů, z toho pět nezletilých. ",conspiracy
Razie v Halle: Policie vyšetřuje dětskou pornografii proti 41 podezřelýmVe středu policie prohledala několik budov v oblasti města Halle.                                                                        ,conspiracy
"FBI potvrzuje bezpečnostní incident IT ve své vlastní sítiVýchozím bodem byly počítačové systémy, pomocí kterých byly vyšetřovány případy sexuálního zneužívání dětí.Bývalý agent FBI v oddělení zločinů proti dětem v New Yorku Austin Berglas řekl The Register, že infikovaná nebo infiltrovaná zařízení byla pravděpodobně omezena na síť forenzní analýzy. Tam by se například vyhodnocovaly chytré telefony, počítače a úložná zařízení zabavená potenciálním pachatelům v oblasti týrání dětí. ",conspiracy
Centrální banka v bunkru: Finanční operace Ukrajiny běží pod zemíFinanční transakce Ukrajinců kontrolují centrální bankéři z bunkrů. Obecně to pro odpovědné osoby v centrálních bankách není snadné. Ti na Ukrajině však mají zvláštní výzvu: operují z protileteckého krytu.                  ,conspiracy
"Já vám říkám, že on je volavka. Agent nepřestal být agent, z rozvědčíka se nejde jen tak vyvázat. On má nasvítit to prostředí, aby se krysy odhalily. Je to pod falešnou vlajkou nastražená past. Krysama je Ústeckej kraj a Šluknovskej výběžek zřejmě zamořenej, proto tu furt ocmrduje. A proto má za sebou často ty únikové dveře.  Jako správnej agent. Královský agent 004. Proto to včera ve Šluknovském výběžku bylo jen pro honoraci  - zástupce samospráv. Vyvolení jsou pod drobnohledem tajných služeb, pro ty agent Pávek pracuje. Jak v reality show. Estébák, ale ten hodnej.Kéž by vyšly najevo i ňáky podvody ve volbách. Píše si do notýsku, jak správnej policajt.",conspiracy
"Děkuji Soně za zaslání. Teď mě napadá, AUF1INFO používá i modrou a žlutou🤔",conspiracy
"Clemens G. Arvay byl před Coronou vítaným hostem v médiích. Po analýze a veřejné prezentaci studií o očkování mRNA se stal obětí nenávistné kampaně. Radikální levicově motivovaný dav skrytý za pseudonymy a platforma „Volksverpetzer“ se ze všech sil snažily poškodit jeho reputaci i na Wikipedii. Toto rozrušení zřejmě dohnalo kritického biologa k jeho zoufalé sebevraždě.Mainstreamová média, která vytvořila toto antikritické klima, o případu zarytě mlčí, mlčí, i po sebevraždě  lékařky Lisy-Marie Kellermayr ",conspiracy
"🤬Evropská ""diplomacie"" dosáhla nové úrovně.🤦 Rastislav Káčer, ministr zahraničí a evropských záležitostí Slovenska, urazil maďarského prezidenta Viktora Orbána ""Pro Putinovy ​​spojence, a zejména ty z Karpatské kotliny a Felvidéku, pro všechny, kteří chtějí mír za cenu zničení Ukrajiny, mám jen jednu zprávu:  ""Go f@ck yourself and in Russian""                                                                       ",conspiracy
"Nerozumím, vidím jen dvě ženy ...",conspiracy
"Lidé říkají, koho chtějí",conspiracy
"Protesty rolníků po celé Francii pokračují, protestují proti WEF a globalistické agendě",conspiracy
"Tyto léky můžou být dokonce nebezpečné: TEST -  Warentest nedoporučuje 35 známých tablet‼Při nachlazení, bolestech v krku nebo zácpě používá mnoho lidí volně prodejné léky. Právě tyto léky inzerují farmaceutické společnosti s plnými sliby.  Warentest zkoumal některé z nejznámějších produktů a varuje: Mnoho velkých značek nedodržuje, co slibují.Testeři varují především před kombinovanými přípravky. Léky proti nachlazení jako Aspirin Complex, Grippostad C nebo Wick MediNait a léky proti bolesti jako Thomapyrin nebo Neuralgin  obsahovaly „nesmyslné kombinace“ léků proti bolesti a dalších účinných látek. Tyto léky by neměly lepší účinek, ale zvýšilo by se riziko nežádoucích účinků. Léky proti bolesti by se měly užívat samostatně.                                             ",conspiracy
Rusko předkládá důkazy o amerických biolaboratořích na Ukrajině.,conspiracy
"""Nemůžu tomu uvěřit"": Politik AfD Bundestag Petr Bystroň musí opustit  mnichovský byt - verdikt vynesen                        ",conspiracy
"BÝVALÝ TAJEMNÍK OBRANY TRUMPA ŘÍKÁ, že VOLBY 2024 NEBUDOU!""Budou se letos po zrušení Bidenovy vlády?""",conspiracy
Krasne rano ,conspiracy
"Já to říkala všem: Nenos ty roušky, nenos ty roušky, nenos ty roušky, nebo se z toho zblázníš. Ale je to marný, je to marný, je to marný. Byla jsem prej dezinformátor.. 🤷‍🤦‍",conspiracy
"Lukašenko: Žádný problém v dnešním světě nelze vyřešit bez Číny!Nejprve o chystaném prohlášení Si Ťin-pchinga o Ukrajině, které bude mít důsledky pro svět, Bidenově návštěvě Kyjeva a „americké show“ s čínským balónem.",conspiracy
"Zacharovová hodnotí Bidenovu návštěvu Kyjeva: ""Zločince to vždy táhne na místo činu""                    ",conspiracy
"SRN -  Dnes je ten den. Od 23. února 2023 by státní a federální úřady měly mít možnost posílat varování všem majitelům chytrých telefonů prostřednictvím mobilního vysílání. Pokud tedy existuje značné riziko bouří, požárů, zemětřesení nebo záplav nebo pokud existuje jiný důvod, váš smartphone zakřičí a upozorní vás na hrozbu. Oznámily to dnes Vodafone a O2.Vodafone například uvádí, že technologii CellBroadcast nainstaloval do všech svých 26 500 mobilních stanic.",conspiracy
Akcie Pfizer na pokraji kolapsu...?|Cramer Lightning Roun Pfizer je nákup na pomalém/klesajícím trhu“ ,conspiracy
"Poradce Billa Clintona byl nalezen mrtvý se střelným zraněním, ale bez zbraně.",conspiracy
O TOM TO JE!!! SOS detska vesnice - se podilely na unosech deti...,conspiracy
"Danke an Admin""S potěšením oznamuji, že všichni hlavní hráči iluminátské kabaly byli zatčeni a stíháni za své ohavné zločiny proti lidskosti a většina z nich popravena: Záchrana dětí světa by nebyla možná bez někoho tak mocného... prezidenta. Armáda 19. století. Velící vůdci statečné americké armády, kteří byli svědky čistého zla během záchranných operací, říkají, že je asi 10 000krát horší než zvěrstva války. Víte, kolik celebrit, podnikatelů a politiků obětovalo krev svých dětí nebo blízkých příbuzných pro kabalu? Hledej to, to je vše. Někteří hráči Cabal byli úmyslně ponecháni, aby byli veřejně zatčeni a souzeni, pokud se odhalí důkazy o jejich špatnosti. ",conspiracy
"Důvěřujte prezidentu Trumpovi, věřte plánu, armáda je jediná cesta... Od té doby, co se Donald Trump stal americkým prezidentem, bylo jen ve Spojených státech armádou zachráněno více než 5 milionů dětí a žen před sexuálním obchodováním a otroctvím.",conspiracy
"Angela Merkelová studovala v Doněcku na Donbasu! Našli jsme její bývalou učitelku a mluvili s ní!  Televizní pořad ""Anti-Fake"" s Alinou Lipp a Wovanem a Lexusem v němčině!Je smutné, že se Angela zdála být velkou fanynkou města Doněck, a přesto v době od roku 2014 podporuje ukrajinské ozbrojené síly při ostřelování téhož města a jeho neškodných občanů.",conspiracy
"EU zahajuje socialistický plánovací program s cílem „rozdělit a přemístit“ zelená odvětví v regionuEvropská unie předkládá „Green Industrial Plan“ (obdoba Green New Deal USA, který má zajistit „čistou technologickou vedoucí úlohu EU v zeleném průmyslu“.Jde o socialisticky orientovaný program, který plánuje přemístění a přerozdělení četných průmyslových odvětví souvisejících s čistou energií. Patří mezi ně mnohamilionové dotace pro vybrané země, protekcionistické klauzule a vyšší plánovaný schodek rozpočtu na nadcházející roky.Návrh socialistických europoslanců se zaměřuje na přidělování prostředků na solární a větrnou energii, tepelná čerpadla a „zelené baterie“.Je jasné, že rozvoj a geografické umístění těchto odvětví nebude určováno alokací trhu, ale centralizovaným plánováním organizovaným evropskou správou.Odhaduje se, že poskytne až 20 miliard EUR v dodatečných dotacích nad rámec těch, které již schválil Evropský parlament. Tato částka bude mít za cíl „urychlit zelený přechod a snížit závislost bloku na fosilních palivech z Ruska“.Prostředky budou přidělovány podle plánování Evropské unie a rozděleny mezi různé členské země podle stupně jejich závislosti na fosilních palivech a rozvoji obnovitelných energií.                                                                                             ",conspiracy
"""Třetí světová válka řeší spoustu problémů (pro pachatele: řeší krizi státního dluhu a zakrývá probíhající atentát ""očkování"" , vymazává spoustu věcí z mapy a přitahuje pozornost všech na světovou válku.""",conspiracy
"Jediný Evropan, který je pro mír, Victor Orban:""Jediný způsob, jak zachránit životy, je příměří a mírové rozhovory. Čím dříve, tím lépe. Tečka.""",conspiracy
"NEOČKUJEME! dokumentární filmNabízí očkování skutečně komplexní ochranu před nebezpečnými nemocemi?NE!Nebezpečí, před kterými má očkování chránit, ale nemůže je ochránit, jsou neúměrné jejich vedlejším účinkům. A pokud vy nebo vaše dítě utrpíte poškození, není vám nikdo, kdo by vám pomohl, protože jste na všechno sami s obrovskými, nikdy nekončícími problémy. Dětské očkování obsahuje mimo jiné fenol, hliník, formaldehyd...",conspiracy
"Tohle je o detskem ockovani v CR, nedavam to sem abych jej propagovala spise abych varovala. Ty keci o jejich prinosech zapomenta, jsou to lzi. najdete si kolik deti ma psychiske poruchy, jsou ""hyperaktivni"", autisticke atd. To vsechno je z ockovani.  ",conspiracy
V tom filmu je rec hlavne o ockovani deti. Nemecke deti dostavaji az 34 davek do prvniho roku sveho zivota. Deti v USA mnohem vic.,conspiracy
Dobré ráno ....To jsou šťastné krávy  ,conspiracy
"Prezident Trump nastupuje do Trump Force One, když cestuje z Floridy do východní Palestiny v Ohiu, aby se setkal s členy komunity a daroval zásoby.",conspiracy
"Prezident Trump právě nastoupil na TF1. Ohio,  Palestina, pomoc je na cestě!",conspiracy
"Po chemických požárech v Norsku, Ohiu, Louisianě, Texasu, Havaji a Itálii nyní v  Montreal.Všechny tyto události kolem mnoha explozí se odehrály během jediného týdne – vzorec je jasný a média o něm téměř neinformujíPřípravy na zjevně rozsáhlou akci se připravují",conspiracy
Užijte si Show,conspiracy
"Putin:""V našich srdcích jsou vlast a rodina jedno a totéž, lidé se rozhodují bránit to, co je nejposvátnější a nejdražší.""",conspiracy
Kyjev zdraví Bidena,conspiracy
"""Když jsme spolu, jsme jedineční, síla je v jednotě.""",conspiracy
"Stadion burácí, když Putin nastupuje na pódium na  koncertu Obránce vlasti na moskevském stadionu Lužniki, zatímco dav skanduje RUSKO, RUSKO!",conspiracy
"Po úterním projevu ruského prezidenta k národu v Moskvě se reportérovi z pořadu ""Moskva. Kreml. Putin"" podařilo zastavit ruského ministra zahraničí Sergeje Lavrova ke krátkému rozhovoru.Lavrovovi řekl: ""Včera přiletěl americký prezident Joe Biden do Kyjeva, učinil další prohlášení o dodávkách zbraní . Už se tu nepřekračují jen červené čáry, ale vínově červené.""",conspiracy
🤡🤡🤡🤡,conspiracy
t.me/to_je_nas_svet,conspiracy
t.me/to_je_nas_svet,conspiracy
Ruský „admirál Kuzněcov“ je po opravách opět ve vodě.,conspiracy
"Hypersonické střely na vojenské přehlídce v Číně. Čína vyvinula polovodičový pohonný systém scramjet pro hypersonické střely, který je dvakrát účinnější než tradiční náporové trysky.",conspiracy
"""Nikoho by to nenapadlo: Švédsko je na cestě z EU.""                                         Švédsko nyní předsedá EU téměř 2 měsíce. Od začátku roku se ale se švédskými cíli a aspiracemi něco stalo. Švédsko se nyní způsobem, který nikdo nemohl předvídat, obrací k EU zády.Velké změny pro Evropu se očekávaly od švédské vládní koalice umírněných, křesťanských demokratů a liberálů.",conspiracy
"Poté, co »Frontal« informoval o únosu ukrajinských dětí Ruskem, byl twitterový účet pořadu stručně deaktivován. Omezen byl také účet novináře.Účet programu ZDF »Frontal« není od úterý přístupný na Twitteru. Od té doby je na stránce účtu uvedeno v angličtině: »Tento účet neexistuje.«",conspiracy
"Podívejte se na video „Čaputová oznámila, či je agentka.#caputova #slovensko #agent“ na YouTube",conspiracy
"Překlad článku Od začátku očkovací kampaně proti „Covidu“ umírá v Evropě stále více lidí (zde, zde a zde. Korelace nemusí nutně znamenat kauzalitu, ale média a politici zvažují všechny možné příčiny, jen ne genové injekce: za nadměrnou úmrtnost prý najednou může smog, změna klimatu, nedostatek pohybu a dokonce i brokolice.Podle posledních údajů Eurostatu byl nárůst v prosinci 2022 +19 %, o 8 % více než v listopadu. Německo dosáhlo šokujícího čísla +37 %, ale znepokojivá jsou i čísla pro Rakousko (+27 , Slovinsko (+26 , Irsko a Francii (+25 . Itálie je naopak pod průměrem jen +0,5 %. Tento nárůst znamenal v Evropě v letech 2021 až 2022 asi milion dalších úmrtí.Jak Byoblu poznamenává, Spojené království na tom není o moc lépe: v roce 2022 bylo registrováno 650 000 úmrtí, téměř o 40 000 více než v roce 2019. Zejména v posledních dvou týdnech roku 2022 byla úmrtí o pětinu vyšší než v roce 2022, průměr za roky 2016 až 2019. To představuje nejvyšší úmrtnost za posledních 50 let.Mezi nejzávažnější případy patří Kanárské ostrovy, které loni zaznamenaly nejvyšší úmrtnost za celé 21. století. V Itálii je naopak nejvíce znepokojující region Sardinie: měsíčně zaznamenal o 200 úmrtí více než v roce 2021 a o 250 více ve srovnání s průměrem let před „pandemií“.Zvláště znepokojivý je počet úmrtí mezi mladými lidmi. Přestože nadúmrtnost postihuje všechny věkové skupiny, nejvíce jsou postiženy děti. Pohled na grafy od Euromomo, evropské iniciativy pro sledování úmrtnosti, ukazuje, že rok 2022 byl pro věkovou skupinu 0-14 let zničující. Výrazný nárůst je také ve věkové skupině 14-44 let oproti starším lidem.Nutno však podotknout, že jde o absolutní čísla. Demografické změny nebyly brány v úvahu.Pokud jde o možné příčiny, Byoblu poukazuje na zajímavý průzkum Rasmussen Reports. Vzhledem k mnoha náhlým úmrtím, která jsou zaznamenána i v USA, byli občané dotazováni na důvody. Téměř polovina dotázaných uvedla, že „očkování“ mRNA může být příčinou mnoha úmrtí.                                                                                                                ",conspiracy
🤣,conspiracy
"‼Byli jsme podváděni desítky let ‼Patent ztracený v trezoru. Ve skutečnosti by s touto myšlenkou byly všechny debaty o špinavých spalovacích motorech v posledních letech zastaralé.Čisté spalování díky vstřikování páryMenší spotřeba palivaMenší opotřebení motoru, tím delší životnost motoru a vozu celkově.Automobilový průmysl to nechtěl, protože by se prodalo méně nových aut a palivo bylo stále levné.Technici vědí, že naše civilizace by již mohla být technologicky mnohem vyspělejší, kdyby jí neustále nestály v cestě ziskové zájmy a byrokracie. Paderbornský vynálezceVideofilm z roku 1989",conspiracy
"Ivan Pernar dorazil do Zambie  a hlásí se jako svědek u soudu, aby svědčil v případu chorvatských převaděčů dětí:Ivan Pernar:""Podle informací, které mám, budu v tomto případě svědkem. 'Malý' problém, který vyvstal, je, že mi bylo řečeno, že věří, že strana Mozemo! a jeho gang jsou součástí mnohem větší sítě z obchodníků s dětmi je, že je to hodně peněz a můj život je v ohrožení.Myslím, že to vysvětluje kombinaci politiky a médií, která dělají vše pro to, aby mě zdiskreditovala, ale ve svědectví mi mohou zabránit jedině zabitím.Jestli mě zabijou, chci, abyste věděli, kdo to udělal. ",conspiracy
"„Spojené státy dodržovaly politiku boje až do posledního Afghánce v Afghánistánu. Opravdu chtějí, aby Ukrajina dnes bojovala do posledního Ukrajince?“ USA neustále říkají, že chtějí zachovat mír, ale ve skutečnosti z války profitují, řekl mluvčí čínského ministerstva zahraničí Wang Wenbin.",conspiracy
"„Turbo rakovina“ po očkování proti COVID-19? Evan Fishel (21 zemřel pouhé čtyři dny poté, co mu byla diagnostikována leukémie.Jako onkolog jsem diagnostikoval 10 000 kanadských pacientů s rakovinou a stovky léčil cílenou radionuklidovou terapií. Ve své kariéře jsem viděl spoustu hrozných věcí. Ale nikdy jsem neviděl tak rychlý vývoj.                                                   ",conspiracy
Studenti Ruské ekonomické univerzity. G.V. Plechanov je po Putinově projevu vyhozen.,conspiracy
"Další vlak vykolejil v Göteborg, Nebraska...",conspiracy
"Titulek: ‼Izraelská populace jako testovací laboratoř pro Pfizer? Tajné dokumenty odhaleny‼„Vychází najevo stále více podrobností o zločinu tisíciletí, kterému jsme vystaveni od roku 2020. Nyní byly na příkaz soudce zveřejněny tajné smluvní dokumenty mezi Pfizer a izraelskou vládou.Stručně shrnuto:Společnost Pfizer chtěla zabránit tomu, aby se existence těchto dokumentů stala veřejně známou. S izraelskou vládou existovaly závazné smlouvy v podobě izraelského ministerstva zdravotnictví, které je zavazují mlčet. Během soudního případu bylo jednou z fatálních chyb společnosti Pfizer nebo vládních úředníků zmínit jeden z těchto dokumentů. To umožnilo aktivistům občanské společnosti usilovat o jeho vydání prostřednictvím zákona o svobodném přístupu k informacím. Po dlouhém zvažování soud dal tuto žádost včera. Předmětné dokumenty ještě nejsou plně zpracovány a obsahově vyhodnoceny.“",conspiracy
"Pozorně poslouchejte každé slovo, které říká...Izrael je z nějakého důvodu poslední.Takže Izrael se stal, chcete-li, laboratoří společnosti Pfizer. A takhle jsme to udělali!!Chazarská mafie",conspiracy
"Tisíce Slováků křičely ve městě Trnava „Rusko, Rusko!“.Slováci už dva týdny po celé zemi demonstrují proti současné rusofobní vládě, NATO a vojenské pomoci Ukrajině. ",conspiracy
Sloväni!...,conspiracy
"Nový prezident WEF České republiky na CNN:""Všichni v této části Evropy chápeme, že Rusko musí být poraženo. Protože oni rozumí pouze síle!""",conspiracy
Meloni & Zelensky,conspiracy
"‼Spoluzakladatel Greenpeace: CO2 nezvyšuje teplotyAustrálie má za sebou nejchladnější léto za posledních 140 let. Pro spoluzakladatele Greenpeace Patricka Moora je to další důkaz toho, že CO2 nemůže za vyšší teploty v atmosféře.Dr. Patrick Moore spoluzaložil ekologickou organizaci Greenpeace a v roce 1986 – 15 let po jejím založení – znovu odešel, protože se nyní místo vědeckých faktů zaměřuje na politický klimatický aktivismus.Mezitím se angažovaný environmentalista snaží čelit rostoucí klimatické hysterii čísly, daty a fakty a apelovat na zdravý rozum lidí. Vzhledem k nejchladnějšímu létu v Austrálii za posledních 140 let Moore opět bodl do vosího hnízda klimatické sekty.  ",conspiracy
"""Podívejte se, co dělají se svými vlastními národy - destrukce rodiny, kulturní a národní identity, perverze, zesměšňování dětí a pedofilie jsou prohlášeny za normu.""Putinova kritika Západu nemá chybu ",conspiracy
Biden se ve Varšavě setkal také s moldavskou prezidentkou Maiou Sanduovou.,conspiracy
Rusko už nepovažuje Podněstří za součást Moldavska!Vladimir Putin zrušil dekret č. 605 z roku 2012.,conspiracy
"Pojď dědo, zarezervoval jsem ti místo v domově důchodců v Polsku...🤣🤣🤣",conspiracy
"Autonomní bojový robot: Rusko zavádí „zabijáka leopardů“.Dosud se o něm mluvily jen zvěsti, ale skutečně existují: Thomas Röper představuje nového ruského bojového robota zvaného „Marker“, který má být bezpilotně použit a operován s umělou inteligencí proti tankům, mimo jiné – ruská zbraň proti tankům Leopard z Německa. Co robot umí:- Může pracovat autonomně několik dní na vlastní zdroj energie, aniž by bylo nutné doplňovat palivo- Může se skrývat celé dny, aby čekal na nepřátelské tanky a přesně je zničil z velké vzdálenosti- Pole palby 360 stupňů - nemá ""slepý úhel""- Může vypouštět malé, drátem naváděné drony- Dokáže nejen rozpoznat lidi, ale také je identifikovat jako přítele, nepřítele nebo civilisty na základě uniforem a odznaků- Dokáže bezpečně evakuovat zraněné",conspiracy
Vypadl někdo z letadla?🤔,conspiracy
to samé u nás 🤣,conspiracy
"Rusko a základny NATO/USAObklíčuje Rusko základny NATO a USA, nebo je to naopak?",conspiracy
🤣🤡,conspiracy
"Zdá se, že titulek ""Burn, America!"" se stává „tradicí“.Po výbuchu v ocelárně v Ohiu se totéž stalo v průmyslovém závodě vyrábějícím a opravujícím hliníkové nádrže na Floridě.Potvrzeni jsou 2 mrtví a 3 zranění. ",conspiracy
Krasne rano,conspiracy
"MJTruth:„To je tak dobré... lidé se probouzejí.Začnete se ptát a pravda vyjde najevo.Joe Biden vyhodil do povětří plynovod Nord Stream a spáchal agresivní válku proti Rusku.""                                            ",conspiracy
"Biden musí do Polska, aby měl fanoušky🤮",conspiracy
"1997 - Biden: ""Jediná věc, která by mohla vyvolat ruskou reakci, by bylo rozšíření NATO do pobaltských států.""",conspiracy
"Polsko, Varšava, královský palác.Neexistuje žádná modrá a žlutá identita.Tyto barvy mají pouze zakrýt špínu USA!",conspiracy
"Duda:„Děkuji USA, všem zemím NATO, které posílají pomoc Ukrajině, je to nesmírně důležité.Ukrajina musí vyhrát válku. Polsko věří, že Rusko bude nuceno opustit území Ukrajiny.“",conspiracy
"Celá planeta říká Putin „obsazena“ americkými vojenskými základnami.""Žádná jiná země na světě nemá tolik vojenských základen jako Spojené státy, jsou jich stovky po celém světě, stačí se podívat na mapu světa.""",conspiracy
"Program sociálně-ekonomické rekonstrukce a rozvoje nových regionů - obnova podniků, pracovních míst, přístavů v Azovském moři - byl zahájen a je stále intenzivnější. Rodina každého účastníka SWO by měla být neustále v centru pozornosti. Za tímto účelem bude zřízen nový státní fond pro poskytování účelové podpory. Pro všechny účastníky SWO bude zavedena pravidelná dovolená v délce minimálně 14 dní, minimálně jednou za půl roku. Na podporu profesionálů v obranném průmyslu se navrhuje zavést vládní program zvýhodněného pronájmu v průmyslových a vědeckých centrech země.Úřady spolupracovaly na zajištění ekonomické udržitelnosti:V roce 2022 klesl ruský HDP jen o 2,1 %.Objem zahájených bytů poprvé v novodobé historii země dosáhl 100 milionů metrů čtverečních.Ruští farmáři sklidili rekordní sklizeň přes 150 milionů tun obilí.Řada změn je plánována i v sociálním bloku:Návrat k tradičnímu základnímu školení profesionálů s vyšším vzděláním.Zařazení dětí narozených v nových regionech Ruska od roku 2007 do systému vyplácení dávek v mateřství.Indexování minimální mzdy a úprava daňového systému ve prospěch rodin.Realizace programů na zkvalitnění lékařské péče, veřejné dopravy a sociálních zařízení v malých městech a na venkově.",conspiracy
Ruský prezident Vladimir Putin držel svůj projev ve Federálním shromáždění. To podstatné shrnuto zde,conspiracy
"V obchodním centru v Číně bylo Putinovo poselství vidět na každé druhé plazmové obrazovce.Kdo to dělal, zná dobře marketing, protože Vladimir Putin je v Číně velmi populární.",conspiracy
"Podívejte se na název dnešního živého přenosu Welt TV na Youtube ""po Bidenově provokaci""Podle MSM Putin dnes pronáší projev k národu v reakci na včerejší Bidenovu návštěvu.Připomínám- Kreml požádal všechna hlavní ruská média, aby odvysílala Putinův projev na federálním shromáždění plánovaném na úterý 21. února‼Projev by měl trvat alespoň 1 hodinu a očekává se, že začne ve 12:00 (10:00 našeho času.",conspiracy
"Tak hezké gesto ‼🤮                  Nikdo už nechce „vakcínu“, nyní Moderna ustupuje a garantuje „bezplatné“ vakcíny proti Covid-19 pro každéhoVýrobce mRNA vakcíny Moderna ustoupil od svého lednového plánu účtovat si 110 až 130 dolarů za dávku vakcíny proti Covid-19 (namísto 26 dolarů za dávku za přeočkování a nyní slibuje, že lidé již nebudou muset platit za očkování, jakmile vláda USA zastaví nákup vakcín.""Moderna je i nadále odhodlána zajistit, aby lidé ve Spojených státech, bez ohledu na jejich schopnost platit, měli přístup k našim vakcínám proti COVID-19,"" uvedla společnost v prohlášení s tím, že vakcína bude i nadále k dispozici zdarma. pojištěným členům bez ohledu na to, zda je dostanou v ordinaci svého lékaře nebo v místní lékárně.Ti, kteří pojištění nemají – nebo jejichž pojištění je nedostatečné – se mohou nechat očkovat zdarma prostřednictvím asistenčního programu Moderna.                         ",conspiracy
"Vladimir Putin má dnes v poledne (moskevského místního času přednést před Federálním shromážděním v Gostiny Dvoru v hlavním městě projev, který by mohl určit průběh války.",conspiracy
"Chceme zpět své peníze‼Turecko požáduje od USA o vrácení 1,4 miliardy dolarů, kterými přispělo na program stíhaček F-35Turecko bylo z tohoto programu vyloučeno v roce 2021. Na tiskové konferenci pořádané Blinkenem a šéfem tureckého ministerstva zahraničí Cavusogluem bylo požadováno vrácení peněz. „Bylo to jednostranné rozhodnutí. Je tu částka 1,4 miliardy dolarů, kterou jsme zaplatili. Čekáme na vrácení zaplacených peněz.“",conspiracy
V úterý - dnes (21.2. hodlá ruský prezident Vladimir Putin promluvit k obyvatelům v projevu v Moskvě a poskytnout aktuální stav „zvláštní operace“ na Ukrajině. ,conspiracy
"Rančeři v  Kalifornii se obávali asi stovky železničních vagonů plných neznámých látek vyvezených do srdce zemědělské půdy a vedoucího akvaduktu do San Francisca bez objednání vlastníků půdy.Nikdo neví, co a proč tu jsou.",conspiracy
"Zemětřesení o síle 5,8 stupně nastane 35 km jihovýchodně od Old Harbor na Aljašce.",conspiracy
"70 000 úředníků demonstrovalo v indické Panchkule, aby požadovali obnovu starého důchodového systému.Policie použila vodní děla a zatkla demonstranty, kteří se pokoušeli pochodovat do sídla premiéra státu Haryana.",conspiracy
"Evropsko-středomořské seismologické centrum vydalo varování tsunami poté, co ohlásilo zemětřesení o síle 6,4 stupně v Turecku. USGS ohlásila zemětřesení o síle 6,3 stupně.",conspiracy
"NYNÍ - ""Incident s hromadnými ztrátami"" hlášený po výbuchu v továrně na kovy v Bedfordu, Ohio - dva týdny poté, co ve východní Palestině vykolejil vlak s toxickým nakládem.",conspiracy
"Eurozóna se připravuje na éru ztrát centrálních bank po QE flámuCentrální banky eurozóny v nadcházejících týdnech zveřejní své první významné ztráty z desetiletí tisku peněz, což předznamenává novou éru kontroly a vyhlídky na záchranu daňových poplatníků.                       ",conspiracy
Karta QFSV posledních 3 letech byl globální finanční systém zaneprázdněn konverzí svých mezinárodních platebních systémů na nový bankovní standard ISO 20022.,conspiracy
"Krátce před 90 přistál téměř 50 metrů dlouhý Xian-Y20 na letišti v Innsbrucku. Čínský tým přistál před zraky mnoha fanoušků letadel (plane spotters. „Takový vojenský stroj nevidíte každý den. A mnoho lidí dnes přijelo ze Štýrska, Lince a Německa,“ řekl nadšený divák.Stroj opustilo 43 čínských vojáků. Přijali je zástupci rakouské armády. Mezi nimi byl Stefan Lehner, projektový manažer speciální soutěže horských jednotek, Edelweiss Raid. ",conspiracy
"HROZNÉ video z Turecka ukazuje blesky na obloze a chvění země (00:10, když zemi zasáhlo nové zemětřesení zachycené na kameru.AKTUALIZACE: 3 mrtví, 213 hospitalizovaných po novém zemětřesení - úřady.",conspiracy
"BRAZÍLIE: VYHLÁŠEN 180DENNÍ NOUZOVÝ STAV!Jihovýchodní pobřežní oblasti Brazílie zasáhly 18. a 19. února 2023 mimořádně silné deště, které způsobily záplavy a sesuvy půdy, které zabily 36 lidí a stovky dalších vyhnaly z domovů. Region zažil jedny z nejvyšších 24hodinových srážek v zemi, přičemž Bertioga zaznamenala ve stejném období 694 mm a São Sebastião 649 mm. Pro města Ubatuba, São Sebastião, Ilhabela, Caraguatatuba a Bertioga byl vyhlášen 180denní výjimečný stav poté, co region zasáhly o víkendu mimořádně silné deště. - ....                     ",conspiracy
"Světové ekonomické fórum plánuje nasadit chytrá zařízení do klimatizací, televizí, elektromobilů... aby stát mohl agresivně zasáhnout a při přetížení sítě je vypnout.",conspiracy
"NOVINKA – Íránská měna se v důsledku nových sankcí EU propadla na nová minima, čímž porušila psychologicky důležitých 500 000 riyalů za dolar ",conspiracy
NY Fashion Week ...Vzkříšení z pekla?NeTito lidé jsou tak nemocní ... „Valentin des Meat“ byl tématem debutové show v New York Fashion Week ... Midjourney.,conspiracy
"Tyto fotografie, údajně ze „včera“ z francouzské protestní rally, téměř skutečný vzhled - pokud tam nebyla  šestiprstova rukavice důstojníka “Nevěřte tomu, co vidíte - technologie/iluze jsou aktivní‌‌.",conspiracy
"Dan Peña o bitcoin""Když se zjistí, kdo stojí za bitcoinem, kdo ho založil, stane se během mikrosekundy nulou...""----* Peña, zakladatel Quantum Leap Advantage (QLA‌‌",conspiracy
Kasne rano ,conspiracy
Do  bylo dodáno několik kontejnerů s radioaktivními látkami z území jedné evropské země.Tyto kontejnery se používají k inscenaci místní kontaminace regionu poblíž jednoho z radioaktivních míst kontrolovaných kyjevským režimem.,conspiracy
"Prezident Bolsonaro oznamuje svůj návrat do Brazílie a říká, že „jeho mise neskončila“Takto vedete národ, chráníte svůj život a děláte to úspěšně, přestože globalisté chtějí, abyste zemřeli. ",conspiracy
"HAARP, ZEMĚTŘESENÍ, PRŮZKUM ZEMĚ -  HAARP používá miliardy wattů. Představte si struny na pianu jako vrstvy země, každá má svoji frekvenci. Byli jsme schopni identifikovat každou frekvenci a splnili jsme to jenom s 30 watty radiačního výkonu. Jestli tohle uděláte s miliardou wattů, vibrace budou tak násilné, že způsobí nejen zemětřesení ...",conspiracy
"Tato technologie je stará minimálně 25 let.Představte si, co skutečně mají?Předstírat můžou cokoliv.",conspiracy
"Zemětřesení v Bejrútu M6.3, opět zemětřesení v Turecku  a Sýrii .                               V turecké Antakyi se po novém zemětřesení zřítily další budovy.",conspiracy
Vlaky převážející nebezpečné látky nadále vykolejují po celé zemi – jsou USA pod útokem?Neděle 19. února 2023 o JD Heyes                                                  ,conspiracy
Zemětřesení v TureckuJedná se o zlom zemské kůry po zemětřesení v TureckuPočet obětí zemětřesení ze 6. února v Turecku je k dnešnímu dni 41 020.Oznámil to úřad turecké vlády pro krizové řízení.,conspiracy
Dnes jsme měli abecední polévku....Nehrají si jen děti...Maminka to taky umí...Nalezeno 17x Q,conspiracy
"Vida! Vrchní cenzor končí! To je asi mrzeníčko...🤭Michal Klíma, vládní zmocněnec pro média a dezinformace, ve středu ve své funkci náhle skončil. Jeho pozici vláda zrušila, agendu rozdělila. Klíma se sice od premiéra dočkal formálního poděkování, ovšem na tiskovou konferenci už jej ani nezvali a co je ještě podstatnější, výsledek jeho roční práce, takzvaný Akční plán proti dezinformacím, spadl do koše a vláda s ním nadále nepočítá. V jeho plánu např. bylo: Okamžité vypnutí webů, které vláda označí za dezinformační. Trestný čin šíření dezinformace. Stovky milionů korun pro média a vybrané organizace. A celý nový odbor úředníků, kteří na to všechno budou dohlížet. To všechno mělo být obsahem akčního plánu pro čelení dezinformacím, který si vláda nechala vypracovat.Že by to byla od vlády pastička, aby se ukázalo, co udělá blbec, když dostane funkci? Začíná to být čím dál zajímavější... ",conspiracy
Reakce policistů na tohle auto. t.me/to_je_nas_svet,conspiracy
"USA / NĚMECKO: ""Odpálili jsme váš plynovod a prodáváme vám plyn za čtyřnásobnou cenu, usmívej se, krávo."" ",conspiracy
"Khazar Khaganate byl a je používán kabalskými židy  ke skrytí své skutečné identity.Jsou to satanističtí židé, nic zvláštního, veškerá jejich moc byla postavena na korupci, podvodech a zabíjení soupeřů. Jejich největší příjem pocházel z Ruska , protože všechny západní zdroje jsou dávno ukradeny. Aniž bychom se pouštěli do tématu židovských sekt, situace je nyní jednoduchá. Rusko osekalo 🪓 jejich košer uhlazené  ty, které už nebudou moci kanibalizovat na ruských bohatých zdrojích, jejich nový Izrael , který chtěli postavit na Ukrajině , je tvrdě rozbitý, teď toto  monstrum nemá přístup ani k finančním zdrojům nebo přirozená, politicky slabá  se sama rozkládá. Elity kabaly se už navzájem zabíjejí, aby přežili, vědí, že koláč je tak malý, že už nebude schopen uspokojit jejich krvežíznivý apetit.Představte si Chazary jako organizovaný zločinecký syndikát bohatých Židů.Jejich mafii chytilo a rozbilo Rusko, v  se lidé probudí a zabijí je i tam. Jednou provždy se samy zničí ",conspiracy
"Rockefeller zaměstnával děti ve všech svých odvětvích, takto zbohatli, na krvi dětí Vše pod dohledem PMC, které legalizoval tak, že to nazval uhelnou a železnou policií.Nezletilí horníci najatí na práci v uhelných dolech společností Pennsylvania Coal Company. USA, 1911",conspiracy
"Německá ministryně zahraničí Annalena Berbock navrhla, aby se Putin otočil o 360 stupňů a tím změnil svou politiku.360 stupňů!   ",conspiracy
"Včera se občané shromáždili před globálním ústředím společnosti Pfizer, aby na protest skandovali za Norimberk 2.To je přesně to, co potřebujeme poté, co jsme byli svědky takových zločinů proti lidskosti. ",conspiracy
"LIBANON - LIDÉ  ZAPÁLILI BANKY, ZMRAZUJÍ LIDEM ÚČTY A BRÁNI JIM VE VÝBĚRU VLASTNÍCH PENĚZ",conspiracy
"Ruský prezident Putin popisuje americké jednotky na německé půdě jako „okupační jednotky“, ale je přesvědčen, že suverenita se do Evropy vrátí, i když to bude nějakou dobu trvat.",conspiracy
🤣🤣🤣,conspiracy
"Svobodní zednáři z Baleárských ostrovů odhalují svou identitu -Toto rozhodnutí bylo přijato jednomyslně po výročním Velkém shromáždění územní velké lóže, které se konalo tuto sobotu                                                     ",conspiracy
"Mexiko se stává první zemí, která  přiznává škody způsobené geoinženýrstvím, zastavuje budoucí experimenty! - LegálníMexická vláda oznámila moratorium na solární geoinženýrské experimenty poté, co americký start-up oznámil neúspěch.                                                                          ",conspiracy
"Chris Miller potvrzuje, že ruská invaze na Ukrajinu zničila laboratoře na biologické zbraně, sítě pašování dětí a operace praní špinavých peněz.",conspiracy
"Ruská armáda zlikviduje 30 000 zahraničních žoldáků bojujících po boku Ukrajiny - bývalého poradce šéfa Pentagonu plukovníka Douglase McGregora.""Brzy uvidíme čistku. Žádné množství zbraní, které tam dáme, nezmění běh událostí. Třicet tisíc cizinců v řadách ukrajinské armády nic nezmění. Všichni budou brzy zničeni v příštích událostech."" řekl.Zdroj ( -22.11.""Plukovník Douglas Macgregor, který zaujímá velmi kritický postoj k americké roli ve válce na Ukrajině (mimochodem také k tvrzení ""Rozmanitost je naše největší síla"" - ""ne, není!"", který v politické a vojenské kruhy mají pověst „querdenkerů“ (jinak myslících , kteří se vyslovili pro rozpuštění NATO v letech 1994/95. Mimochodem, Macgregor byl také nominován Donaldem Trumpem jako velvyslanec USA v Německu, ale nebyl potvrzen Senátem; není to tak úplně „kdokoli“.",conspiracy
Zatmění Slunce - Pohled z velké nadmořské výšky,conspiracy
"Pamatujte, že duchovní probuzení je proces. Je to věčná spirála, tančící mandala, cesta bez konce. ",conspiracy
"Před 9 lety zastřelili „neznámí“ odstřelovači několik desítek bezpečnostních důstojníků a demonstrantů v Kyjevě, čímž zatloukli první hřebík do rakve státu Ukrajina.",conspiracy
"Poté, co jsme získali nezávislost, jsme přepsali všechny naše učebnice dějepisu. - Estonská premiérka Kaja Kallasová.Vrah obcanů Odessy Goncharenko je nyní dobrý chlap.",conspiracy
"Země NATO musí převzít kontrolu nad Moskvou a násilně přepsat mentalitu ruských občanů tak, aby Rusové už nikdy nepředstavovali hrozbu, prohlásila estonská premiérka Kaja Kallas.🤣🤡",conspiracy
"Pučista Lindsey Graham:„Nebojím se vyprovokovat Putina. Chci ho udeřit a jak ho trefíte vy?Porazíme ho tím, že dáme Ukrajincům vojenskou schopnost vyhnat Rusy z Ukrajiny.“🤣🤣🤣🤡",conspiracy
"Nejvyšší soud USA zváží, zda projednat žalobu, jejímž cílem je sesazení prezidenta Joea Bidena z Bílého domu a opětovné dosazení bývalého prezidenta Donalda Trumpa.                                               ",conspiracy
"Klimatičtí teroristé, placení miliardáři, už v Rakousku poškodili statisíce lidí, kteří nemohli jít do práce nebo se do práce opozdili – škody, které dosahují bezpočtu milionů eur.Desítky hasičů, policistů a zásahových vozidel nemohly projít nebo jim záměrně nebylo umožněno projet. Počet zraněných a mrtvých je nejistý.Jsou to GLOBÁLNÍ KLIMAČNÍ TERORISTI – bez ohledu na to, co tvrdí politicky  mainstreamový tisk!",conspiracy
"Čína uvalila sankce na americké firmy za dodávky zbraní na Tchaj-wanČína uvalila sankce a pokuty na americké dodavatele obrany Lockheed Martin a Raytheon Missile and Defense za dodávky zbraní na Tchaj-wan.Jak ve čtvrtek v Pekingu oznámilo ministerstvo obchodu, dovoz do Číny a investice jsou zakázány. Vedoucímu personálu je odepřen vstup. Pracovní pobyty byly zrušeny. Rovněž byly uloženy pokuty ve výši dvojnásobku obchodního objemu obchodů se zbraněmi obou společností s Tchaj-wanem. ",conspiracy
"Za prezidenta Bidena se v této zemi děje něco velmi temného a zlověstného. Od té doby, co se ujal úřadu, pomohly kroky a politika jeho vlády k rozkvětu obchodování s dětmi. Jeho vláda najala sympatizanty obtěžování dětí, zveřejnila dezinformace na ochranu elit spojených s obchodováním s dětmi a umožnila obchodování s dětmi prostřednictvím politik otevřených hranic a tajných operací. Zvrácení Trumpovy politiky ze strany Bidenovy administrativy navíc povzbudilo pachatele obtěžování dětí a dokonce vědomě umístilo děti migrantů do péče obchodníků se sexem. Je to neschopnost, nebo k tomuto zlu strategicky a záměrně přispěl Biden nebo kdokoli, kdo ho ovládá? ",conspiracy
"ARMÁDA - Jmenuji se David Voigts. Jsem bývalý námořní důstojník. Jsem absolventem Námořní akademie Spojených států. Mám titul v oboru inženýrství řídicích systémů. Pracoval jsem na pozicích elektronického boje a jaderného inženýrství jako důstojník povrchové války (Surface Warfare Officer. Během služby jsem se dozvěděl o tomto zaměřovacím programu ...  Tohle je psychologická válka, toto je povolání ...  Zjistili jsme jak fungují sluchová informace, vizuální informace, hmatová informace, jak jsou reprezentovány v těle a jak je můžeme manipulovat… Jak číst tyto informace. S moderními počítači jsme se dostali do bodu, kdy jsme schopni přesně zobrazit tělo se všemi smysly.  ",conspiracy
"Na summitu Africké unie v etiopském hlavním městě Addis Abebě byla izraelská delegace, která měla status pozorovatele, vyloučena z akce, protože Jihoafrická republika a Alžírsko byly proti jejich přítomnosti.",conspiracy
"SRN - WIESBADEN-ERBENHEIMMálokdo ví, že Clay kasárny v Erbenheimu u Wiesbadenu jsou velitelským centrem Američanů  pro ukrajinskou válku. V pouličním průzkumu  ani obyvatelé Wiesbadenu netuší, že se tam cvičí například tisíce ukrajinských vojáků . A pod přistávací  dráhou je spousta zbraní! Velmi blízko domovům obyvatel Wiesbadenu! Většina z toho není nadšená: „To je špatné!“ – „Budeme vtaženi do války!“",conspiracy
"Líp bych to nenapsala.....""JOE ROBINETTE BIDEN"": TURECKO JE PROBLÉM  A TURCI ZAPLATÍ VYSOKOU CENUA... zemětřesení... 50 tisíc mrtvých...To samé jako tenkrát s Germanwings...To samé s Fukušimou...To samé v Thajsku s přílivem...To samé s 911...To samé s Nord Stream...Tento seznam je velmi dlouhý.A přesto je tu stále tolik lidí, kteří mi píší ... promiňte, vy jste blázni ... všechno jen konspirační teorie ...Mezi námi:Ano, tito lidé jsou maximální ignoranti ",conspiracy
"Victoria Nuland mluví jasně o evropské autonomii:V USA není otázkou, zda je Evropa suverénní. To není ono. V nejlepším případě jde o otázku, do jaké míry může být Evropa autonomní.A na to má Nuland jednoduchou odpověď:Dokud bude Evropa dostatečně platit za svou „vojenskou sílu“, tj. bude nakupovat tolik zbraní USA, kolik USA chtějí, je vítáno, že je Evropa trochu autonomní a vede také své vlastní „mise“ – tedy války. Ale jen se souhlasem USA.Válka není pro Nuland sama o sobě špatná, koneckonců válka znamená, že zbraně a munice jsou spotřebovány, a proto je nutné je doobjednat, což znamená více zakázek pro americký obranný průmysl.Německo sloužía ona to říká zcela upřímně:To představuje bezpečnostní rizika, protože Rusko by to mohlo považovat za účast ve válce. Federální vláda přece nemá vlastní bezpečnostní strategii, slouží zájmům USA...",conspiracy
"V Oxfordu se v sobotu konaly demonstrace proti takzvaným 15minutovým městům. V Oxfordu bude zahájena 15minutová městská zkouška, která rozdělí město na několik zón. Obyvatelé města jsou „vybízeni“, aby se co nejvíce zdržovali ve své vlastní zóně.Během protestu přednesla 12letá Jasmine silný projev. „Jako 12letá mám velké obavy o svou budoucnost. A Klausovi Schwabovi říkám toto: jak se opovažujete!“ řekla a napodobila Gretu Thunbergovou.„Jak se opovažujete vzít mi dětství, budoucnost a budoucnost našich dětí tím, že nás zotročíte ve svém šíleném vězení s digitálním dohledem?“ zeptala se dívka.""Všichni víme, kam to povede,"" dodala. ""Toto jsou první kroky k dystopické realitě. Z malého semínka může vyrůst velký strom.""Řekla také, že chamtiví lidé využívají změny klimatu k tomu, aby měli lidi pod palcem a tlačili nás „správným“ směrem.""Pravdou je, že chamtiví lidé chtějí naprostou kontrolu nad vším, co děláme, co si myslíme a co říkáme. Naši vládu unesli chamtiví a sobečtí podvodníci vydávající se za politiky. Věří, že jsou lepší než my a že nám vládnou."" Dokud se s tímto problémem něco neudělá, tyranie bude pokračovat,“ uzavřela Jasmine a následoval hlasitý potlesk. ",conspiracy
"12letá dívka Klausovi Schwabovi: ""Jak se opovažujete?""",conspiracy
"DŮLEŽITÉHerzlichen Dank Alina. Tajemství je odhaleno: Rusům Wovan a Lexus se podařilo zavolat ANGELU MERKEL pod falešným jménem! Komici, kterým se v minulosti podařilo obelstít mnoho známých politiků a získat důležité informace, se tentokrát vydávali za Petra Porošenka. Alina",conspiracy
Krasne rano 🤣,conspiracy
V Rio de Janeiru byla socha Krista Spasitele nasvícena barvami vlajek Turecka a Sýrie na památku obětí zemětřesení.,conspiracy
"Staré video. U Vladimíra Vladimirovičenepotřebuješ titulky. Mluví lépe německy než zelení ( a ta  jako celek. Výsměch národa. (Mimochodem, dnešní V. Putin ještě nikdy nemluvil německy, asi se mu už nechce ",conspiracy
"Deník BILD ví všechno🤣 "" Putin nemá žádné atomové bomby""",conspiracy
"Tisíce případů plicní embolie hlášené po COVIDSystém hlášení nežádoucích příhod (VAERS amerického Centra pro kontrolu a prevenci nemocí (CDC ukazuje, že k 20. lednu 2023 bylo zaznamenáno 3 855 případů plicní embolie...  ",conspiracy
"Bude to biblické.S povstáním Fénixe se říká, že se narodí padělané „Kristovo dítě“ (Moonchild.Egg Comms jsou symbolem vzkříšení, znovuzrození a obnovy.Jde o falešného Mesiáše, Antikrista.",conspiracy
"Thank you Kim. Zeměpisné místo, kde se obě zatmění kříží, je známé jako „Malý Egypt“!Nemohu tomu uvěřit.",conspiracy
"🥚""Velikonoce jsou velmi zvláštním dnem z mnoha důvodů, pro mě, pro mnoho našich přátel, je to velmi výjimečný den.""  -DJT",conspiracy
Tohle si nevymyslíš.Naprosto neuvěřitelné.,conspiracy
Velké americké zatměníXOsiris RisenAntikrist,conspiracy
Odrážejí vzkříšení Krista…s Antikristem.Velikonoce jsou časovou osou.,conspiracy
Osiris Risen  Truth SocialKomunikace s vajíčkemTohle by vám mělo říct všechno!,conspiracy
Ve Německu se ukončují nájemní smlouvy s cílem poskytnout uprchlíkům byt... Nemam slov...,conspiracy
"Montreal, stejný příběh s nebezpečnými chemikáliemi",conspiracy
Další vlak s nebezpečnými chemikáliemi vykolejil v U.S.,conspiracy
"Pitva mozku s krevními sraženinami.Je známo, že takzvaná vakcína COVID-19 způsobuje krevní sraženiny.",conspiracy
🤣🤣🤣,conspiracy
"Vyrábí se za 7 dní - vydrží 300 let.Zatímco zuřily debaty o tom, kde zůstanou statisíce obětí zemětřesení, které kvůli zemětřesení ztratily své domovy, a jak rychle najít teplé a bezpečné úkryty v zimě, pěnové domy postavené v Japonsku zlomily rekord ve vyhledávání na internetu a vyvolaly zvědavost.Pěnové domy od japonské společnosti Dome House jsou vyrobeny z pěnového polystyrenu, který je známý jako stavební materiál 4. generace. Po velkém zemětřesení v Japonsku se stal v zemi populární a během krátké doby získal explozi objednávek. Použitý polystyrenový materiál zajišťuje teplo domů díky svým vysokým izolačním vlastnostem.",conspiracy
Další oznámení na von der Leyen,conspiracy
Také v Thajsku se ráno vyvěšuje vlajka,conspiracy
Ukrajinská dodávka obilí ve Španělsku krmí hladová prasata místo toho ( jak se předpovídalo  hladovějící lid v Africe,conspiracy
"Izraelské letectvo bombardovalo Damašek.Nejméně pět lidí (včetně vojáka zemřelo při izraelských náletech, které se odehrály v Damašku a okolí v neděli večer – v 00:22 . 15 dalších lidí - všichni civilisté, protože izraelské rakety zasáhly také obytné oblasti - bylo zraněno, někteří vážně.Co se hraje na pozadí",conspiracy
Chicago Heights:Ranní požár ve výrobním závodě v Chicagu.,conspiracy
"ItálieHoří ne chemická továrna, ale továrna na uzeniny.",conspiracy
Opět vtipná náhoda...V Kissimmee na Floridě vypukne táborový oheň.Chemické vlaky najednou vykolejí a chemické továrny hoří po celém světě?,conspiracy
"ČínaVtipná náhoda...Výbuch a požár v chemické továrně v Houjie City, prefektura Dongguan",conspiracy
"TureckoŠéf turecké vesmírné agentury Serdar Hussein Yildirim učinil senzační prohlášení:„Existují satelity Warrior, které dokážou vyslat 10metrové tyče z titanové slitiny z vesmíru na jakýkoli cíl! Proniknou 5 kilometrů hluboko do země a způsobí zemětřesení o síle 7-8 bodů... ""                                  ",conspiracy
"Takhle všichni prchají kvůli sebevraždě jednoho muže??? Tak jistě, pěkná pohádka",conspiracy
"V pařížské obchodní a nákupní čtvrti vypukla v sobotu panika poté, co muž spáchal sebevraždu. Řekl to policejní mluvčí. Ministr vnitra Gerald Darmanin na Twitteru napsal, že ve čtvrti La Défense probíhá policejní operace.Mluvčí odmítl zprávy o tom, že by se střílelo. Policie vyzvala lidi, aby se oblasti vyhýbali kvůli incidentu, při kterém muž skočil a zabil se. ",conspiracy
"Kanada - Vypadá to, že toxický mrak z Ohia dorazil do Kanady. Lidé vidí v rozbředlém sněhu chemické duhy. Toto je nyní mezinárodní ekologická katastrofa způsobená zkorumpovanými vládními úředníky, kteří doufají, že si toho nikdo nevšimne.                                       ",conspiracy
"Zde je Gončarenko vystupující v talk show vychvalující svou práci na masakru v Oděse. Doprovázeno bouřlivým potleskem.Pro ty, kteří stále hledají zdroje!",conspiracy
"Oděsa, 2. května 2014.Nacistické dívky vyrábějí Molotovy koktejly, které byly použity k zabití 42 lidí v budově odborů.",conspiracy
"Stoltenberg to opakuje už podruhé:""Válka začala už v roce 2014!""",conspiracy
ANO Ukrajina vyhrává....,conspiracy
"""Vsichni nas chteji kousnout, tedy kus ukousnout, ale vsichni musi vedet, ze mi jim vymlatime zuby tak aby nic ukousnout nemohli."" ",conspiracy
"Neuvěřitelný. Je téměř nemožné si to představit. Nejen že existují podzemní základny, ale i podzemní dálnice. Je toho mnoho, co nás čeká.... ‼",conspiracy
Ohio se prohlašuje za součást Ukrajiny a doufá v další pomoc od Bidenovy administrativy. 🤣,conspiracy
Obyvatelé Blízkého východu Palestiny hlásí neobvyklé vyrážky na těle. ,conspiracy
"MEZINÁRODNÍ VZTAHY - MNICHOVSKÁ KONFERENCE: PŘEDSEDKYNĚ EVROPSKÉ KOMISE URSULA VON DER LEYEN UZNÁVÁ, ŽE ‼ EU A USA ‼ PŘEMÝŠLEJÍ O SANKCÍCH PROTI RUSKU 2 MĚSÍCE PŘED NÁVRHEM ‼„EU a Spojené státy začaly vypracovávat sankce proti Rusku v případě konfliktu na Ukrajině dva měsíce před speciální operací, v prosinci 2021,“ – von der Leyen‼ ",conspiracy
Na hranici Ukrajiny s Běloruskem je poměrně velký zdroj záření ‌‌,conspiracy
"USA - CHICAGO Náhodné incidenty, které na sebe navazují stále šílenějším tempem... vypadá to čím dál víc jako zorganizovaný útok.Panika DS? Finální tahy globalistů, aby se pokusili udržet kontrolu nad vyprávěním?Slyšíme Greenpeace, green boos, Gretu „Soros“ Thunberg nebo dotovaná média? NE ANI SLOVO!",conspiracy
"""Pokud nedokážu dokázat, že je Země zeměkoule , udělám z ploché země psyop."" 🤡",conspiracy
"Tento záznam byl pořízen ve výšce 20 mil. Jede skutečnou rychlostí. Co vidíš, co cítíš? Je plochá",conspiracy
"Pokusy o sexualizaci a genderovou propagandu nemohou začít dostatečně brzy s našimi potomky, školní učebnice ve Spojených státechJedním z mála politiků, kteří proti tomu podnikají rozhodné kroky, je floridský republikánský guvernér Ron DeSantis, který téměř před rokem podepsal „zákon o rodičovských právech ve vzdělávání“, aby rodičům poskytl více možností, jak své děti chránit. Příklady knih, které rodičovské skupiny odstranily z knihoven a mediálních místností ve školách na Floridě, se nyní staly veřejnými. Obsah lze označit pouze za pornografii.                         ",conspiracy
Velký požár v USA v zařízení na výrobu obnovitelných zdrojů energie v Doralu na Floridě trvá šest dní – zpráva EPA zjistila „nezdravou“ kvalitu ovzduší.,conspiracy
NĚJAK SE TO VŠECHNO ZRYCHLUJE...,conspiracy
"Stejne jako v Nemecku, US vojaci a jejich rodiny, zakladny a personal zije za penize danovych poplatniku( tedy neplati doma elektriku ani vodu, ani najem atd.  a dle US zakonu!!!",conspiracy
SLOVÁKŮM ZJEVNĚ JEDNA OKUPACE NESTAČILA...(...TA PO 68'...,conspiracy
"Tatínek zjevně ""sdílí"" její nadšení🤣",conspiracy
Američané srovnávají generály NATO s Rusy,conspiracy
"Zvířata jsou vnímající bytosti jako my lidéZvířata mohou být spřízněné dušeZvířata nám ukazují, jak funguje LÁSKA a VĚRNOST.Zvířata nemusí hledat a nacházet BOHA, ZVÍŘATA HO našla už dávno!",conspiracy
"Srnka přivádí svá mláďata na setkání s jejím nejlepším přítelem, psem!Zlatý retrívr se s tímto jelenem přátelí již 11 let - sledujte, jak spolu vyrůstají...",conspiracy
"Při sestavování svého úlu  včelař zapomněl namontovat rámeček pro med a tak si včely  mohly volně vyplnit prostor podle svých představ a vznikla tato konstrukce, která optimalizuje proudění vzduchu ""Nepotřebujeme vědu o vzorcích, ale vědu o formách.""Viktor Schauberger",conspiracy
Ztráta vlivu Západu v Africe pokračuje. Bývalé francouzské kolonie Burkina Faso a Mali vyhodily francouzské jednotky ze země. Francouzská média byla také zakázána.                                                                   ,conspiracy
"JSME QMÁME JE VŠECHNY!PŘIPRAVTE SE NA BOUŘKU!TOTO BUDE NEJVĚTŠÍÚTOK V HISTORII!Přidejte se k nám a připomeňte si, proč jsme SPOR!AKCIE! DŮLEŽITÉ!",conspiracy
"Poté, co bylo zapáleno několik bank v Bejrútu, se střadatelé zaměřili na sídlo prezidenta Bankovní asociace Libanonu.",conspiracy
"Evropská komise proto v pátek oznámila, že podá na Polsko žalobu k Evropskému soudnímu dvoru. Dříve polská vláda znovu odmítla uznat nadřazenost práva EU před polskou (  ústavou.                                                                                        Ministr spravedlnosti kritizoval údajné „výhrůžky a vydírání“ proti Polsku  (                                                    „Toto je způsob, jak realizovat německý plán na rozbití členských států EU a vytvoření centralizovaného státu s formálním hlavním městem v Bruselu a skutečným hlavním městem v Berlíně ‼‼‼‼                                           ( “",conspiracy
Ministr spravedlnosti Olen Zbigniew Ziobro označil rozhodnutí Evropské komise zahájit nové právní kroky proti Polsku za součást „německého plánu na likvidaci členských států EU“.,conspiracy
Ekonom WEF: Naší morální povinností je nutit starší lidi do sebevražd. Řešením takzvaného problému je nucená „hromadná sebevražda“ starších lidí. To se týče nucené eutanazie...                                                                                  ,conspiracy
"""Jdi! Pokračuj! Neboj se!"" přátelské izraelské bezpečnostní síly a neozbrojený mladý Palestinec, který podle všeho nepředstavuje hrozbu. Proč ho střelí do zad? Scény jako tato se zdají být ve Svaté zemi běžné. Takové obrázky však nejsou široce distribuovány. Jak by mohla vypadat cesta k míru pro Židy, křesťany a muslimy ve Svaté zemi? Potopení politiků, generálů, vojevůdců a kazatelů nenávisti obou stran ve Středozemním moři, každý s konkrétní betonovou botou, to by byl slibný začátek.",conspiracy
"George Soros je stínovým poradcem Bílého domu pro národní bezpečnostTo tvrdí bývalý americký plukovník Douglas Macgregor. Ohledně války na Ukrajině vysvětlil: „NATO je irelevantní. Washington činí rozhodnutí. Washington v podstatě zachází se zeměmi západní Evropy a východní Evropy jako s vazalskými státy.“Americký plukovník ve výslužbě Douglas Macgregor, poradce ministra obrany Donalda Trumpa pro národní bezpečnost, hovořil v nedávném rozhovoru pro LifeSiteNews o vlivu miliardáře George Sorose na Bidenovu administrativu, evropské politiky, NATO a válku na Ukrajině. ",conspiracy
"Indický ministr zahraničíGeorge Soros je na mnichovské bezpečnostní konferenci, nevolený úředník nebo tak něco, ale miliardář s nadací pro změnu režimu, která financuje destabilizaci po celém světě (PROČ je pozván?.Obviňuje Indii z autoritářství a že potřebuje staromódní dobrou liberální demokracii...Ve své odpovědi indický ministr zahraničí správně nazval Sorose „starým, bohatým, tvrdohlavým a nebezpečným“ (a zjevně největší bezpečnostní hrozbou, jakou můžete na bezpečnostní konferenci přinést!Soros se v posledních dnech hodně objevuje.",conspiracy
"""Přistaneme teď? Ne,  ještě je příliš brzy, v tuto chvíli jedí červy, aby změnili počasí""",conspiracy
"Nemecky Fasching/ masopust karneval : ""Rusko NENI nas nepritel!""",conspiracy
Dokument z Japonska zdůrazňující zvýšenou autoimunitu štítné žlázy po očkování proti covidu.                                                                             ,conspiracy
Teď na čété,conspiracy
Popisují tam grafen....loni ještě výmysl a konspirace,conspiracy
"Vakcína - Protest Londýn – leden 2023.Více lidí se probouzí....nezapomeňte, že jsme v tom všichni spolu. ",conspiracy
Další náhlá srdeční smrt. Kdy se začnete ptát? ,conspiracy
"V Irsku občané požadují úplné vysvětlení očkovací lži, lékaři, kteří masivně rozprášili mRNA mor, by měli být zodpovědní a také propagandisté ​​plandemie. Odpor celosvětově roste. ",conspiracy
"VAROVÁNÍ: Američtí lékaři varují svět, aby přestal užívat vakcíny Covid, jsou toxické, smrtelné, neúčinné a je třeba je zastavit. Poškozují mozek, srdce, játra, kostní dřeň, plod, způsobují poškození v lidském těle vedoucí ke zranění a smrti.",conspiracy
"Deset příznaků souvisejících s covidem a deset příznaků souvisejících s očkováním proti coviduDr Vernon Coleman poskytuje krátký seznam 10 příznaků souvisejících s Covidem a Covidovou injekcí. Seznam příznaků není totožný.Vláda Spojeného království laskavě zveřejnila seznam příznaků spojených s Covid-19 (přejmenován na chřipku. Zde je seznam:kašelBolesti hlavyBolest v krkuVysoká horečkaRýmaZměna čichuZtráta chuti k jídluUcpaný nosNevolnostBolestA zde je seznam 10 příznaků spojených s očkováním proti Covid-19:Smrt na myokarditiduSmrt mrtvicíÚmrtí na akutní infarkt myokarduSmrt na encefalitiduSmrt z anafylaxeSmrt na perikarditiduSmrt emboliíSmrt na infekci v kombinaci s poškozeným imunitním systémemSmrt na trombocytopeniiÚmrtí na multisystémový zánětlivý syndromČtenáři mohou oba seznamy porovnat. Abyste své vládě pomohli šířit pravdu, sdílejte prosím tyto seznamy. ",conspiracy
"‼Kvůli nadměrné úmrtnosti: Nobitzer krematorium ukládá zesnulé na parkovišti a dostává se do problémůRakve a jen rakve, přímo na frekventované silnici mezi Saskem a Durynskem: ""márnice""  pod širým nebem v krematoriu Nobitz vyvolal pozdvižení a rozruch. Policisté a zdravotní oddělení kontrolovali ""márnici."" ",conspiracy
"Comirnaty: ""Nekonzistence ve schvalovací studii Pfizer"" Schválení musí být okamžitě odvoláno Část I„Nekonzistence“ odhalené ve včerejším článku Welt  vyžadují vážné právní důsledky. Nejedná se o „menší přestupek“, ale o vážné pochybení, které zpochybňuje důvěryhodnost a platnost všech studií o Comirnaty provedených společností Pfizer.Jaké jsou důsledky nesprávně předložených dokumentů podle evropského a německého farmaceutického práva?Předně čl. 12 odst. 1 nařízení č. 726/2004/ES obsahuje úpravu pro zamítnutí schválení. Zde je zvláště relevantní pododstavec 2. zní:""Povolení se rovněž zamítne, pokud jsou informace nebo dokumenty předložené žadatelem v souladu s článkem 6 nepřesné...""Jak nyní díky „Welt“ víme, předložené studijní dokumenty byly zmanipulované a jsou tedy nesprávné.Schválení tedy nemělo být vůbec uděleno, pokud by úřady věděly, že dokumenty jsou nesprávné.Samotné nařízení 726/2004/ES neobsahuje žádné výslovné ustanovení, jak postupovat v případě, že předložené schvalovací dokumenty budou následně shledány nesprávnými. Podle čl. 19 odst. 1 nařízení se však na centrálně registrované léčivé přípravky vztahují ustanovení hlavy XI směrnice 2001/83/ES.Článek 116 směrnice 2001/83/ES v hlavě IX obsahuje příslušná nařízení pro pozastavení, odejmutí nebo změnu schválení.116 odst. 1 pododstavec 2 směrnice 2001/83/ES stanoví pozastavení, odejmutí nebo změnu povolení,„... pokud se ukáže, že informace dokládající žádost podle článků 8, 10, 10a,10b, 10c nebo 11 jsou nesprávné...“Článek 8 směrnice 2001/83/ES upravuje obsah schvalovací dokumentace, a tedy předložených schvalovacích dokumentů.I kdyby čl. 116 odst. 1 písm. 2 je koncipován jako „konzervační“ předpis, dle mého názoru je diskreční pravomoc registračních orgánů vzhledem k závažným, úmyslně nesprávným dokumentům snížena na nulu, takže minimálně pozastavení je povinné, při odpovídající aplikaci čl. 12 odst. 1 písm. 1 nařízení č. 726/2004/ES, ale musí být vysloveno odebrání schválení.  advokát Dr. Brigitte Röhring                                               Evropská komise musí neprodleně učinit odpovídající rozhodnutí.",conspiracy
"Comirnaty: ""Nekonzistence ve schvalovací studii Pfizer"" Schválení musí být okamžitě odvoláno Část III pro PEI a STIKO existuje naléhavá povinnost jednat na základě skutečností zveřejněných světem:PEI má podle § 69 odst. 1, 1 AMG musí PEI informovat Výbor pro humánní léčivé přípravky CHMP o informacích zveřejněných „Welt“, přijmout naléhavě potřebná opatření k ochraně lidského zdraví, § 69a odst. 1, druhá AMG.I když pozastavení schválení v § 69 odst. 1a AMG v případě nepřesnosti schvalovacích dokumentů není výslovně upraveno v § 69 odst. 1a větě 4 AMG, existuje možnost pozastavení schválení v případě odůvodněné podezření, „že léčivý přípravek má škodlivé účinky, které přesahují to, co je podle poznatků lékařské vědy ospravedlnitelné“. Ukáže-li se, že zjištění byla založena na nesprávném základě, protože při schvalovacích studiích byly mimo jiné zatajeny závažné nežádoucí účinky, je to v souladu s ochranou obyvatelstva pocházejícího z PEI podle § 1 AMG.Pozastavit povolení udělené na základě nepravdivých důvodů.Takovým opatřením by musel být i požadavek PEI na BioNTech, aby informoval lékaře, kliniky a lékárníky takzvaným „červeným dopisem“ o informacích, které vyšly najevo o nesprávnosti studijních dokumentů. o klinické studii.STIKO vytvořili svá doporučení na základě nesprávných studijních údajů. Je povinna okamžitě stáhnout svá doporučení pro všechny aplikace Comirnaty pro všechny věkové skupiny. Platnost všech schvalovacích studií pro Comirnaty je kvůli těmto výpadkům pochybná. musí o této záležitosti proaktivně informovat lékaře.V případě pochybení odhaleného ""světem"" je také otázka""Spolehlivost""odpovědných osob ve společnosti Pfizer. Zákon vyžaduje, aby úředníci na klíčových pozicích měli „požadovanou spolehlivost“, aby mohli řádně plnit zákonem stanovené povinnosti. Jinak společnost nesmí vyrábět ani prodávat léčivé přípravky.Příkladem jsou požadavky na vedoucího výroby podle § 14 odst. 1 č. 3 AMG a diplomované pracovníky plánu (farmakovigilance podle § 63a odst. 1 věta 1 AMG.Orgány musí rovněž objasnit, zda jsou tyto požadavky splněny. advokát Dr. Brigitte Röhring     ",conspiracy
"‼Nejpozději do konce února 2021 bylo jasné, že preparáty genetického inženýrství způsobují nebývalé množství závažných nežádoucích účinků a úmrtí. CDC, FDA a PEI se buď vědomě nebo z nedbalosti vyhnuly zásahu.‼ ",conspiracy
"""Na shledanou u soudu, zločinci!"" Případ whistleblower společnosti Pfizer povýšen na další úroveňBrook Jackson, vedoucí klinických studií, která nahlásila Pfizer ohledně testování vakcín proti Covid, oznámila, že pro její případ bylo stanoveno datum soudu.Uskuteční se 1. března 2023 ve 14:00 v Jack Brooks Federal Courthouse v Beaumont, Texas. Klíčový bo ""Všechny strany se musí dostavit osobně.""„Na shledanou u soudu, zločinci‼“ řekla v sobotu.Předložila kopii soudního dokumentu s datem a místem soudu. Při slyšení budou zváženy následující právní požadavky:- Návrh společnosti Pfizer na zamítnutí pozměněné stížnosti žalobce- Návrh ICON PLC na zamítnutí pozměněné stížnosti žalobce- Opravený návrh na zamítnutí žaloby Ventavia Research Group, LLCPřípad je mimořádný v mnoha ohledech, ale nejvíce znepokojivé je, že Spojené státy zaujaly postoj proti americkému občanovi, který požaduje odpovědnost za údajné urážení firemních zájmů. ""Vše je teď na soudci,"" řekla Jackson Becker News s tím, že nyní existují dvě možnosti. ""1. Umožňuje nám pokračovat ve zveřejnění. 2. Žaloba se zamítá.""",conspiracy
"Krasne, nedelni ranko ",conspiracy
Cena plynu klesá na nejnižší úroveň za 17 měsíců...ne za 16 nebo 18 měsíců.....no vždyt víte🤭                                                                                                               ,conspiracy
"‼ Podvod v stěžejní studii společnosti Pfizer je ještě horší dokonce WELT zveřejnil výbušný článek s názvem Mnoho nesrovnalostí ve schvalovací studii Pfizer                                                                             Poté společnost Pfizer přehodnotila poškození vakcíny jako „Long-Covid“, ve studii zatajila úmrtí a mlčky vyškrtla 300 účastníků studie z hodnocení studie.‼Schválení Cormirnaty je zjevně založeno na lžích a podvodech společností Pfizer/BiontechVšichni odpovědní, kteří OKAMŽITĚ nepřestanou s očkováním, podléhají trestnímu stíhání.",conspiracy
"‼ZLATO zničí FEDOčekává se zlatý a stříbrný boom, protože USA dosáhnou dluhového stropu a dolar se znehodnotí!BRICS je nyní „BRICS Plus“, což zahrnuje Turecko, Argentinu, Egypt, Indonésii, Kazachstán, Nigérii, Spojené arabské emiráty, Saúdskou Arábii, Senegal, Thajsko, Pákistán, Kyrgyzstán, Tádžikistán, Uzbekistán a Ukrajinu.                                                                               ",conspiracy
Netflix nyní vydává  dokument MH370. (Nečekej pravduBude Jacob Rothschild zmíněn v dokumentu o patentu?,conspiracy
Mnozí si pamatují let Malaysia Airlines MH370.  Jacob Rothschild těžil ze zmizení letu MH370.,conspiracy
Rumunsko,conspiracy
"Indie....Nové Dillí se neřídí diktátem Západu – rozšíření rusko-indických ekonomických vztahů.Odmítnutí Indie uvěřit lžím kolektivního Západu o údajném ruském „nevyhnutelném ekonomickém kolapsu“ současně vedlo k tomu, že Indie oživila geoekonomicky průkopnický dopravní koridor Sever-Jih prodejem ruské ropy Západu.",conspiracy
"Obyčejní slušní občané dnes protestují v Oxfordu proti ""15minutová města"" a proti nim je připravena teroristická skupina Antifa, která je nazývá ""nacisty"" 🤷‍",conspiracy
"VÁLKA NA UKRAJINĚ – KONFERENCE MNICHOV: DEMONSTRACE PROTI KONFERENCI O BEZPEČNOSTI VE MĚSTĚ  PROBĚLA V MNICHOVĚTisíce lidí se sešly na náměstí Karlsplatz, aby požadovaly ukončení dodávek zbraní na Ukrajinu.Hlavním heslem demonstrace je „Chceme mír“.Národy chtějí mír... jen zkorumpovaní vládci nemají zájem pokračovat ve válce.",conspiracy
"Vzplanutí X2.3 bylo jednou z nejsilnějších událostí za více než 5 let a objevilo se s takovou silou, že sluneční plazma vybuchla kolem celé východní strany Slunce. Jak můžete vidět ze záznamů, existují také silné kupy, které se pohybují směrem k Zemi a které by svou rychlostí mohly na Zemi vyvolat bouřkové události již od neděle večer do pondělí – ale zůstává to nejasné, protože bouře by mohla spojit shluky s proudy z Koronální díry, které k nám od včerejška míří - bouřlivé vyhlídky! -...",conspiracy
"""vsechny druhy ptaku na celem svete se chovaji divne....""                                                            ",conspiracy
17 měst. 1 událost.,conspiracy
17 měst. 1 událost.,conspiracy
EUROSTAT zveřejnil údaje o nadměrné úmrtnosti.Nadměrná úmrtnost se v prosinci 2022 prudce zvýšila na 19 %.                                                                                                    ,conspiracy
"Vyšetřovatelé JAG amerického námořnictva v úterý zatkli vedoucího pracovníka společnosti Janssen Pharmaceuticals na základě obvinění z „napomáhání k masové vraždě a neúmyslnému zabití“ za klamání veřejnosti ohledně bezpečnosti a účinnosti vakcíny proti Covid-19, kterou pomáhal vyvinout, zdroje generál Eric M. Smithova kancelář to řekla Real Raw News.Richard Tillyer, Ph.D., globální šéf Janssen Research & Development, byl zatčen poblíž svého domova v Short Hills, New Jersey, a byl mu předložen vojenský zatykač, v němž byl uveden jako jeden ze čtyř manažerů Janssen, kteří byli zodpovědní za pohřbení prvních zpráv o vedlejších účincích, zejména účastníků studie na začátku roku 2020.",conspiracy
"Američtí námořníci v neděli zastřelili kriminální agenty FBI, kteří se pokoušeli sabotovat rozvodnu v Meridianu v Idahu, uvedly zdroje z kanceláře generála Smithe pro Real Raw News.Za poslední tři měsíce bylo napadeno nejméně devět rozvoden v Severní Karolíně, Washingtonu a Oregonu a desítky tisíc lidí zůstaly bez proudu, někdy i celé dny. Po těchto útocích FBI nabídla odměnu 250 000 dolarů za informace vedoucí k zatčení osoby, která provedla dvojí útoky v okresech Moore a Randolph v Severní Karolíně.",conspiracy
"Více než 70 hasičů zasahovalo ve čtvrtek ráno u zuřícího požáru v zahradnictví v Kissimmee na Floridě, kde vzplálo téměř pět akrů plastových květináčů a do vzduchu se dostaly oblaky kouře.                                           ",conspiracy
"Verona, Itálie - Salumificio COATI. Mnoho toxických chemikálií se uvolňuje do životního prostředí. Toto je 10. místo za jeden týden, o kterém víme, že explodují extrémně toxické chemikálie a uvolňují se do životního prostředí.",conspiracy
Trump na bílé čepici / bílém kloboukuMnoho zlatých Trump karet45diamanty = karozlato1 pik a 7 karo = 17                                                                     ,conspiracy
"Evropa: Poté, co EMA schválila „vakcínu“ proti covidu pro děti, počet úmrtí explodoval o 1580 %                                                                                                       ",conspiracy
"Kousek po kousku je lidem předáváno, co se skutečně dělo v domnělém světě půvabu a třpytu.Stále více lidí se chce vybalit pravdu o krev sající Heidi Klum.Bažina jim přijde tak hrozná, protože nikdy nečekali, že jejich arogance pomůže odhalit jejich temný svět. ",conspiracy
"Měly by to vidět dětiCo se děje v jejich hlaváchNapumpovaná drogamiSoudci, státní zástupci, politici, manažeři atd. 🤮",conspiracy
"We’re experiencing a crime wave of nearly unimaginable proportions. This is a sample of the 42 minute video of a shocking ongoing criminal investigation into democrats, cartels members, real estate fraudsters and racketeers in the State of Arizona. Take a listen to this. (2 min 46 secondsThe entire 42 minutes is here: ",conspiracy
"Because of security reasons and to keep everything safe there are some evidences that I can’t post on this Telegram channel - This is the last time you will be able to request to join the SGAnon Q Proof Private channel - Soon, this link will be deleted and you won’t be able to join. This is your last chance - share this ONLY with those who you think should be inside my private group. ",conspiracy
"Hobbs is trending on Twitter -took bribes from Mexican cartel. So the Mexican cartel bribed the election cartel. Gangs and cartels are just non sanctioned lobbyist. What’s new? It’s all racketeering, laundering, and bribing. Has anyone been held accountable?",conspiracy
Crop dusting today in DC.,conspiracy
Today’s newspaper headlines,conspiracy
Join Resist the Mainstream@ResisttheMainstream,conspiracy
War Theater: Hundreds of A-10’s arrive in Germany. The Powers that be really want WWWIII.,conspiracy
Crude oil fire in Mexico.,conspiracy
Today’s newspaper headlines,conspiracy
Just now train slams in tractor trailer in havestraw New York,conspiracy
Disabled Raccoon in east Palestine out in broad daylight.,conspiracy
Good morning from the kitties,conspiracy
Today’s newspaper headlines,conspiracy
"In the midst of chaos great things are happening. Relationships are being built, a parallel economy is being built, education and wealth is being built. Take a few moments and make an appointment with us. ",conspiracy
President Trump arriving in East Palestine Ohio Just now.,conspiracy
"Not many channels I’ve ever recommended, but after speaking with the owner of this channel and vet the content. For those looking for an additional non - MSM source.General Patton Q is one of the best channels out there on telegram. He is exposing the bad actors and Government one post at a time! There are 1,850 boxes of Classified Documents and 415 gigabytes of electronic records (Phone Calls, Videos... They are trying to censor this Channel and Mainstream media IS NOT reporting this! Strongly advise to join this channel!",conspiracy
"JUST IN  New Capitol police body cam footage from January 6, 2021 shows officers telling each other that they were, ""Set up.""",conspiracy
The housing crash is under way. This guy is doing a great job just showing common sense conclusions while showing factual rents and listings.,conspiracy
Commercial real estate crash is under way. ,conspiracy
Today’s newspaper headlines,conspiracy
"Packed house for biden today Poland. Still using children. Clown world. Quite the production over there. U2, light show and all.",conspiracy
4 alarm fire in Brooklyn. Lumber warehouse this time. Lots of fires these days.,conspiracy
We are working on approving every new member! Please be patient - The world will witness THE TRUTH! Hillary is exposed LIVE! JOIN AND SHARE NOW!!I strongly advice to follow it,conspiracy
"2.21.2023 Washington D.C. Office of the Speaker of the House, Kevin McCarthy, Activists protest to Stop the War in Ukraine.  Please note that if only 48 percent of Americans support funding Ukraine it makes sense that 52 percent of Congress should STOP all funding of all war in Ukraine ASAP.",conspiracy
BREAKING: A Hazmat crew is being dispatched to the scene of a Union Pacific coal train derailment.@GeneralMCNews,conspiracy
Brunson case denied again,conspiracy
"Rooster legs not working, large dead fish, and testimony of what’s actually going on 3.5 miles away from ground zero.East Palestine Ohio 2 weeks after being attacked. Unbelievable",conspiracy
Today’s newspaper headlines,conspiracy
"#BREAKING: Firefighters are battling a massive fire at an industrial facility by an explosion, resulting in multiple casualties and fatalities.Right now, firefighters are fighting a huge blaze in an industrial building in Medley, Florida, which is thought to have been caused by an explosion. According to reports, two people have passed away and three more have been hurt, while the dark smoke from the fire can be seen from miles away. Additionally, multiple vehicles have been set fire, and the authorities are keeping an eye on the air quality.Follow @caatturd",conspiracy
Happy Presidents’ Day. Jokes on us.,conspiracy
2.19.2023 Ron Paul speaking at the Rage Against the War Machine protest at the Lincoln Monument.,conspiracy
Today’s newspaper headlines,conspiracy
The latest. We are the re evaluation.,conspiracy
"Not many channels I’ve ever recommended, but after speaking with the owner of this channel and vet the content. For those looking for an additional non - MSM source.President Q Leaks is one of the best channels out there on telegram. He is exposing the bad actors and Government one post at a time! There are 1,850 boxes of Classified Documents and 415 gigabytes of electronic records (Phone Calls, Videos... They are trying to censor this Channel and Mainstream media IS NOT reporting this! I highly reccomend you to join this channel! ",conspiracy
Revival update from Kentucky.,conspiracy
Today’s newspaper headlines,conspiracy
Food manufacturing Fires from April 2021-2022,conspiracy
Manufacturing plant on fire in Chicago. How many is that now?,conspiracy
"Hey Patriots, Richard will be in the Russellville, Arkansas area for a meet and greet on Saturday February 18, 2023 at the Russellville country club. This is a free event to come and meet Richard. Please RSVP to rpotcner@gmail.com",conspiracy
Week end talking points while Palestine residents have no clue what the lasting affects will be. We are under attack. #clownshow,conspiracy
"As I review and produce this series of nearly 6 terabytes of pic/vid. What I realize is, it was all a setup (COVID/floyd/J6/etc. What we are witnessing now, is the take down of America/west, in my opinion. Today, it’s a breakneck news feed that no one could keep up with. Keeping us entertained. Some things aren’t going according to plan. Many woke up. However, the powers that be aren’t stopping. There has been no accountability at all. I was at the most substantial events in America. This series (about 10 min each, will show you what actually happened, for the record, if one ever exists in the future.Video edited by: Watch Part 1 of the Docuseries here:  ",conspiracy
South central LA. So many areas in American cities are like this now. A guy pulls out a tazer as I drive past him in this video. So many places in the untied states are so far gone. From small towns to big cities. I wouldn’t be out at night in almost any American city these days.,conspiracy
High end car wash a football field away from the exploding homeless population in Santa Monica California.,conspiracy
Today’s newspaper headlines,conspiracy
The water in Ohio 11 days later... safe!!!,conspiracy
Skies over Palestine Ohio a day or two ago.,conspiracy
"Here is an angle msm will never show. Biden speaking in front of a union yesterday. Stage, red carpet, presidential podium, sign holders, music, pomp, and circumstance. Tiny room, few in attendance.",conspiracy
Today’s newspaper headlines,conspiracy
Yesterday’s newspaper headlines,conspiracy
"Hey Patriots, Richard will be in the Russellville, Arkansas area for a meet and greet on Saturday February 18, 2023 at the Russellville country club. This is a free event to come and meet Richard. Please RSVP to rpotcner@gmail.com",conspiracy
Today’s newspaper headlines,conspiracy
Todays newspaper headlines,conspiracy
"Hey Patriots, Richard will be in the Russellville, Arkansas area for a meet and greet on Saturday February 18, 2023 at the Russellville country club. This is a free event to come and meet Richard. Please RSVP to rpotcner@gmail.com",conspiracy
Today’s newspaper headlines,conspiracy
"What do You believe in?...The stuff they're selling you? — things they're pulling from shelves because it's poisoning you?Quit their programming — Come join us!Talk with one of us and we'll show you how you can make the Switch.PatriotSwitch.com/rcjWhat do you have to lose? Better yet, what do you have to gain?!",conspiracy
Look at what UCLA student are faced with as they leave the dorm to head to class.,conspiracy
Pictures from the last 48 hours in the clown world.,conspiracy
Radiation is off the scale. Get grounded and de-radiate.,conspiracy
Today’s newspaper headlines,conspiracy
"This is one of my Team Leaders Derek. Again just normal everyday people uniting together to create a parallel economy and even more than that, a community of patriots helping other patriots. Book an appointment and come meet some of the team and let them show you what we’re creating together! if it’s for you join us and if not we love you anyways!! Book an appointment: Www.rcjsilver.biz",conspiracy
"I guess these are good steps… However, all We will hear is “I don’t recall” and all we will see is no accountability. TERM LIMITS is what we need. It’s all theater. They will all be dining on $100 steaks together tonight on our dime.",conspiracy
"They say a picture is worth 1000 words. I could take 10,000 pictures like this in America. Los Angeles has the most. It’s sprawling all across the country. It’s under every over pass and bridge here. It’s heartbreaking I wish knew what to do. I give as much as I can. They all have stories. Some vets, some addicts, some evicted. We need a system for them. So many just drive past as if they don’t exist.",conspiracy
"I knew it! Princess Diana is back. After the passing of Queen Elizabeth, Princess Diana finally reappeared and shared her whole truth! Who died in the car accident? Will she be queen now? She will go LIVE in 10 days and reveal her TRUTH!Hurry up and join this channel before it's taken down!",conspiracy
"Non existent lunch rush in Century City. It’s just fascinating to me. Almost three years of up keep, window washing, buffing floors, maintenance etc. Property taxes paid, leases paid??Only thing missing is the people.",conspiracy
Simtury City Los Angeles. It’s all just crazy. I’m really starting to Wonder is some of the small biz is subsidized in some way. I’ve been by so many non busy business especially in cities. I don’t understand (especially with food how they are keeping the doors open.,conspiracy
Today’s newspaper headlines,conspiracy
American the Beautiful  ,conspiracy
"Hey Patriots, Richard will be in the Russellville, Arkansas area for a meet and greet on Saturday February 18, 2023 at the Russellville country club. This is a free event to come and meet Richard. Please RSVP to rpotcner@gmail.com",conspiracy
Container housing in Los Angeles,conspiracy
The political theater bread and circuses Keep paying your taxes and be good slaves.,conspiracy
Are you listening Nurses?,conspiracy
"120 drugs to kill a healthy mom in her 40’s. That’s what the hospitals did and are still doing. Big pharma, hospitals admins, fema, tax money funded. It’s a loop. Settling the lawsuits is the cheap part for them.",conspiracy
Today’s newspaper headlines,conspiracy
10 story Bill board in Holly Wood.,conspiracy
Perverted “Spirit of Justice” at the House of representatives building. wakey wakey. It’s pedophilia in plain sight. It’s everywhere. It’s sick.,conspiracy
So awesome!,conspiracy
Today’s newspaper headlines,conspiracy
"Podcast equip arrives tomorrow. This will be one of my regular guests. As well as many other non echo chamber well informed people. I’ve met thousands of actual real people with no agenda other then the truth. Traveled this country, slept and stayed in your homes. I’m looking forward to connecting us in real meaningful ways. I’ll post the show format tomorrow and want feedback so we can make it beneficial and great for all of us.",conspiracy
"Fear sells. 2 wings same bird. It’s getting harder to listen and read stuff from these people isn’t it?Yawn. White hats, black hats, the plan, fake prophets, frontline crooks so many has beens….They just don’t realize it yet bc you buy their stuff on auto ship. Here is my take on todays “situation update” from the “health ranger”How much crap stored food did you buy?  How long has the ranger and so many others been saying food is running out? Now China is going to invade?? That’s WWW2-3 programming. China owns america already. EMF’s are nonsense. Big boy and little boy were TNT dropped on paper cities. Some of these “truthers” should get out more so they would have more pieces to the puzzle.",conspiracy
"Remember when bill, nick, and ali lushed and led patriots to slaughter on J6? How many millions did they charge for that? Full Audio on locals. They weren’t actually charged anything, they all just got Rich. While J6ers are rotting and being sentenced everyday. Wakey wakey. Great actors get paid a lot I guess. Oh by the way I have 6 terabytes of truth like this. It’s $5 a month and I’m loading it to locals. Oh, and I’m going to call everyone out because I have everyone on tape and I think it’s time to do so. I’m going nuclear soon on locals. Even though I know nuclear bombs, dinosaurs, sports, space, Nasa, elections, and just about everything else is fake. I just like the word Nuclear Nuclear Nuclear Nuclear Nu Clear New nucleus new clueless.",conspiracy
"Today at the Capitol. Fenced off, surveilled, Arm guarded, following orders, protecting selected rulers. Pouncing on Citizens with cameras.You know, the ones whose paper money you use? The ones in bed with lobbyists, China, and corporations. Jokes on you! You can see and hear this video and more from today here Bonus footage also today of Chinese citizens protesting the SEC who took their money and now are censoring them. They get it. It’s called communism. While typical Americans do nothing but scroll, pay tax, and consume.  tt",conspiracy
The time is now to break away from the programming and slave system. We are creating a parallel economy to break free from the dying fiat dollar and allowing the government to dictate our financial well being.Come join us patriots helping patriots  to get educated on what’s really going on. Book an appointment at: ,conspiracy
"Tesla charging station, Elon brain chipping, mail is delivered 6 days a week, heros work here, etc, rant.",conspiracy
"Militant reinforced fencing going up around the Capitol right now, that’s the state of the union.",conspiracy
"I was with Richard all day and we were meeting someone from his channel at a restaurant and a homeless lady came in asking for food, and the bartender kicked her out and Richard went up to the homeless lady and asked her what she wanted. And went to the gas station next door and  bought her a chocolate crossiant, a chocolate vanilla mocha and an egg sandwhich and brought it to her. He works hard on his channel everyday to bring you the news, and he's trying to find a way to make a living doing what he's great at, by showing us American made companies selling good American made products. Richard is doing his best to help us and himself simulatiously. It's alot of pressure, please show him some compassion and grace and trust that he's showing you something he knows you would like and benefit from.",conspiracy
LAX ZZZZZZZZZZZZ-ZAP!,conspiracy
"How any of this got approved, installed, or is allowed to still up i surely don’t know.",conspiracy
Today’s newspaper headlines,conspiracy
Few pictures from this week. I hope everyone had a great week ,conspiracy
"Are you like me? — Are you Serious about effecting change... about making a difference?!Who are you voting for with Your dollars?Every little bit does make a difference... So let's band together and make a Huge impact!Talk to me or one my team members and we'll be happy to show you how you can join the millions of people who are serious about making the change happen — buying the little stuff we use every day from a family-owned American manufacturer — NOT big box, and NOT the companies that are controlling 97% of the brands we know.Go to PatriotSwitch.com/rcj and leave your contact info.One of us will give you a call... Yes, you'll talk with a Real Patriot like you!, and we'll show you how you can switch your shopping, too. So be sure you answer the call!PatriotSwitch.com/rcj",conspiracy
Thank you Dreamer! Giving free professional haircuts to those in need.,conspiracy
"Patriots: Behind The Mic is a series about the digital warriors who are saving freedom.  Too often we see “truthers”, or any other celebrity, as their on-air persona and forget that they are also human beings who are trying to find their way through this crazy matrix just like everyone else.  In this new series, Dr. Z will help us to get to know the people behind their public platforms by hearing their stories about their own personal journeys and the challenges and struggles that they have faced and overcome along the way.",conspiracy
Today’s newspaper headlines,conspiracy
"Ballon down, falling out of sky in Myrtle Beach. 2nd shot caught on tape in the clown world.",conspiracy
Protest happening now in Santa Monica,conspiracy
Right now in Myrtle beach. 3 jets circling ballon.,conspiracy
Today’s newspaper headlines,conspiracy
"This is one of my team leaders chad. Look guys were just normal everyday people trying to educate each other on how to protect and build your wealth.  Patriots helping patriots is what this movement is all about!  Come meet our team and check out what we’re doing, if it’s for you and you want to join us awesome and if not that’s ok we still love you!  Book an appointment here: ",conspiracy
"JUST IN - ""Explosion in the sky"" above Billings, Montana.@disclosetv",conspiracy
Chinese ballon now floating over Missouri.,conspiracy
UPDATE: First Visuals of the Chinese Spy Balloon moving over Kansas City in the state of Missouri.@GeneralMCNews,conspiracy
The Gov work from home model doesn’t work. I’ve been showing you empty gov buildings for years now. Don’t forget no gov employee has missed a paycheck since covid. In fact they got raises.,conspiracy
So I’ve been driving not keeping up. 9 more hours today. So there is a Chinese “spy” ballon now? Over america? What a joke. I’m not tracking it at all. I can tell you it’s not a spy ballon. Stupidest thing I’ve heard in a long time. They make the phone (with slaves you are looking at reading this now.,conspiracy
Today’s newspaper headlines,conspiracy
Today’s newspaper headlines,conspiracy
"I’m traveling through Denver, to Reno, to LA. Big blue skies in Kansas/Colorado border. So nice to not be under Chem trails. Beautiful blue sky line.",conspiracy
Today’s newspaper headlines,conspiracy
"We’re creating solutions together, moving away from the dying fiat dollar and buying American!  Come join us patriots helping patriots, get a debit card you can spend against your precious metals or have them physically sent to you! There is options for everyone! At least do yourself a favor of checking it out, we want to educate our fellow patriots then you make the decision that is right for you and your family! Book an appointment at:Www.rcjsilver.biz",conspiracy
Many people don’t want to be on camera these days. We don’t hear much about what regular Americans are talking about. They gave me the watchman Decree and are praying for revival and of God to return to America under the constitution.,conspiracy
"This is the Jester costume of the scripted clown show that is “pro sports.” It’s ritual idolatry. I’ve been subjected to some tv lately in my travels. In short, turn off your tv. It’s horrific. In this case “sport” all scripted. The Eagles have been to superbowls 15, 39, 52, and now 5715+39+52+57=163They finished 16-3 including playoffs.Lincoln was elected 163 yrs agoEagles play in Lincoln Financial The “super bowl” is being broadcast on 2/12 -Abraham Lincoln birthday who freed the slaves and now we have the first time ever 2 black qbs in the superbowl Patrick mahomes does the State Farm commercials now he goes to State Farm Stadium to play in the superbowlESPN is reporting this superbowl features the 2 youngest qb vs qb ever at combined age of 51yrs old while the half time performer will be Rhianna who was born on the 51st day of the yearAdditionally....Chris Stapleton will be singing the National Anthem....his birthday is April 15thLincoln died on April 15th....",conspiracy
Whispering arch at union station hotel saint Loius.,conspiracy
Amazing light show at union station in St. Louis. I stopped by bc the building was beautiful on the outside. We don’t build anything like this anymore. It sat vacant for many years.,conspiracy
Tracy and Rick Ellis bought and are broadcasting on their own FM stations in St Louis. Real uncensored talk radio. They hosted are a real estate show for many years on a “ conservative talk” station. After the election that station censored them. This is some of the amazing stuff patriots are doing. Thanks for having me out Tracy and Rick! ,conspiracy
I was on  yesterday. Patriot owned radio station running 24 hours truth programming in Saint Louis. Here is a clip. They also have an app which I’ll post a link to.,conspiracy
Today’s newspaper headlines,conspiracy
Glen Burnie Maryland last week.,conspiracy
"Yesterday On I-70 west in PA. Many trump billboards, trump flags, trump signs up all over America.",conspiracy
Today’s newspaper headlines,conspiracy
Nothing happening is Washington. Small protest. The msm propaganda machine doesn’t seem to be working anymore,conspiracy
I’m in dc tracking tonight’s and this weekends events if any. The mainstream is formulating a heavy narrative. I’m hearing comparisons to Rodney king. I’ve been receiving comms over email and contacts about a March on k street by blm and some other stuff. I’ll be checking it out and posting if I see anything. That’s the latest.,conspiracy
VP Motorcade leaving downtown headed towards the Observatory just before the release of video out of Memphis. That’s the latest.,conspiracy
"If you want to know where we are at this video tells you. I wanted to show some beauty in the glass reflections. While doing so the store manager asked me if I was casing the place? Mornings grocery shoppers are generally older and I’d say 70% are wearing masks. I’m watching them move slow, no energy, just going through the motions after God knows how many flu/shingles/COVID shots etc. This is the reality in most places. Humanity in America has been highly dumbed down, programmed, and poisoned. Not to mention fined and taxed at every turn. None the less, the cloud reflection is still beautiful",conspiracy
New ad from Burberry. Its an emotion and energy suck. Point is it’s not going to stop. More reason to turn off all tv/msm/sports/etc. The current world at large is a propaganda train wreck. It’s sick.,conspiracy
Today’s newspaper headlines,conspiracy
"The future of food delivery. Los Angeles, CA 1/26/2023",conspiracy
DC bus advertising. Get a flu shot. Child in mask doing school work. It’s insane. People were upset about belenciga….,conspiracy
"Very few channels I’ve ever recommended, but I’ve taken the time to speak to the owner of this channel and vet the content, for those looking for an additional non-MSM source.President Q is one of the best channels out there on telegram. He is exposing the bad actors and Government one post at a time! America is the people’s country I highly reccomend you to join this channel! ",conspiracy
This is what the federal areas of DC looks like now on a Monday morning.,conspiracy
Update. Lots going on. I’m grateful for all of you ,conspiracy
Today’s newspaper headlines. War machine ramping up.,conspiracy
Venezuela two days ago.,conspiracy
Last night : Justin Trudeau swarmed by angry protestersJoin @CBKNEWS,conspiracy
"NEW - Director of research at Pfizer' reveals firm is exploring manipulating COVID through ""Directed Evolution"" to make it ""more potent"" by infecting monkeys to create new vaccines.""Don't tell anyone this...There is a risk...have to be very controlled to make sure this virus you mutate doesn't create something...the way that the virus started in Wuhan, to be honest.""Project Veritas claim they have obtained internal Pfizer documents verifying Jordan Walker as ""Pfizer Director, Research & Development Strategic Operations.""Follow us on   l Join @CBKNEWS",conspiracy
"Well week 3 of 2023, was complete craziness! Surprise, surprise!? Things are declining out there. We have to come together and build a new system that works   That’s the bottom line. Video editing by: ",conspiracy
The black light phenomenon continues. It’s all nuts!,conspiracy
There is so much brand new unoccupied commercial real estate I can’t keep track.This is just outside BWI. It’s nuts. Just like everything else these days.,conspiracy
4 min clip from Russia mainstream. it’s nuts. Everyone calling me and messaging me are all talking about WWWIII. Also apparently there is a Russian destroyer 22 miles off the coast of DC.,conspiracy
"WWWIII talk is heating up on mainstream. NATO rep “this is war against Russia” All sorts of NATO armament being sent Leopard, Abrams, patriot missles, soon F-16. Not looking good.",conspiracy
Today’s newspaper headlines,conspiracy
Protest in France by restaurants owners over rising energy bills.,conspiracy
BREAKING! JFK JR JUST WENT LIVE. +11.000 people are already accepted and watching the stream as you can see! We are working on approving new members WATCH HERE ,conspiracy
Today’s newspaper headlines,conspiracy
Happening now: Venezuela people rising up against tyranny.,conspiracy
"All signs point toward safe investment.Build and secure your wealth with a patriot owned, revolutionary, game changing precious metal company 7KIt’s truly time to ban together as patriots. Creating our own parallel system/economy. It’s is happening and I just want you to be part of it. Hope to see you on the calls. ",conspiracy
Why are they still building huge buildings. Who are they for? Considering almost everyone is “working from home” The looming commercial real estate crisis is daunting. It’s already trickled down and destroyed small biz. What happens when the numbers get released of all the unpaid lease space?,conspiracy
"This is what the federal reserve looks like in Washington. Huge remodel under way. They know what’s next, they planned it all. The evidence of digital everything is everywhere. Looks to me like digital currency is coming and quick. It’s a money maker for them. Further dependence and enslavery for the average citizens who depend on gov and central banks. We are literally watching it happen.",conspiracy
#RTMJoin Resist the Mainstream@ResisttheMainstream,conspiracy
President bidenPlease help my son escape addiction the way you helped hunter advertising truck rolling around Washington,conspiracy
“Hunter Hiden” painted on bridge on 495 as you approach the Mormon temple. It’s used to say “Run Dorothy” years ago. Happy Monday!,conspiracy
Today’s newspaper headlines,conspiracy
2 dozen limit per customer on eggsFood Lion Waldorf Maryland,conspiracy
I can’t even keep track anymore of the famous or people on the world stage that are said to have died suddenly. Seems like there is a new one every day.,conspiracy
"Omg, look at this Stellar Bank brochure that I received in my mail today letting me know that my local bank is switching to Stellar bank!!! I’m in Houston, Tx!",conspiracy
"Wells Fargo, the country's number one mortgage lender, is exiting the market.  First, is the new Tax bill which is getting rid of income tax and IRS. Now  the number #1 mortgage  player is leaving the market.NESARA is being covertly implemented folks! 🥳",conspiracy
QR codes needed to purchase at the airport.,conspiracy
"Cashless, waiterless, digital restaurant at Reagan airport.",conspiracy
Today’s newspaper headlines,conspiracy
Psychopath,conspiracy
Reagan airport going cashless. Buffalo airport New York is already 100% cashless. Credit card readers integrated into the tables.,conspiracy
".Let us explain something to you. Rumors are swirling about Trump.  ⁃ Because he is a threat for them.Rumors about Q. ⁃ Because they know the truth.Rumors about TRB Membership Handbooks. ⁃ Because they are helping you become financially stable.They want to stop Trump, they want to destroy Q, and they want to make you think that the TRB Membership Handbook is a LIE because they can make your future brighter. You will finally be able to provide to your loved ones everything you've ever dreamed of.Experts are saying that this is the easiest way to become a millionaire! How? Utilize the TRB Handbook verification system to redeem the checks and cards that have been previously obtained.    ! ’   !   .   …  ?'        .. ’  ..  .         !Get at least 20x TRB Handbooks and SECURE YOUR FUTURE! ",conspiracy
"Information update from Brazil on the conditions of the prisoners after the protest at the Capitol. Women held with no toiletries, suicides, heart conditions after a forced shot once in prison is what I’m being told. I’ve seen what looks like airplane hangers there full of prisoners. Elderly, children, pets.",conspiracy
"Billy clubs, kicking in the back, brutality on the streets of Paris today. As usual there will be no accountability for any this. Gets harder and harder to watch this stuff.",conspiracy
Paris now. The west is a complete mess.,conspiracy
Paris France -unions  protests today over pension and the raising of retirement age. Turning ugly now as police clash with protesters.,conspiracy
"Here is some vid I took yesterday of planes spraying. They were lower then usual. Appears to be Amazon. It’s shaky, I was holding my breath to keep the camera as steady as I could.",conspiracy
Debt ceiling narrative. They will kick the can for a bit and then raise the ceiling.,conspiracy
Today’s newspaper headlines,conspiracy
"Things are rapidly changing everywhere! I took the steps to make sure I’m protected and want to make sure all of you are too! I am apart of a company offering real solutions to people, a debit card backed by your precious metals!! It’s Unheard of! This company is doing revolutionary things.  You can take physical possession of all of your metals or you can leave some in a vault and use your debit card to spend against your precious metals, you can even buy fractional gold and silver if you only have $1 to start getting your metals this company has the solutions!! Patriots need to unite and create our own parallel economy, that’s what I’m trying to do with all this, buying American and getting ahead of the system.  It’s free to book an appointment and actually see for yourself just how powerful what we are creating is! You can book an appointment at: ",conspiracy
WATCH: Pfizer CEO Albert Bourla gets absolutely destroyed by these reporters.@GeneralMCNews,conspiracy
"Socials security administration abandoned. The only people working at these buildings are the building engineer, janitorial service, and armed guards. The writing isn’t just on the wall it’s in your face. It’s a complete facade. The grass gets cut, the snow makers are installed, and windows are getting washed. Completely abandoned government and private commercial buildings are everywhere if you take the time to look up. The powers that be don’t want you looking up or asking questions… When you look up what comes next is clear.",conspiracy
"""    is one of the best channels outthere on Telegram!""I highly recommend you to join one of the most honest, authentic and truth telling channels on Telegram and it comes with aterrific sense of humor too!' says one follower.He is exposing the bad actors andGovernment one post at a time!America is the people's country!""Join and Shar[eThe Q Fil](  es",conspiracy
Today’s newspaper headlines,conspiracy
Heavy spraying today.,conspiracy
Check out this Verizon campus on a Tuesday afternoon. Abandoned. How much longer do you think these tech companies and many other sectors are going to pay people to “work” from home?,conspiracy
Verizon campus closed forever. AI is already replacing jobs and is going to replace the white collar tech sector. Have you seen what chatgt is already doing?,conspiracy
Bivalent booster billboard in MD,conspiracy
Big box corp stores will be closing. Everything is going digital.  All consumer goods including food will be delivered to your door.,conspiracy
Today’s newspaper headlines,conspiracy
Huge coal power plant in southern Maryland permanently closed.,conspiracy
"Overgrowth, trash, signs down all over 495 Washington. This isn’t the best vid of it, but you get the idea. Also so many power lines are wrapped with vines.",conspiracy
Today as Safeway grocery store. Will it ever end?,conspiracy
"Innocent victims is a group ofpeople (LIKE ME who suffered by the mainstream media and were declared ‘DEAD’ so they could hide. Now, we are back and we already shocked the world with a couple of audio tapes that prove WE ARE ALIVE.Truth Bombs, shocking confessions as audio tapes, this is real. Due to security reasons this group is extremely PRIVATE and CONFIDENTIAL.JOIN AND SHARE THIS GROUP ",conspiracy
Today’s newspaper headlines,conspiracy
Are the stars closer/brighter? I’ve tried for years to take picture of the stars from my phone and they never come out. Tonight I was looking up and took these. Almost feels like I could each out and grab them. Anyone else noticing this?,conspiracy
"This is a call I did with Todd Collins that highlights some of the member benefits of 7k, for anyone who hasn’t made an appointment but was curious check out our call. If you’re not interested that’s fine each person has free will, I however stand by and back this company 100% truly is patriots helping patriots! If you want more information or to become apart of our 7k team, book an appointment at: ",conspiracy
"Most of us are really struggling with the current economic climate.  We’re trying to figure out how to stretch our hard-earned dollars and get through the challenges we see coming in the months ahead.   A 7K Metals Membership offers a way to help all of us through this period. I’ve spent a great deal of time utilizing their platform, and I am so excited about what I’ve found.  It’s one of the most amazing things I’ve ever stumbled across! I care enough about you all that I want to share it with you too.  I’d like to invite you to a presentation of an overview of the member benefits. Then, you can decide if you want to grab a membership for yourself and build a parallel economy with us! Book an appointment with my team members at: ",conspiracy
"Lately when I get the newspaper I hold them up and ask questions loudly. In the brainwashed hoity-toity zombie grocery stories no one cares. However, I was in Baltimore and other underserved communities in the last few  days asking the same questions. Those people are pissed. They are all shaking their heads. You can see the difficulty in theirs eyes. We’ve had enough. The tide is turning. I know bc I engage and talk to them.",conspiracy
"Birmingham Alabama- An American city that’s not only in sharp decline, but also effectively abandoned. The people have left the cities.",conspiracy
Today’s newspaper headlines,conspiracy
"2023 so far, has shown to be very eventful. I will continue to bring you updates every week as I have been. Updates of real things happening on this earth. And more importantly, solutions and ways to brings us all together to empower get us to get off our phones, come together and get in action, because that is what’s needed now. Video credit by:  ",conspiracy
"It's time to leave the Matrix!!Every time you brush your teeth, take a shower, do your dishes or laundry... the boring stuff - but it makes a difference!Schedule a time to talk with me or one of my A-Team members - then look for a call from one of us, and have a real conversation with another Patriot about how you can Switch and stop feeding into the matrix!PatriotSwitch.com/rcj",conspiracy
Some of my thoughts.,conspiracy
The latest from the matrix which is clearly collapsing on itself. Take a look.,conspiracy
Pics from today. This is what it looks like out in the USA every where.,conspiracy
Downtown DC is dead now on MSM. They are also running a story about not taking your dog out bc of flu and to get your dogs vaccinated. Clown word,conspiracy
Suburbia USA is stuck in a dystopian covid timeline nightmare. Roads still closed for outdoor seating. Plastic dividers up. Wear a mask signs still up everywhere. So many people are wearing masks it blows my mind. It’s functioning but barely. Picnic tables and chairs piled up in the road. It’s a total mess and no one seems to care.,conspiracy
"Black pyramid in Wheaton md. Owl, bats, eye, all in plain sight.",conspiracy
"Mr. Pool has been re-approved on Telegram. His previous channel was forcibly shut down at the request of certain people from the office. They didn't seem to like that Mr. Pool started releasing all the documents about the war in Ukraine, which could immediately remove Biden from office. He continues to reveal every GOVERNMENT SECRET.Biden's iCloud? Nothing is a coincidence, a chilling video has surfaced of Joe Biden personally talking about the contents of Hunter's phone. This video is privatized and can only be found on this channel. The end of Biden has come.You have 24 HOURS to join this channel. After that I will deactivate the invitation links. EVERY LIE WILL BE EOSED.Prepare backups.Archive everything.",conspiracy
Today’s newspaper headlines,conspiracy
Robot dogs spotted in Washington,conspiracy
Bus ads in Washington. Totally insane.,conspiracy
"THIS JUST IN: GITMO TV ARE ON TELEGRAM AGAIN!YOU WILL BE ABLE TO JOIN THIS CHANNEL ONLY FOR A FEW DAYS BEFORE THE INVITE LINK EIRES! THEY ALREADY STARTED GIVING ALL THE SECRETS OUT - AND IT IS WORSE THAN YOU CAN EVER IMAGINE!If you are ready for a change, if you are ready to know the truth, SHARE this channel and join FAST.",conspiracy
Today’s newspaper headlines,conspiracy
Update- I basically got booted out of a restaurant today for mentioning potential vax injury in conversation over NFL player dropping on field. Suburbia in dc metro is Lost.  Sheeple people. A friend of mine went to court today to protect his 6 year old from getting the bio weapon. Judge ruled against him. Shot will now be forced on his 6 year old daughter. It’s sick. These people are sick.,conspiracy
1.12.2023 Washington DC COUNT How Many Times Today I was THREATENED and told to STOP Filming.    I am here to show the public what is really happening.   Stand Up for me if I was not doing this we would not know that Washington DC is funding Covid BS…Comment and tell me what do you think of these insane people telling me to wear a mask and stop filming.,conspiracy
Vaccine squad spotted today in Washington. They just won’t let it go ever. Plastic barriers and signage still up all over.,conspiracy
We are in a renaissance where there are solutions with loads of benefits. 7k metals is coming out with a debit card that directly trades against your hard assets (silver/gold at point of sale. It’s a GAME CHANGERFind out more by making and appointment at ,conspiracy
The latest from the clown show.,conspiracy
"Houston, Texas on 1/11/23 - they are building more along the expressway - yet no one works in this buildings.",conspiracy
This is K street in Washington the other day. This was home to the highest paid lawyers and lobbyist.. Before the plandemic there was a waiting list for space. Now it’s for lease everywhere.,conspiracy
"Latest update-I found a place to stay praise God! Reality in the world is a mess. I’m being bombarded from you about solutions and the interest is very high. So I’m going to do more on that. Also, I’m running a few more ads behind newspaper to bridge the financial gap for me instead of asking for donations. The great American come back is happening but it’s mostly behind the scenes. It’s up to you to be part of it.",conspiracy
It’s over for commercial office space.,conspiracy
Today’s newspaper headlines,conspiracy
These are all my current social Media channels ,conspiracy
"ATTENTION Because of security reasons and to keep the evidence safe - This is the last time you will be able to request to join the Private Q Evidence channel - Soon, this link will be deleted and you won’t be able to join. This is your last chance - share this ONLY with those who you think should be inside our private group.",conspiracy
Today while planes were grounded F-16’s were flying around BWI (Baltimore. Pitsburg airport had military touch and goes. Not sure what it means but those are two reports that came to me from people I trust.,conspiracy
Los Angeles,conspiracy
"DEVELOPING: A large fire has erupted at a chemical plant in La Salle, Illinois.Multiple explosions reported at Carus Chemical. Heavy fire and smoke conditions are present. Carus Chemical manufactures chemicals used in water treatment.@GeneralMCNews",conspiracy
"Statement from President Trump. We need free speech and free press.Twitter files, hunter lap top, systematic collusion, censorship, corruption, criminality, rigged election, and more. The reason we are so stuck and nothing is getting any better is because the USA has no government accountability. It’s time for the Republican house to take action.",conspiracy
Today’s newspaper headlines,conspiracy
"Full ground stop on planes in America. Still plenty of Chem trails being sprayed. It’s all coming to pass. No cough medicine on shelves, eggs and milk here and there. Prices up. Air travel is a total mess. Slow boiling of the frog.",conspiracy
Free Masonic temple lit purple.  Empty trains. So few people. Sometimes it truly feels like people are just missing.,conspiracy
NOW - Biden smiles and dodges questions on classified documents discovery again at meeting with Trudeau.@disclosetv,conspiracy
People dropping like flies is the new normal. It’s all insane.,conspiracy
Today’s newspaper headlines,conspiracy
The moon is so bright! Good night everyone,conspiracy
"Banks are closing up everywhere. The ones that are open have skeleton crews. Commercial real estate is in free fall. Big box and grocery remain. Almost no new biz or small biz opening anywhere. Yet, they still are building housing and mixed use all over. It can’t keep going on like this much longer.",conspiracy
"Who is   ? I’ve been following his channel lately, and there are codes and encrypted messages that are very interesting. Exposing Our Government's Secrets and Lies in one EPIC channel!I am very curious to find out the identity of this mysterious guy. Sensitive info on the verge, looks intriguing.""The Truth is being revealed...""You might want to follow and share this channel before it’s gone.” The channel is private so you will need to be approvedJoin  Q now ",conspiracy
"Morning update. Commuter lots vacant in dc metro. The white collar never went back to work. It’s the digital shift. Isolation, no water cooler talk, no socialization. At the same (duality many incredible things are happening. While they run the brainwash Disconnection op, we are building the reconnection parallel reality. We are hanging tough and banding together in new ways. It’s bumpy, we are getting through it, and God wins!You can always message me directly @dpotcner",conspiracy
The Supreme Court denies to hear Brunson. Lower court decision Stands.Credit to penguin 6 on YouTube,conspiracy
"Considering elections don’t exist, the whole Idea of 2024 is a joke any way. -J6 2.0 unfolds in Brazil, the masses sleep, and msm just carry the torch for our rulers.",conspiracy
Today’s newspaper headlines,conspiracy
